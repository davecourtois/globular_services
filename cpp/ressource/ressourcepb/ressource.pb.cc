// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ressource.proto

#include "ressource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionParameterRessourcePermission_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GroupSyncInfos_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LdapSyncInfos_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogInfo_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ressource_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RessourcePermission_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_ressource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ressource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserSyncInfos_ressource_2eproto;
namespace ressource {
class AccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Account> _instance;
} _Account_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Role> _instance;
} _Role_default_instance_;
class RegisterAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRqst> _instance;
} _RegisterAccountRqst_default_instance_;
class RegisterAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRsp> _instance;
} _RegisterAccountRsp_default_instance_;
class DeleteAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRqst> _instance;
} _DeleteAccountRqst_default_instance_;
class DeleteAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRsp> _instance;
} _DeleteAccountRsp_default_instance_;
class AuthenticateRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticateRqst> _instance;
} _AuthenticateRqst_default_instance_;
class AuthenticateRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticateRsp> _instance;
} _AuthenticateRsp_default_instance_;
class RefreshTokenRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshTokenRqst> _instance;
} _RefreshTokenRqst_default_instance_;
class RefreshTokenRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshTokenRsp> _instance;
} _RefreshTokenRsp_default_instance_;
class AddAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRqst> _instance;
} _AddAccountRoleRqst_default_instance_;
class AddAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRsp> _instance;
} _AddAccountRoleRsp_default_instance_;
class RemoveAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRqst> _instance;
} _RemoveAccountRoleRqst_default_instance_;
class RemoveAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRsp> _instance;
} _RemoveAccountRoleRsp_default_instance_;
class CreateRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRqst> _instance;
} _CreateRoleRqst_default_instance_;
class CreateRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRsp> _instance;
} _CreateRoleRsp_default_instance_;
class DeleteRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRqst> _instance;
} _DeleteRoleRqst_default_instance_;
class DeleteRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRsp> _instance;
} _DeleteRoleRsp_default_instance_;
class AddRoleActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionRqst> _instance;
} _AddRoleActionRqst_default_instance_;
class AddRoleActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionRsp> _instance;
} _AddRoleActionRsp_default_instance_;
class RemoveRoleActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRqst> _instance;
} _RemoveRoleActionRqst_default_instance_;
class RemoveRoleActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRsp> _instance;
} _RemoveRoleActionRsp_default_instance_;
class AddApplicationActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionRqst> _instance;
} _AddApplicationActionRqst_default_instance_;
class AddApplicationActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionRsp> _instance;
} _AddApplicationActionRsp_default_instance_;
class RemoveApplicationActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRqst> _instance;
} _RemoveApplicationActionRqst_default_instance_;
class RemoveApplicationActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRsp> _instance;
} _RemoveApplicationActionRsp_default_instance_;
class GetAllActionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllActionsRqst> _instance;
} _GetAllActionsRqst_default_instance_;
class GetAllActionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllActionsRsp> _instance;
} _GetAllActionsRsp_default_instance_;
class DeleteApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRqst> _instance;
} _DeleteApplicationRqst_default_instance_;
class DeleteApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRsp> _instance;
} _DeleteApplicationRsp_default_instance_;
class RessourcePermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RessourcePermission> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr role_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr application_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr service_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr peer_;
} _RessourcePermission_default_instance_;
class GetPermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermissionsRqst> _instance;
} _GetPermissionsRqst_default_instance_;
class GetPermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermissionsRsp> _instance;
} _GetPermissionsRsp_default_instance_;
class SetPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPermissionRqst> _instance;
} _SetPermissionRqst_default_instance_;
class SetPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetPermissionRsp> _instance;
} _SetPermissionRsp_default_instance_;
class DeletePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePermissionsRqst> _instance;
} _DeletePermissionsRqst_default_instance_;
class DeletePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePermissionsRsp> _instance;
} _DeletePermissionsRsp_default_instance_;
class GetAllFilesInfoRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllFilesInfoRqst> _instance;
} _GetAllFilesInfoRqst_default_instance_;
class GetAllFilesInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllFilesInfoRsp> _instance;
} _GetAllFilesInfoRsp_default_instance_;
class GetAllApplicationsInfoRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllApplicationsInfoRqst> _instance;
} _GetAllApplicationsInfoRqst_default_instance_;
class GetAllApplicationsInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllApplicationsInfoRsp> _instance;
} _GetAllApplicationsInfoRsp_default_instance_;
class UserSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserSyncInfos> _instance;
} _UserSyncInfos_default_instance_;
class GroupSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GroupSyncInfos> _instance;
} _GroupSyncInfos_default_instance_;
class LdapSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LdapSyncInfos> _instance;
} _LdapSyncInfos_default_instance_;
class SynchronizeLdapRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SynchronizeLdapRqst> _instance;
} _SynchronizeLdapRqst_default_instance_;
class SynchronizeLdapRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SynchronizeLdapRsp> _instance;
} _SynchronizeLdapRsp_default_instance_;
class SetRessourceOwnerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetRessourceOwnerRqst> _instance;
} _SetRessourceOwnerRqst_default_instance_;
class SetRessourceOwnerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetRessourceOwnerRsp> _instance;
} _SetRessourceOwnerRsp_default_instance_;
class GetRessourceOwnersRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRessourceOwnersRqst> _instance;
} _GetRessourceOwnersRqst_default_instance_;
class GetRessourceOwnersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRessourceOwnersRsp> _instance;
} _GetRessourceOwnersRsp_default_instance_;
class DeleteRessourceOwnerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRessourceOwnerRqst> _instance;
} _DeleteRessourceOwnerRqst_default_instance_;
class DeleteRessourceOwnerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRessourceOwnerRsp> _instance;
} _DeleteRessourceOwnerRsp_default_instance_;
class DeleteRessourceOwnersRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRessourceOwnersRqst> _instance;
} _DeleteRessourceOwnersRqst_default_instance_;
class DeleteRessourceOwnersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRessourceOwnersRsp> _instance;
} _DeleteRessourceOwnersRsp_default_instance_;
class ValidateTokenRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateTokenRqst> _instance;
} _ValidateTokenRqst_default_instance_;
class ValidateTokenRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateTokenRsp> _instance;
} _ValidateTokenRsp_default_instance_;
class ValidateApplicationAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateApplicationAccessRqst> _instance;
} _ValidateApplicationAccessRqst_default_instance_;
class ValidateApplicationAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateApplicationAccessRsp> _instance;
} _ValidateApplicationAccessRsp_default_instance_;
class ValidatePeerAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidatePeerAccessRqst> _instance;
} _ValidatePeerAccessRqst_default_instance_;
class ValidatePeerAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidatePeerAccessRsp> _instance;
} _ValidatePeerAccessRsp_default_instance_;
class ValidatePeerRessourceAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidatePeerRessourceAccessRqst> _instance;
} _ValidatePeerRessourceAccessRqst_default_instance_;
class ValidatePeerRessourceAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidatePeerRessourceAccessRsp> _instance;
} _ValidatePeerRessourceAccessRsp_default_instance_;
class ValidateUserAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateUserAccessRqst> _instance;
} _ValidateUserAccessRqst_default_instance_;
class ValidateUserAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateUserAccessRsp> _instance;
} _ValidateUserAccessRsp_default_instance_;
class ValidateUserRessourceAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateUserRessourceAccessRqst> _instance;
} _ValidateUserRessourceAccessRqst_default_instance_;
class ValidateUserRessourceAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateUserRessourceAccessRsp> _instance;
} _ValidateUserRessourceAccessRsp_default_instance_;
class ValidateApplicationRessourceAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateApplicationRessourceAccessRqst> _instance;
} _ValidateApplicationRessourceAccessRqst_default_instance_;
class ValidateApplicationRessourceAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateApplicationRessourceAccessRsp> _instance;
} _ValidateApplicationRessourceAccessRsp_default_instance_;
class AccountExistRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRqst> _instance;
} _AccountExistRqst_default_instance_;
class AccountExistRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRsp> _instance;
} _AccountExistRsp_default_instance_;
class DeleteAccountPermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountPermissionsRqst> _instance;
} _DeleteAccountPermissionsRqst_default_instance_;
class DeleteAccountPermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountPermissionsRsp> _instance;
} _DeleteAccountPermissionsRsp_default_instance_;
class DeleteRolePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRolePermissionsRqst> _instance;
} _DeleteRolePermissionsRqst_default_instance_;
class DeleteRolePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRolePermissionsRsp> _instance;
} _DeleteRolePermissionsRsp_default_instance_;
class LogInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogInfo> _instance;
} _LogInfo_default_instance_;
class LogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogRqst> _instance;
} _LogRqst_default_instance_;
class LogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogRsp> _instance;
} _LogRsp_default_instance_;
class DeleteLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogRqst> _instance;
} _DeleteLogRqst_default_instance_;
class DeleteLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogRsp> _instance;
} _DeleteLogRsp_default_instance_;
class SetLogMethodRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLogMethodRqst> _instance;
} _SetLogMethodRqst_default_instance_;
class SetLogMethodRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLogMethodRsp> _instance;
} _SetLogMethodRsp_default_instance_;
class ResetLogMethodRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetLogMethodRqst> _instance;
} _ResetLogMethodRqst_default_instance_;
class ResetLogMethodRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetLogMethodRsp> _instance;
} _ResetLogMethodRsp_default_instance_;
class GetLogMethodsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogMethodsRqst> _instance;
} _GetLogMethodsRqst_default_instance_;
class GetLogMethodsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogMethodsRsp> _instance;
} _GetLogMethodsRsp_default_instance_;
class GetLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogRqst> _instance;
} _GetLogRqst_default_instance_;
class GetLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogRsp> _instance;
} _GetLogRsp_default_instance_;
class ClearAllLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllLogRqst> _instance;
} _ClearAllLogRqst_default_instance_;
class ClearAllLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllLogRsp> _instance;
} _ClearAllLogRsp_default_instance_;
class PeerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Peer> _instance;
} _Peer_default_instance_;
class RessourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ressource> _instance;
} _Ressource_default_instance_;
class SetRessourceRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetRessourceRqst> _instance;
} _SetRessourceRqst_default_instance_;
class SetRessourceRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetRessourceRsp> _instance;
} _SetRessourceRsp_default_instance_;
class ActionParameterRessourcePermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionParameterRessourcePermission> _instance;
} _ActionParameterRessourcePermission_default_instance_;
class SetActionPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetActionPermissionRqst> _instance;
} _SetActionPermissionRqst_default_instance_;
class SetActionPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetActionPermissionRsp> _instance;
} _SetActionPermissionRsp_default_instance_;
class GetActionPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActionPermissionRqst> _instance;
} _GetActionPermissionRqst_default_instance_;
class GetActionPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActionPermissionRsp> _instance;
} _GetActionPermissionRsp_default_instance_;
class RemoveRessourceRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRessourceRqst> _instance;
} _RemoveRessourceRqst_default_instance_;
class RemoveRessourceRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRessourceRsp> _instance;
} _RemoveRessourceRsp_default_instance_;
class GetRessourcesRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRessourcesRqst> _instance;
} _GetRessourcesRqst_default_instance_;
class GetRessourcesRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRessourcesRsp> _instance;
} _GetRessourcesRsp_default_instance_;
class RemoveActionPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveActionPermissionRqst> _instance;
} _RemoveActionPermissionRqst_default_instance_;
class RemoveActionPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveActionPermissionRsp> _instance;
} _RemoveActionPermissionRsp_default_instance_;
class CreateDirPermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDirPermissionsRqst> _instance;
} _CreateDirPermissionsRqst_default_instance_;
class CreateDirPermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDirPermissionsRsp> _instance;
} _CreateDirPermissionsRsp_default_instance_;
class RenameFilePermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RenameFilePermissionRqst> _instance;
} _RenameFilePermissionRqst_default_instance_;
class RenameFilePermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RenameFilePermissionRsp> _instance;
} _RenameFilePermissionRsp_default_instance_;
class DeleteDirPermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteDirPermissionsRqst> _instance;
} _DeleteDirPermissionsRqst_default_instance_;
class DeleteDirPermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteDirPermissionsRsp> _instance;
} _DeleteDirPermissionsRsp_default_instance_;
class DeleteFilePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteFilePermissionsRqst> _instance;
} _DeleteFilePermissionsRqst_default_instance_;
class DeleteFilePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteFilePermissionsRsp> _instance;
} _DeleteFilePermissionsRsp_default_instance_;
class RegisterPeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRqst> _instance;
} _RegisterPeerRqst_default_instance_;
class RegisterPeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRsp> _instance;
} _RegisterPeerRsp_default_instance_;
class GetPeersRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRqst> _instance;
} _GetPeersRqst_default_instance_;
class GetPeersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRsp> _instance;
} _GetPeersRsp_default_instance_;
class DeletePeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRqst> _instance;
} _DeletePeerRqst_default_instance_;
class DeletePeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRsp> _instance;
} _DeletePeerRsp_default_instance_;
class AddPeerActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionRqst> _instance;
} _AddPeerActionRqst_default_instance_;
class AddPeerActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionRsp> _instance;
} _AddPeerActionRsp_default_instance_;
class RemovePeerActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRqst> _instance;
} _RemovePeerActionRqst_default_instance_;
class RemovePeerActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRsp> _instance;
} _RemovePeerActionRsp_default_instance_;
}  // namespace ressource
static void InitDefaultsscc_info_Account_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_Account_default_instance_;
    new (ptr) ::ressource::Account();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::Account::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Account_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AccountExistRqst_default_instance_;
    new (ptr) ::ressource::AccountExistRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AccountExistRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AccountExistRsp_default_instance_;
    new (ptr) ::ressource::AccountExistRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AccountExistRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ActionParameterRessourcePermission_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ActionParameterRessourcePermission_default_instance_;
    new (ptr) ::ressource::ActionParameterRessourcePermission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ActionParameterRessourcePermission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionParameterRessourcePermission_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionParameterRessourcePermission_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddAccountRoleRqst_default_instance_;
    new (ptr) ::ressource::AddAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddAccountRoleRsp_default_instance_;
    new (ptr) ::ressource::AddAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddApplicationActionRqst_default_instance_;
    new (ptr) ::ressource::AddApplicationActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddApplicationActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddApplicationActionRsp_default_instance_;
    new (ptr) ::ressource::AddApplicationActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddApplicationActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddPeerActionRqst_default_instance_;
    new (ptr) ::ressource::AddPeerActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddPeerActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddPeerActionRsp_default_instance_;
    new (ptr) ::ressource::AddPeerActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddPeerActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddRoleActionRqst_default_instance_;
    new (ptr) ::ressource::AddRoleActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddRoleActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AddRoleActionRsp_default_instance_;
    new (ptr) ::ressource::AddRoleActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AddRoleActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticateRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AuthenticateRqst_default_instance_;
    new (ptr) ::ressource::AuthenticateRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AuthenticateRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticateRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticateRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticateRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_AuthenticateRsp_default_instance_;
    new (ptr) ::ressource::AuthenticateRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::AuthenticateRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticateRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticateRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllLogRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ClearAllLogRqst_default_instance_;
    new (ptr) ::ressource::ClearAllLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ClearAllLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllLogRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllLogRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllLogRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ClearAllLogRsp_default_instance_;
    new (ptr) ::ressource::ClearAllLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ClearAllLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllLogRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllLogRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_CreateDirPermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_CreateDirPermissionsRqst_default_instance_;
    new (ptr) ::ressource::CreateDirPermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::CreateDirPermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateDirPermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateDirPermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_CreateDirPermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_CreateDirPermissionsRsp_default_instance_;
    new (ptr) ::ressource::CreateDirPermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::CreateDirPermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateDirPermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateDirPermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_CreateRoleRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_CreateRoleRqst_default_instance_;
    new (ptr) ::ressource::CreateRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::CreateRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateRoleRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateRoleRqst_ressource_2eproto}, {
      &scc_info_Role_ressource_2eproto.base,}};

static void InitDefaultsscc_info_CreateRoleRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_CreateRoleRsp_default_instance_;
    new (ptr) ::ressource::CreateRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::CreateRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateRoleRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateRoleRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountPermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteAccountPermissionsRqst_default_instance_;
    new (ptr) ::ressource::DeleteAccountPermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteAccountPermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountPermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountPermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountPermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteAccountPermissionsRsp_default_instance_;
    new (ptr) ::ressource::DeleteAccountPermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteAccountPermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountPermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountPermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteAccountRqst_default_instance_;
    new (ptr) ::ressource::DeleteAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteAccountRsp_default_instance_;
    new (ptr) ::ressource::DeleteAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteApplicationRqst_default_instance_;
    new (ptr) ::ressource::DeleteApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteApplicationRsp_default_instance_;
    new (ptr) ::ressource::DeleteApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteDirPermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteDirPermissionsRqst_default_instance_;
    new (ptr) ::ressource::DeleteDirPermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteDirPermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteDirPermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteDirPermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteDirPermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteDirPermissionsRsp_default_instance_;
    new (ptr) ::ressource::DeleteDirPermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteDirPermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteDirPermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteDirPermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteFilePermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteFilePermissionsRqst_default_instance_;
    new (ptr) ::ressource::DeleteFilePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteFilePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteFilePermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteFilePermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteFilePermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteFilePermissionsRsp_default_instance_;
    new (ptr) ::ressource::DeleteFilePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteFilePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteFilePermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteFilePermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteLogRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteLogRqst_default_instance_;
    new (ptr) ::ressource::DeleteLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteLogRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteLogRqst_ressource_2eproto}, {
      &scc_info_LogInfo_ressource_2eproto.base,}};

static void InitDefaultsscc_info_DeleteLogRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteLogRsp_default_instance_;
    new (ptr) ::ressource::DeleteLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteLogRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteLogRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeletePeerRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeletePeerRqst_default_instance_;
    new (ptr) ::ressource::DeletePeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeletePeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeletePeerRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeletePeerRqst_ressource_2eproto}, {
      &scc_info_Peer_ressource_2eproto.base,}};

static void InitDefaultsscc_info_DeletePeerRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeletePeerRsp_default_instance_;
    new (ptr) ::ressource::DeletePeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeletePeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePeerRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePeerRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeletePermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeletePermissionsRqst_default_instance_;
    new (ptr) ::ressource::DeletePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeletePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeletePermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeletePermissionsRsp_default_instance_;
    new (ptr) ::ressource::DeletePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeletePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRessourceOwnerRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRessourceOwnerRqst_default_instance_;
    new (ptr) ::ressource::DeleteRessourceOwnerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRessourceOwnerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRessourceOwnerRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRessourceOwnerRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRessourceOwnerRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRessourceOwnerRsp_default_instance_;
    new (ptr) ::ressource::DeleteRessourceOwnerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRessourceOwnerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRessourceOwnerRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRessourceOwnerRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRessourceOwnersRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRessourceOwnersRqst_default_instance_;
    new (ptr) ::ressource::DeleteRessourceOwnersRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRessourceOwnersRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRessourceOwnersRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRessourceOwnersRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRessourceOwnersRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRessourceOwnersRsp_default_instance_;
    new (ptr) ::ressource::DeleteRessourceOwnersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRessourceOwnersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRessourceOwnersRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRessourceOwnersRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRolePermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRolePermissionsRqst_default_instance_;
    new (ptr) ::ressource::DeleteRolePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRolePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRolePermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRolePermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRolePermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRolePermissionsRsp_default_instance_;
    new (ptr) ::ressource::DeleteRolePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRolePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRolePermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRolePermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRoleRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRoleRqst_default_instance_;
    new (ptr) ::ressource::DeleteRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRoleRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_DeleteRoleRsp_default_instance_;
    new (ptr) ::ressource::DeleteRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::DeleteRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetActionPermissionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetActionPermissionRqst_default_instance_;
    new (ptr) ::ressource::GetActionPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetActionPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActionPermissionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActionPermissionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetActionPermissionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetActionPermissionRsp_default_instance_;
    new (ptr) ::ressource::GetActionPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetActionPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetActionPermissionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetActionPermissionRsp_ressource_2eproto}, {
      &scc_info_ActionParameterRessourcePermission_ressource_2eproto.base,}};

static void InitDefaultsscc_info_GetAllActionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllActionsRqst_default_instance_;
    new (ptr) ::ressource::GetAllActionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllActionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllActionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllActionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllActionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllActionsRsp_default_instance_;
    new (ptr) ::ressource::GetAllActionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllActionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllActionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllActionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllApplicationsInfoRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllApplicationsInfoRqst_default_instance_;
    new (ptr) ::ressource::GetAllApplicationsInfoRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllApplicationsInfoRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllApplicationsInfoRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllApplicationsInfoRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllApplicationsInfoRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllApplicationsInfoRsp_default_instance_;
    new (ptr) ::ressource::GetAllApplicationsInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllApplicationsInfoRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllApplicationsInfoRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllApplicationsInfoRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllFilesInfoRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllFilesInfoRqst_default_instance_;
    new (ptr) ::ressource::GetAllFilesInfoRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllFilesInfoRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllFilesInfoRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllFilesInfoRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllFilesInfoRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetAllFilesInfoRsp_default_instance_;
    new (ptr) ::ressource::GetAllFilesInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetAllFilesInfoRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllFilesInfoRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllFilesInfoRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogMethodsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetLogMethodsRqst_default_instance_;
    new (ptr) ::ressource::GetLogMethodsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetLogMethodsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogMethodsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogMethodsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogMethodsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetLogMethodsRsp_default_instance_;
    new (ptr) ::ressource::GetLogMethodsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetLogMethodsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogMethodsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogMethodsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetLogRqst_default_instance_;
    new (ptr) ::ressource::GetLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetLogRsp_default_instance_;
    new (ptr) ::ressource::GetLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLogRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLogRsp_ressource_2eproto}, {
      &scc_info_LogInfo_ressource_2eproto.base,}};

static void InitDefaultsscc_info_GetPeersRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetPeersRqst_default_instance_;
    new (ptr) ::ressource::GetPeersRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetPeersRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPeersRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPeersRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetPeersRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetPeersRsp_default_instance_;
    new (ptr) ::ressource::GetPeersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetPeersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPeersRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPeersRsp_ressource_2eproto}, {
      &scc_info_Peer_ressource_2eproto.base,}};

static void InitDefaultsscc_info_GetPermissionsRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetPermissionsRqst_default_instance_;
    new (ptr) ::ressource::GetPermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetPermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermissionsRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPermissionsRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetPermissionsRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetPermissionsRsp_default_instance_;
    new (ptr) ::ressource::GetPermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetPermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermissionsRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPermissionsRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetRessourceOwnersRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetRessourceOwnersRqst_default_instance_;
    new (ptr) ::ressource::GetRessourceOwnersRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetRessourceOwnersRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRessourceOwnersRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRessourceOwnersRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetRessourceOwnersRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetRessourceOwnersRsp_default_instance_;
    new (ptr) ::ressource::GetRessourceOwnersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetRessourceOwnersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRessourceOwnersRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRessourceOwnersRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetRessourcesRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetRessourcesRqst_default_instance_;
    new (ptr) ::ressource::GetRessourcesRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetRessourcesRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRessourcesRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRessourcesRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_GetRessourcesRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GetRessourcesRsp_default_instance_;
    new (ptr) ::ressource::GetRessourcesRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GetRessourcesRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRessourcesRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetRessourcesRsp_ressource_2eproto}, {
      &scc_info_Ressource_ressource_2eproto.base,}};

static void InitDefaultsscc_info_GroupSyncInfos_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_GroupSyncInfos_default_instance_;
    new (ptr) ::ressource::GroupSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::GroupSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GroupSyncInfos_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GroupSyncInfos_ressource_2eproto}, {}};

static void InitDefaultsscc_info_LdapSyncInfos_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_LdapSyncInfos_default_instance_;
    new (ptr) ::ressource::LdapSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::LdapSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LdapSyncInfos_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LdapSyncInfos_ressource_2eproto}, {
      &scc_info_UserSyncInfos_ressource_2eproto.base,
      &scc_info_GroupSyncInfos_ressource_2eproto.base,}};

static void InitDefaultsscc_info_LogInfo_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_LogInfo_default_instance_;
    new (ptr) ::ressource::LogInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::LogInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogInfo_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogInfo_ressource_2eproto}, {}};

static void InitDefaultsscc_info_LogRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_LogRqst_default_instance_;
    new (ptr) ::ressource::LogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::LogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LogRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LogRqst_ressource_2eproto}, {
      &scc_info_LogInfo_ressource_2eproto.base,}};

static void InitDefaultsscc_info_LogRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_LogRsp_default_instance_;
    new (ptr) ::ressource::LogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::LogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_Peer_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_Peer_default_instance_;
    new (ptr) ::ressource::Peer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::Peer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Peer_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RefreshTokenRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RefreshTokenRqst_default_instance_;
    new (ptr) ::ressource::RefreshTokenRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RefreshTokenRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RefreshTokenRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RefreshTokenRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RefreshTokenRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RefreshTokenRsp_default_instance_;
    new (ptr) ::ressource::RefreshTokenRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RefreshTokenRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RefreshTokenRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RefreshTokenRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterAccountRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RegisterAccountRqst_default_instance_;
    new (ptr) ::ressource::RegisterAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RegisterAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterAccountRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterAccountRqst_ressource_2eproto}, {
      &scc_info_Account_ressource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterAccountRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RegisterAccountRsp_default_instance_;
    new (ptr) ::ressource::RegisterAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RegisterAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterAccountRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterAccountRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterPeerRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RegisterPeerRqst_default_instance_;
    new (ptr) ::ressource::RegisterPeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RegisterPeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterPeerRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterPeerRqst_ressource_2eproto}, {
      &scc_info_Peer_ressource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterPeerRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RegisterPeerRsp_default_instance_;
    new (ptr) ::ressource::RegisterPeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RegisterPeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterPeerRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterPeerRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAccountRoleRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveAccountRoleRqst_default_instance_;
    new (ptr) ::ressource::RemoveAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAccountRoleRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveAccountRoleRsp_default_instance_;
    new (ptr) ::ressource::RemoveAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveActionPermissionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveActionPermissionRqst_default_instance_;
    new (ptr) ::ressource::RemoveActionPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveActionPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveActionPermissionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveActionPermissionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveActionPermissionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveActionPermissionRsp_default_instance_;
    new (ptr) ::ressource::RemoveActionPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveActionPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveActionPermissionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveActionPermissionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveApplicationActionRqst_default_instance_;
    new (ptr) ::ressource::RemoveApplicationActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveApplicationActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveApplicationActionRsp_default_instance_;
    new (ptr) ::ressource::RemoveApplicationActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveApplicationActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemovePeerActionRqst_default_instance_;
    new (ptr) ::ressource::RemovePeerActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemovePeerActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemovePeerActionRsp_default_instance_;
    new (ptr) ::ressource::RemovePeerActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemovePeerActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRessourceRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveRessourceRqst_default_instance_;
    new (ptr) ::ressource::RemoveRessourceRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveRessourceRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RemoveRessourceRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RemoveRessourceRqst_ressource_2eproto}, {
      &scc_info_Ressource_ressource_2eproto.base,}};

static void InitDefaultsscc_info_RemoveRessourceRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveRessourceRsp_default_instance_;
    new (ptr) ::ressource::RemoveRessourceRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveRessourceRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRessourceRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRessourceRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveRoleActionRqst_default_instance_;
    new (ptr) ::ressource::RemoveRoleActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveRoleActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RemoveRoleActionRsp_default_instance_;
    new (ptr) ::ressource::RemoveRoleActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RemoveRoleActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RenameFilePermissionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RenameFilePermissionRqst_default_instance_;
    new (ptr) ::ressource::RenameFilePermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RenameFilePermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenameFilePermissionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RenameFilePermissionRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RenameFilePermissionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RenameFilePermissionRsp_default_instance_;
    new (ptr) ::ressource::RenameFilePermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RenameFilePermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenameFilePermissionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RenameFilePermissionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ResetLogMethodRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ResetLogMethodRqst_default_instance_;
    new (ptr) ::ressource::ResetLogMethodRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ResetLogMethodRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetLogMethodRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetLogMethodRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ResetLogMethodRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ResetLogMethodRsp_default_instance_;
    new (ptr) ::ressource::ResetLogMethodRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ResetLogMethodRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetLogMethodRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetLogMethodRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_Ressource_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_Ressource_default_instance_;
    new (ptr) ::ressource::Ressource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::Ressource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ressource_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ressource_ressource_2eproto}, {}};

static void InitDefaultsscc_info_RessourcePermission_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_RessourcePermission_default_instance_;
    new (ptr) ::ressource::RessourcePermission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::RessourcePermission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RessourcePermission_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RessourcePermission_ressource_2eproto}, {}};

static void InitDefaultsscc_info_Role_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_Role_default_instance_;
    new (ptr) ::ressource::Role();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::Role::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Role_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetActionPermissionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetActionPermissionRqst_default_instance_;
    new (ptr) ::ressource::SetActionPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetActionPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetActionPermissionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetActionPermissionRqst_ressource_2eproto}, {
      &scc_info_ActionParameterRessourcePermission_ressource_2eproto.base,}};

static void InitDefaultsscc_info_SetActionPermissionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetActionPermissionRsp_default_instance_;
    new (ptr) ::ressource::SetActionPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetActionPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetActionPermissionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetActionPermissionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetLogMethodRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetLogMethodRqst_default_instance_;
    new (ptr) ::ressource::SetLogMethodRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetLogMethodRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLogMethodRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLogMethodRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetLogMethodRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetLogMethodRsp_default_instance_;
    new (ptr) ::ressource::SetLogMethodRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetLogMethodRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLogMethodRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLogMethodRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetPermissionRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetPermissionRqst_default_instance_;
    new (ptr) ::ressource::SetPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetPermissionRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetPermissionRqst_ressource_2eproto}, {
      &scc_info_RessourcePermission_ressource_2eproto.base,}};

static void InitDefaultsscc_info_SetPermissionRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetPermissionRsp_default_instance_;
    new (ptr) ::ressource::SetPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetPermissionRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetPermissionRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetRessourceOwnerRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetRessourceOwnerRqst_default_instance_;
    new (ptr) ::ressource::SetRessourceOwnerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetRessourceOwnerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetRessourceOwnerRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetRessourceOwnerRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetRessourceOwnerRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetRessourceOwnerRsp_default_instance_;
    new (ptr) ::ressource::SetRessourceOwnerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetRessourceOwnerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetRessourceOwnerRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetRessourceOwnerRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SetRessourceRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetRessourceRqst_default_instance_;
    new (ptr) ::ressource::SetRessourceRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetRessourceRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetRessourceRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetRessourceRqst_ressource_2eproto}, {
      &scc_info_Ressource_ressource_2eproto.base,}};

static void InitDefaultsscc_info_SetRessourceRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SetRessourceRsp_default_instance_;
    new (ptr) ::ressource::SetRessourceRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SetRessourceRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetRessourceRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetRessourceRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_SynchronizeLdapRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SynchronizeLdapRqst_default_instance_;
    new (ptr) ::ressource::SynchronizeLdapRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SynchronizeLdapRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SynchronizeLdapRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SynchronizeLdapRqst_ressource_2eproto}, {
      &scc_info_LdapSyncInfos_ressource_2eproto.base,}};

static void InitDefaultsscc_info_SynchronizeLdapRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_SynchronizeLdapRsp_default_instance_;
    new (ptr) ::ressource::SynchronizeLdapRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::SynchronizeLdapRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SynchronizeLdapRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SynchronizeLdapRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_UserSyncInfos_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_UserSyncInfos_default_instance_;
    new (ptr) ::ressource::UserSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::UserSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserSyncInfos_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UserSyncInfos_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateApplicationAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateApplicationAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidateApplicationAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateApplicationAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateApplicationAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateApplicationAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateApplicationAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateApplicationAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidateApplicationAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateApplicationAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateApplicationAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateApplicationAccessRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateApplicationRessourceAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidateApplicationRessourceAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateApplicationRessourceAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateApplicationRessourceAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateApplicationRessourceAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidateApplicationRessourceAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateApplicationRessourceAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateApplicationRessourceAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateApplicationRessourceAccessRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidatePeerAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidatePeerAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidatePeerAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidatePeerAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidatePeerAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidatePeerAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidatePeerAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidatePeerAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidatePeerAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidatePeerAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidatePeerAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidatePeerAccessRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidatePeerRessourceAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidatePeerRessourceAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidatePeerRessourceAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidatePeerRessourceAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidatePeerRessourceAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidatePeerRessourceAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidatePeerRessourceAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidatePeerRessourceAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidatePeerRessourceAccessRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateTokenRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateTokenRqst_default_instance_;
    new (ptr) ::ressource::ValidateTokenRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateTokenRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateTokenRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateTokenRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateTokenRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateTokenRsp_default_instance_;
    new (ptr) ::ressource::ValidateTokenRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateTokenRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateTokenRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateTokenRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateUserAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateUserAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidateUserAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateUserAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateUserAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateUserAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateUserAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateUserAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidateUserAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateUserAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateUserAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateUserAccessRsp_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateUserRessourceAccessRqst_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateUserRessourceAccessRqst_default_instance_;
    new (ptr) ::ressource::ValidateUserRessourceAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateUserRessourceAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateUserRessourceAccessRqst_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateUserRessourceAccessRqst_ressource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateUserRessourceAccessRsp_ressource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ressource::_ValidateUserRessourceAccessRsp_default_instance_;
    new (ptr) ::ressource::ValidateUserRessourceAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ressource::ValidateUserRessourceAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateUserRessourceAccessRsp_ressource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateUserRessourceAccessRsp_ressource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ressource_2eproto[122];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ressource_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ressource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ressource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::Account, id_),
  PROTOBUF_FIELD_OFFSET(::ressource::Account, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::Account, email_),
  PROTOBUF_FIELD_OFFSET(::ressource::Account, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::Role, id_),
  PROTOBUF_FIELD_OFFSET(::ressource::Role, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::Role, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRqst, account_),
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRqst, password_),
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRqst, confirm_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AuthenticateRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AuthenticateRqst, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::AuthenticateRqst, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AuthenticateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AuthenticateRsp, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RefreshTokenRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RefreshTokenRqst, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RefreshTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RefreshTokenRsp, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::ressource::AddAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateRoleRqst, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::ressource::AddRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::ressource::AddApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllActionsRsp, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RessourcePermission, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ressource::RessourcePermission, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RessourcePermission, number_),
  PROTOBUF_FIELD_OFFSET(::ressource::RessourcePermission, path_),
  offsetof(::ressource::RessourcePermissionDefaultTypeInternal, user_),
  offsetof(::ressource::RessourcePermissionDefaultTypeInternal, role_),
  offsetof(::ressource::RessourcePermissionDefaultTypeInternal, application_),
  offsetof(::ressource::RessourcePermissionDefaultTypeInternal, service_),
  offsetof(::ressource::RessourcePermissionDefaultTypeInternal, peer_),
  PROTOBUF_FIELD_OFFSET(::ressource::RessourcePermission, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPermissionsRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPermissionsRsp, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetPermissionRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetPermissionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePermissionsRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePermissionsRqst, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllFilesInfoRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllFilesInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllFilesInfoRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllApplicationsInfoRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllApplicationsInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetAllApplicationsInfoRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::UserSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::UserSyncInfos, base_),
  PROTOBUF_FIELD_OFFSET(::ressource::UserSyncInfos, query_),
  PROTOBUF_FIELD_OFFSET(::ressource::UserSyncInfos, id_),
  PROTOBUF_FIELD_OFFSET(::ressource::UserSyncInfos, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GroupSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GroupSyncInfos, base_),
  PROTOBUF_FIELD_OFFSET(::ressource::GroupSyncInfos, query_),
  PROTOBUF_FIELD_OFFSET(::ressource::GroupSyncInfos, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, ldapseriveid_),
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, connectionid_),
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, refresh_),
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, usersyncinfos_),
  PROTOBUF_FIELD_OFFSET(::ressource::LdapSyncInfos, groupsyncinfos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SynchronizeLdapRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SynchronizeLdapRqst, syncinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SynchronizeLdapRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SynchronizeLdapRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceOwnerRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceOwnerRqst, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceOwnerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourceOwnersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourceOwnersRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourceOwnersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourceOwnersRsp, owners_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnerRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnerRqst, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnersRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRessourceOwnersRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateTokenRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateTokenRqst, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateTokenRsp, clientid_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateTokenRsp, expired_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationAccessRqst, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationAccessRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerAccessRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerAccessRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRqst, method_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidatePeerRessourceAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserAccessRqst, token_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserAccessRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRqst, token_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRqst, method_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateUserRessourceAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRqst, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRqst, method_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ValidateApplicationRessourceAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AccountExistRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AccountExistRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AccountExistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AccountExistRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountPermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountPermissionsRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountPermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteAccountPermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRolePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRolePermissionsRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRolePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteRolePermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, date_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, type_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, application_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, userid_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, username_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, method_),
  PROTOBUF_FIELD_OFFSET(::ressource::LogInfo, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::LogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::LogRqst, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::LogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::LogRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteLogRqst, log_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteLogRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetLogMethodRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetLogMethodRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetLogMethodRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetLogMethodRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ResetLogMethodRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ResetLogMethodRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ResetLogMethodRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ResetLogMethodRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogMethodsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogMethodsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogMethodsRsp, methods_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetLogRsp, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ClearAllLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ClearAllLogRqst, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ClearAllLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ClearAllLogRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::Peer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::Peer, domain_),
  PROTOBUF_FIELD_OFFSET(::ressource::Peer, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::Ressource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::Ressource, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::Ressource, name_),
  PROTOBUF_FIELD_OFFSET(::ressource::Ressource, modified_),
  PROTOBUF_FIELD_OFFSET(::ressource::Ressource, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceRqst, ressource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetRessourceRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::ActionParameterRessourcePermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::ActionParameterRessourcePermission, index_),
  PROTOBUF_FIELD_OFFSET(::ressource::ActionParameterRessourcePermission, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetActionPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetActionPermissionRqst, action_),
  PROTOBUF_FIELD_OFFSET(::ressource::SetActionPermissionRqst, actionparameterressourcepermissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::SetActionPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::SetActionPermissionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetActionPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetActionPermissionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetActionPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetActionPermissionRsp, actionparameterressourcepermissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRessourceRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRessourceRqst, ressource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRessourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveRessourceRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourcesRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourcesRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourcesRqst, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourcesRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetRessourcesRsp, ressources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveActionPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveActionPermissionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveActionPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemoveActionPermissionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRqst, token_),
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRqst, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::CreateDirPermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRqst, path_),
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRqst, oldname_),
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRqst, newname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RenameFilePermissionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteDirPermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteDirPermissionsRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteDirPermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteDirPermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteFilePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteFilePermissionsRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteFilePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeleteFilePermissionsRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterPeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RegisterPeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPeersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPeersRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::GetPeersRsp, peers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::DeletePeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddPeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddPeerActionRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::ressource::AddPeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::AddPeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::AddPeerActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemovePeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemovePeerActionRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::ressource::RemovePeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ressource::RemovePeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ressource::RemovePeerActionRsp, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ressource::Account)},
  { 9, -1, sizeof(::ressource::Role)},
  { 17, -1, sizeof(::ressource::RegisterAccountRqst)},
  { 25, -1, sizeof(::ressource::RegisterAccountRsp)},
  { 31, -1, sizeof(::ressource::DeleteAccountRqst)},
  { 37, -1, sizeof(::ressource::DeleteAccountRsp)},
  { 43, -1, sizeof(::ressource::AuthenticateRqst)},
  { 50, -1, sizeof(::ressource::AuthenticateRsp)},
  { 56, -1, sizeof(::ressource::RefreshTokenRqst)},
  { 62, -1, sizeof(::ressource::RefreshTokenRsp)},
  { 68, -1, sizeof(::ressource::AddAccountRoleRqst)},
  { 75, -1, sizeof(::ressource::AddAccountRoleRsp)},
  { 81, -1, sizeof(::ressource::RemoveAccountRoleRqst)},
  { 88, -1, sizeof(::ressource::RemoveAccountRoleRsp)},
  { 94, -1, sizeof(::ressource::CreateRoleRqst)},
  { 100, -1, sizeof(::ressource::CreateRoleRsp)},
  { 106, -1, sizeof(::ressource::DeleteRoleRqst)},
  { 112, -1, sizeof(::ressource::DeleteRoleRsp)},
  { 118, -1, sizeof(::ressource::AddRoleActionRqst)},
  { 125, -1, sizeof(::ressource::AddRoleActionRsp)},
  { 131, -1, sizeof(::ressource::RemoveRoleActionRqst)},
  { 138, -1, sizeof(::ressource::RemoveRoleActionRsp)},
  { 144, -1, sizeof(::ressource::AddApplicationActionRqst)},
  { 151, -1, sizeof(::ressource::AddApplicationActionRsp)},
  { 157, -1, sizeof(::ressource::RemoveApplicationActionRqst)},
  { 164, -1, sizeof(::ressource::RemoveApplicationActionRsp)},
  { 170, -1, sizeof(::ressource::GetAllActionsRqst)},
  { 175, -1, sizeof(::ressource::GetAllActionsRsp)},
  { 181, -1, sizeof(::ressource::DeleteApplicationRqst)},
  { 187, -1, sizeof(::ressource::DeleteApplicationRsp)},
  { 193, -1, sizeof(::ressource::RessourcePermission)},
  { 206, -1, sizeof(::ressource::GetPermissionsRqst)},
  { 212, -1, sizeof(::ressource::GetPermissionsRsp)},
  { 218, -1, sizeof(::ressource::SetPermissionRqst)},
  { 224, -1, sizeof(::ressource::SetPermissionRsp)},
  { 230, -1, sizeof(::ressource::DeletePermissionsRqst)},
  { 237, -1, sizeof(::ressource::DeletePermissionsRsp)},
  { 243, -1, sizeof(::ressource::GetAllFilesInfoRqst)},
  { 248, -1, sizeof(::ressource::GetAllFilesInfoRsp)},
  { 254, -1, sizeof(::ressource::GetAllApplicationsInfoRqst)},
  { 259, -1, sizeof(::ressource::GetAllApplicationsInfoRsp)},
  { 265, -1, sizeof(::ressource::UserSyncInfos)},
  { 274, -1, sizeof(::ressource::GroupSyncInfos)},
  { 282, -1, sizeof(::ressource::LdapSyncInfos)},
  { 292, -1, sizeof(::ressource::SynchronizeLdapRqst)},
  { 298, -1, sizeof(::ressource::SynchronizeLdapRsp)},
  { 304, -1, sizeof(::ressource::SetRessourceOwnerRqst)},
  { 311, -1, sizeof(::ressource::SetRessourceOwnerRsp)},
  { 317, -1, sizeof(::ressource::GetRessourceOwnersRqst)},
  { 323, -1, sizeof(::ressource::GetRessourceOwnersRsp)},
  { 329, -1, sizeof(::ressource::DeleteRessourceOwnerRqst)},
  { 336, -1, sizeof(::ressource::DeleteRessourceOwnerRsp)},
  { 342, -1, sizeof(::ressource::DeleteRessourceOwnersRqst)},
  { 348, -1, sizeof(::ressource::DeleteRessourceOwnersRsp)},
  { 354, -1, sizeof(::ressource::ValidateTokenRqst)},
  { 360, -1, sizeof(::ressource::ValidateTokenRsp)},
  { 367, -1, sizeof(::ressource::ValidateApplicationAccessRqst)},
  { 374, -1, sizeof(::ressource::ValidateApplicationAccessRsp)},
  { 380, -1, sizeof(::ressource::ValidatePeerAccessRqst)},
  { 387, -1, sizeof(::ressource::ValidatePeerAccessRsp)},
  { 393, -1, sizeof(::ressource::ValidatePeerRessourceAccessRqst)},
  { 402, -1, sizeof(::ressource::ValidatePeerRessourceAccessRsp)},
  { 408, -1, sizeof(::ressource::ValidateUserAccessRqst)},
  { 415, -1, sizeof(::ressource::ValidateUserAccessRsp)},
  { 421, -1, sizeof(::ressource::ValidateUserRessourceAccessRqst)},
  { 430, -1, sizeof(::ressource::ValidateUserRessourceAccessRsp)},
  { 436, -1, sizeof(::ressource::ValidateApplicationRessourceAccessRqst)},
  { 445, -1, sizeof(::ressource::ValidateApplicationRessourceAccessRsp)},
  { 451, -1, sizeof(::ressource::AccountExistRqst)},
  { 457, -1, sizeof(::ressource::AccountExistRsp)},
  { 463, -1, sizeof(::ressource::DeleteAccountPermissionsRqst)},
  { 469, -1, sizeof(::ressource::DeleteAccountPermissionsRsp)},
  { 475, -1, sizeof(::ressource::DeleteRolePermissionsRqst)},
  { 481, -1, sizeof(::ressource::DeleteRolePermissionsRsp)},
  { 487, -1, sizeof(::ressource::LogInfo)},
  { 499, -1, sizeof(::ressource::LogRqst)},
  { 505, -1, sizeof(::ressource::LogRsp)},
  { 511, -1, sizeof(::ressource::DeleteLogRqst)},
  { 517, -1, sizeof(::ressource::DeleteLogRsp)},
  { 523, -1, sizeof(::ressource::SetLogMethodRqst)},
  { 529, -1, sizeof(::ressource::SetLogMethodRsp)},
  { 535, -1, sizeof(::ressource::ResetLogMethodRqst)},
  { 541, -1, sizeof(::ressource::ResetLogMethodRsp)},
  { 547, -1, sizeof(::ressource::GetLogMethodsRqst)},
  { 552, -1, sizeof(::ressource::GetLogMethodsRsp)},
  { 558, -1, sizeof(::ressource::GetLogRqst)},
  { 564, -1, sizeof(::ressource::GetLogRsp)},
  { 570, -1, sizeof(::ressource::ClearAllLogRqst)},
  { 576, -1, sizeof(::ressource::ClearAllLogRsp)},
  { 582, -1, sizeof(::ressource::Peer)},
  { 589, -1, sizeof(::ressource::Ressource)},
  { 598, -1, sizeof(::ressource::SetRessourceRqst)},
  { 604, -1, sizeof(::ressource::SetRessourceRsp)},
  { 610, -1, sizeof(::ressource::ActionParameterRessourcePermission)},
  { 617, -1, sizeof(::ressource::SetActionPermissionRqst)},
  { 624, -1, sizeof(::ressource::SetActionPermissionRsp)},
  { 630, -1, sizeof(::ressource::GetActionPermissionRqst)},
  { 636, -1, sizeof(::ressource::GetActionPermissionRsp)},
  { 642, -1, sizeof(::ressource::RemoveRessourceRqst)},
  { 648, -1, sizeof(::ressource::RemoveRessourceRsp)},
  { 654, -1, sizeof(::ressource::GetRessourcesRqst)},
  { 661, -1, sizeof(::ressource::GetRessourcesRsp)},
  { 667, -1, sizeof(::ressource::RemoveActionPermissionRqst)},
  { 673, -1, sizeof(::ressource::RemoveActionPermissionRsp)},
  { 679, -1, sizeof(::ressource::CreateDirPermissionsRqst)},
  { 687, -1, sizeof(::ressource::CreateDirPermissionsRsp)},
  { 693, -1, sizeof(::ressource::RenameFilePermissionRqst)},
  { 701, -1, sizeof(::ressource::RenameFilePermissionRsp)},
  { 707, -1, sizeof(::ressource::DeleteDirPermissionsRqst)},
  { 713, -1, sizeof(::ressource::DeleteDirPermissionsRsp)},
  { 719, -1, sizeof(::ressource::DeleteFilePermissionsRqst)},
  { 725, -1, sizeof(::ressource::DeleteFilePermissionsRsp)},
  { 731, -1, sizeof(::ressource::RegisterPeerRqst)},
  { 737, -1, sizeof(::ressource::RegisterPeerRsp)},
  { 743, -1, sizeof(::ressource::GetPeersRqst)},
  { 749, -1, sizeof(::ressource::GetPeersRsp)},
  { 755, -1, sizeof(::ressource::DeletePeerRqst)},
  { 761, -1, sizeof(::ressource::DeletePeerRsp)},
  { 767, -1, sizeof(::ressource::AddPeerActionRqst)},
  { 774, -1, sizeof(::ressource::AddPeerActionRsp)},
  { 780, -1, sizeof(::ressource::RemovePeerActionRqst)},
  { 787, -1, sizeof(::ressource::RemovePeerActionRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_Account_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_Role_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RegisterAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RegisterAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AuthenticateRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AuthenticateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RefreshTokenRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RefreshTokenRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_CreateRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_CreateRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RessourcePermission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetPermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetPermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeletePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeletePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllFilesInfoRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllFilesInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllApplicationsInfoRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetAllApplicationsInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_UserSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GroupSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_LdapSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SynchronizeLdapRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SynchronizeLdapRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetRessourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetRessourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetRessourceOwnersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetRessourceOwnersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRessourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRessourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRessourceOwnersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRessourceOwnersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateTokenRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateTokenRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateApplicationAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateApplicationAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidatePeerAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidatePeerAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidatePeerRessourceAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidatePeerRessourceAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateUserAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateUserAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateUserRessourceAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateUserRessourceAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateApplicationRessourceAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ValidateApplicationRessourceAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AccountExistRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AccountExistRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteAccountPermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteAccountPermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRolePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteRolePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_LogInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_LogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_LogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteLogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetLogMethodRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetLogMethodRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ResetLogMethodRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ResetLogMethodRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetLogMethodsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetLogMethodsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetLogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ClearAllLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ClearAllLogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_Peer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_Ressource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetRessourceRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetRessourceRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_ActionParameterRessourcePermission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetActionPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_SetActionPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetActionPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetActionPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveRessourceRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveRessourceRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetRessourcesRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetRessourcesRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveActionPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemoveActionPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_CreateDirPermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_CreateDirPermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RenameFilePermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RenameFilePermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteDirPermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteDirPermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteFilePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeleteFilePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RegisterPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RegisterPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetPeersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_GetPeersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeletePeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_DeletePeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddPeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_AddPeerActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemovePeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ressource::_RemovePeerActionRsp_default_instance_),
};

const char descriptor_table_protodef_ressource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017ressource.proto\022\tressource\"D\n\007Account\022"
  "\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005email\030\003 \001(\t"
  "\022\020\n\010password\030\004 \001(\t\"1\n\004Role\022\n\n\002id\030\001 \001(\t\022\014"
  "\n\004name\030\002 \001(\t\022\017\n\007actions\030\003 \003(\t\"f\n\023Registe"
  "rAccountRqst\022#\n\007account\030\001 \001(\0132\022.ressourc"
  "e.Account\022\020\n\010password\030\002 \001(\t\022\030\n\020confirm_p"
  "assword\030\003 \001(\t\"$\n\022RegisterAccountRsp\022\016\n\006r"
  "esult\030\001 \001(\t\"\037\n\021DeleteAccountRqst\022\n\n\002id\030\001"
  " \001(\t\"\"\n\020DeleteAccountRsp\022\016\n\006result\030\001 \001(\t"
  "\"2\n\020AuthenticateRqst\022\014\n\004name\030\001 \001(\t\022\020\n\010pa"
  "ssword\030\002 \001(\t\" \n\017AuthenticateRsp\022\r\n\005token"
  "\030\001 \001(\t\"!\n\020RefreshTokenRqst\022\r\n\005token\030\001 \001("
  "\t\" \n\017RefreshTokenRsp\022\r\n\005token\030\001 \001(\t\"7\n\022A"
  "ddAccountRoleRqst\022\021\n\taccountId\030\001 \001(\t\022\016\n\006"
  "roleId\030\002 \001(\t\"#\n\021AddAccountRoleRsp\022\016\n\006res"
  "ult\030\001 \001(\010\":\n\025RemoveAccountRoleRqst\022\021\n\tac"
  "countId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"&\n\024RemoveA"
  "ccountRoleRsp\022\016\n\006result\030\001 \001(\010\"/\n\016CreateR"
  "oleRqst\022\035\n\004role\030\001 \001(\0132\017.ressource.Role\"\037"
  "\n\rCreateRoleRsp\022\016\n\006result\030\001 \001(\010\" \n\016Delet"
  "eRoleRqst\022\016\n\006roleId\030\001 \001(\t\"\037\n\rDeleteRoleR"
  "sp\022\016\n\006result\030\001 \001(\010\"3\n\021AddRoleActionRqst\022"
  "\016\n\006roleId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\"\"\n\020AddRo"
  "leActionRsp\022\016\n\006result\030\001 \001(\010\"6\n\024RemoveRol"
  "eActionRqst\022\016\n\006roleId\030\001 \001(\t\022\016\n\006action\030\002 "
  "\001(\t\"%\n\023RemoveRoleActionRsp\022\016\n\006result\030\001 \001"
  "(\010\"A\n\030AddApplicationActionRqst\022\025\n\rapplic"
  "ationId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\")\n\027AddAppl"
  "icationActionRsp\022\016\n\006result\030\001 \001(\010\"D\n\033Remo"
  "veApplicationActionRqst\022\025\n\rapplicationId"
  "\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\",\n\032RemoveApplicat"
  "ionActionRsp\022\016\n\006result\030\001 \001(\010\"\023\n\021GetAllAc"
  "tionsRqst\"#\n\020GetAllActionsRsp\022\017\n\007actions"
  "\030\001 \003(\t\".\n\025DeleteApplicationRqst\022\025\n\rappli"
  "cationId\030\001 \001(\t\"&\n\024DeleteApplicationRsp\022\016"
  "\n\006result\030\001 \001(\010\"\226\001\n\023RessourcePermission\022\016"
  "\n\006number\030\001 \001(\005\022\014\n\004path\030\002 \001(\t\022\016\n\004user\030\003 \001"
  "(\tH\000\022\016\n\004role\030\004 \001(\tH\000\022\025\n\013application\030\005 \001("
  "\tH\000\022\021\n\007service\030\006 \001(\tH\000\022\016\n\004peer\030\007 \001(\tH\000B\007"
  "\n\005owner\"\"\n\022GetPermissionsRqst\022\014\n\004path\030\001 "
  "\001(\t\"(\n\021GetPermissionsRsp\022\023\n\013permissions\030"
  "\001 \001(\t\"G\n\021SetPermissionRqst\0222\n\npermission"
  "\030\001 \001(\0132\036.ressource.RessourcePermission\"\""
  "\n\020SetPermissionRsp\022\016\n\006result\030\001 \001(\010\"4\n\025De"
  "letePermissionsRqst\022\014\n\004path\030\001 \001(\t\022\r\n\005own"
  "er\030\002 \001(\t\"&\n\024DeletePermissionsRsp\022\016\n\006resu"
  "lt\030\001 \001(\010\"\025\n\023GetAllFilesInfoRqst\"$\n\022GetAl"
  "lFilesInfoRsp\022\016\n\006result\030\001 \001(\t\"\034\n\032GetAllA"
  "pplicationsInfoRqst\"+\n\031GetAllApplication"
  "sInfoRsp\022\016\n\006result\030\001 \001(\t\"G\n\rUserSyncInfo"
  "s\022\014\n\004base\030\001 \001(\t\022\r\n\005query\030\002 \001(\t\022\n\n\002id\030\003 \001"
  "(\t\022\r\n\005email\030\004 \001(\t\"9\n\016GroupSyncInfos\022\014\n\004b"
  "ase\030\001 \001(\t\022\r\n\005query\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\"\260\001\n"
  "\rLdapSyncInfos\022\024\n\014ldapSeriveId\030\001 \001(\t\022\024\n\014"
  "connectionId\030\002 \001(\t\022\017\n\007refresh\030\003 \001(\005\022/\n\ru"
  "serSyncInfos\030\004 \001(\0132\030.ressource.UserSyncI"
  "nfos\0221\n\016groupSyncInfos\030\005 \001(\0132\031.ressource"
  ".GroupSyncInfos\"A\n\023SynchronizeLdapRqst\022*"
  "\n\010syncInfo\030\001 \001(\0132\030.ressource.LdapSyncInf"
  "os\"$\n\022SynchronizeLdapRsp\022\016\n\006result\030\001 \001(\010"
  "\"4\n\025SetRessourceOwnerRqst\022\014\n\004path\030\001 \001(\t\022"
  "\r\n\005owner\030\002 \001(\t\"&\n\024SetRessourceOwnerRsp\022\016"
  "\n\006result\030\001 \001(\010\"&\n\026GetRessourceOwnersRqst"
  "\022\014\n\004path\030\001 \001(\t\"\'\n\025GetRessourceOwnersRsp\022"
  "\016\n\006owners\030\001 \003(\t\"7\n\030DeleteRessourceOwnerR"
  "qst\022\014\n\004path\030\001 \001(\t\022\r\n\005owner\030\002 \001(\t\")\n\027Dele"
  "teRessourceOwnerRsp\022\016\n\006result\030\001 \001(\010\")\n\031D"
  "eleteRessourceOwnersRqst\022\014\n\004path\030\001 \001(\t\"*"
  "\n\030DeleteRessourceOwnersRsp\022\016\n\006result\030\001 \001"
  "(\010\"\"\n\021ValidateTokenRqst\022\r\n\005token\030\001 \001(\t\"5"
  "\n\020ValidateTokenRsp\022\020\n\010clientId\030\001 \001(\t\022\017\n\007"
  "expired\030\002 \001(\003\"=\n\035ValidateApplicationAcce"
  "ssRqst\022\014\n\004name\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\".\n\034"
  "ValidateApplicationAccessRsp\022\016\n\006result\030\001"
  " \001(\010\"8\n\026ValidatePeerAccessRqst\022\016\n\006domain"
  "\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\"\'\n\025ValidatePeerAc"
  "cessRsp\022\016\n\006result\030\001 \001(\010\"c\n\037ValidatePeerR"
  "essourceAccessRqst\022\016\n\006domain\030\001 \001(\t\022\016\n\006me"
  "thod\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\022\n\npermission\030\004"
  " \001(\005\"0\n\036ValidatePeerRessourceAccessRsp\022\016"
  "\n\006result\030\001 \001(\010\"7\n\026ValidateUserAccessRqst"
  "\022\r\n\005token\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\"\'\n\025Valid"
  "ateUserAccessRsp\022\016\n\006result\030\001 \001(\010\"b\n\037Vali"
  "dateUserRessourceAccessRqst\022\r\n\005token\030\001 \001"
  "(\t\022\016\n\006method\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\022\n\nperm"
  "ission\030\004 \001(\005\"0\n\036ValidateUserRessourceAcc"
  "essRsp\022\016\n\006result\030\001 \001(\010\"h\n&ValidateApplic"
  "ationRessourceAccessRqst\022\014\n\004name\030\001 \001(\t\022\016"
  "\n\006method\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\022\n\npermissi"
  "on\030\004 \001(\005\"7\n%ValidateApplicationRessource"
  "AccessRsp\022\016\n\006result\030\001 \001(\010\"\036\n\020AccountExis"
  "tRqst\022\n\n\002id\030\001 \001(\t\"!\n\017AccountExistRsp\022\016\n\006"
  "result\030\001 \001(\010\"*\n\034DeleteAccountPermissions"
  "Rqst\022\n\n\002id\030\001 \001(\t\"-\n\033DeleteAccountPermiss"
  "ionsRsp\022\016\n\006result\030\001 \001(\010\"\'\n\031DeleteRolePer"
  "missionsRqst\022\n\n\002id\030\001 \001(\t\"*\n\030DeleteRolePe"
  "rmissionsRsp\022\016\n\006result\030\001 \001(\010\"\221\001\n\007LogInfo"
  "\022\014\n\004date\030\001 \001(\003\022 \n\004type\030\002 \001(\0162\022.ressource"
  ".LogType\022\023\n\013application\030\003 \001(\t\022\016\n\006userId\030"
  "\004 \001(\t\022\020\n\010userName\030\005 \001(\t\022\016\n\006method\030\006 \001(\t\022"
  "\017\n\007message\030\007 \001(\t\"+\n\007LogRqst\022 \n\004info\030\001 \001("
  "\0132\022.ressource.LogInfo\"\030\n\006LogRsp\022\016\n\006resul"
  "t\030\001 \001(\010\"0\n\rDeleteLogRqst\022\037\n\003log\030\001 \001(\0132\022."
  "ressource.LogInfo\"\036\n\014DeleteLogRsp\022\016\n\006res"
  "ult\030\001 \001(\010\"\"\n\020SetLogMethodRqst\022\016\n\006method\030"
  "\001 \001(\t\"!\n\017SetLogMethodRsp\022\016\n\006result\030\001 \001(\010"
  "\"$\n\022ResetLogMethodRqst\022\016\n\006method\030\001 \001(\t\"#"
  "\n\021ResetLogMethodRsp\022\016\n\006result\030\001 \001(\010\"\023\n\021G"
  "etLogMethodsRqst\"#\n\020GetLogMethodsRsp\022\017\n\007"
  "methods\030\001 \003(\t\"\033\n\nGetLogRqst\022\r\n\005query\030\001 \001"
  "(\t\"-\n\tGetLogRsp\022 \n\004info\030\001 \003(\0132\022.ressourc"
  "e.LogInfo\"3\n\017ClearAllLogRqst\022 \n\004type\030\001 \001"
  "(\0162\022.ressource.LogType\" \n\016ClearAllLogRsp"
  "\022\016\n\006result\030\001 \001(\010\"\'\n\004Peer\022\016\n\006domain\030\001 \001(\t"
  "\022\017\n\007actions\030\002 \003(\t\"G\n\tRessource\022\014\n\004path\030\001"
  " \001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010modified\030\003 \001(\003\022\014\n\004"
  "size\030\004 \001(\003\";\n\020SetRessourceRqst\022\'\n\tressou"
  "rce\030\001 \001(\0132\024.ressource.Ressource\"!\n\017SetRe"
  "ssourceRsp\022\016\n\006result\030\001 \001(\010\"G\n\"ActionPara"
  "meterRessourcePermission\022\r\n\005index\030\001 \001(\005\022"
  "\022\n\npermission\030\002 \001(\005\"\205\001\n\027SetActionPermiss"
  "ionRqst\022\016\n\006action\030\001 \001(\t\022Z\n#actionParamet"
  "erRessourcePermissions\030\002 \003(\0132-.ressource"
  ".ActionParameterRessourcePermission\"(\n\026S"
  "etActionPermissionRsp\022\016\n\006result\030\001 \001(\010\")\n"
  "\027GetActionPermissionRqst\022\016\n\006action\030\001 \001(\t"
  "\"t\n\026GetActionPermissionRsp\022Z\n#actionPara"
  "meterRessourcePermissions\030\001 \003(\0132-.ressou"
  "rce.ActionParameterRessourcePermission\">"
  "\n\023RemoveRessourceRqst\022\'\n\tressource\030\001 \001(\013"
  "2\024.ressource.Ressource\"$\n\022RemoveRessourc"
  "eRsp\022\016\n\006result\030\001 \001(\010\"/\n\021GetRessourcesRqs"
  "t\022\014\n\004path\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"<\n\020GetRess"
  "ourcesRsp\022(\n\nressources\030\001 \003(\0132\024.ressourc"
  "e.Ressource\",\n\032RemoveActionPermissionRqs"
  "t\022\016\n\006action\030\001 \001(\t\"+\n\031RemoveActionPermiss"
  "ionRsp\022\016\n\006result\030\001 \001(\010\"E\n\030CreateDirPermi"
  "ssionsRqst\022\r\n\005token\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\022"
  "\014\n\004name\030\003 \001(\t\")\n\027CreateDirPermissionsRsp"
  "\022\016\n\006result\030\001 \001(\010\"J\n\030RenameFilePermission"
  "Rqst\022\014\n\004path\030\001 \001(\t\022\017\n\007oldName\030\002 \001(\t\022\017\n\007n"
  "ewName\030\003 \001(\t\")\n\027RenameFilePermissionRsp\022"
  "\016\n\006result\030\001 \001(\010\"(\n\030DeleteDirPermissionsR"
  "qst\022\014\n\004path\030\001 \001(\t\")\n\027DeleteDirPermission"
  "sRsp\022\016\n\006result\030\001 \001(\010\")\n\031DeleteFilePermis"
  "sionsRqst\022\014\n\004path\030\001 \001(\t\"*\n\030DeleteFilePer"
  "missionsRsp\022\016\n\006result\030\001 \001(\010\"1\n\020RegisterP"
  "eerRqst\022\035\n\004peer\030\001 \001(\0132\017.ressource.Peer\"!"
  "\n\017RegisterPeerRsp\022\016\n\006result\030\001 \001(\010\"\035\n\014Get"
  "PeersRqst\022\r\n\005query\030\001 \001(\t\"-\n\013GetPeersRsp\022"
  "\036\n\005peers\030\001 \003(\0132\017.ressource.Peer\"/\n\016Delet"
  "ePeerRqst\022\035\n\004peer\030\001 \001(\0132\017.ressource.Peer"
  "\"\037\n\rDeletePeerRsp\022\016\n\006result\030\001 \001(\010\"3\n\021Add"
  "PeerActionRqst\022\016\n\006domain\030\001 \001(\t\022\016\n\006action"
  "\030\002 \001(\t\"\"\n\020AddPeerActionRsp\022\016\n\006result\030\001 \001"
  "(\010\"6\n\024RemovePeerActionRqst\022\016\n\006domain\030\001 \001"
  "(\t\022\016\n\006action\030\002 \001(\t\"%\n\023RemovePeerActionRs"
  "p\022\016\n\006result\030\001 \001(\010*.\n\007LogType\022\020\n\014INFO_MES"
  "SAGE\020\000\022\021\n\rERROR_MESSAGE\020\0012\234#\n\020RessourceS"
  "ervice\022G\n\014RegisterPeer\022\033.ressource.Regis"
  "terPeerRqst\032\032.ressource.RegisterPeerRsp\022"
  "=\n\010GetPeers\022\027.ressource.GetPeersRqst\032\026.r"
  "essource.GetPeersRsp0\001\022A\n\nDeletePeer\022\031.r"
  "essource.DeletePeerRqst\032\030.ressource.Dele"
  "tePeerRsp\022J\n\rAddPeerAction\022\034.ressource.A"
  "ddPeerActionRqst\032\033.ressource.AddPeerActi"
  "onRsp\022S\n\020RemovePeerAction\022\037.ressource.Re"
  "movePeerActionRqst\032\036.ressource.RemovePee"
  "rActionRsp\022P\n\017RegisterAccount\022\036.ressourc"
  "e.RegisterAccountRqst\032\035.ressource.Regist"
  "erAccountRsp\022J\n\rDeleteAccount\022\034.ressourc"
  "e.DeleteAccountRqst\032\033.ressource.DeleteAc"
  "countRsp\022G\n\014Authenticate\022\033.ressource.Aut"
  "henticateRqst\032\032.ressource.AuthenticateRs"
  "p\022P\n\017SynchronizeLdap\022\036.ressource.Synchro"
  "nizeLdapRqst\032\035.ressource.SynchronizeLdap"
  "Rsp\022G\n\014RefreshToken\022\033.ressource.RefreshT"
  "okenRqst\032\032.ressource.RefreshTokenRsp\022M\n\016"
  "AddAccountRole\022\035.ressource.AddAccountRol"
  "eRqst\032\034.ressource.AddAccountRoleRsp\022V\n\021R"
  "emoveAccountRole\022 .ressource.RemoveAccou"
  "ntRoleRqst\032\037.ressource.RemoveAccountRole"
  "Rsp\022A\n\nCreateRole\022\031.ressource.CreateRole"
  "Rqst\032\030.ressource.CreateRoleRsp\022A\n\nDelete"
  "Role\022\031.ressource.DeleteRoleRqst\032\030.ressou"
  "rce.DeleteRoleRsp\022J\n\rAddRoleAction\022\034.res"
  "source.AddRoleActionRqst\032\033.ressource.Add"
  "RoleActionRsp\022S\n\020RemoveRoleAction\022\037.ress"
  "ource.RemoveRoleActionRqst\032\036.ressource.R"
  "emoveRoleActionRsp\022_\n\024AddApplicationActi"
  "on\022#.ressource.AddApplicationActionRqst\032"
  "\".ressource.AddApplicationActionRsp\022h\n\027R"
  "emoveApplicationAction\022&.ressource.Remov"
  "eApplicationActionRqst\032%.ressource.Remov"
  "eApplicationActionRsp\022J\n\rGetAllActions\022\034"
  ".ressource.GetAllActionsRqst\032\033.ressource"
  ".GetAllActionsRsp\022M\n\016GetPermissions\022\035.re"
  "ssource.GetPermissionsRqst\032\034.ressource.G"
  "etPermissionsRsp\022J\n\rSetPermission\022\034.ress"
  "ource.SetPermissionRqst\032\033.ressource.SetP"
  "ermissionRsp\022V\n\021DeletePermissions\022 .ress"
  "ource.DeletePermissionsRqst\032\037.ressource."
  "DeletePermissionsRsp\022V\n\021SetRessourceOwne"
  "r\022 .ressource.SetRessourceOwnerRqst\032\037.re"
  "ssource.SetRessourceOwnerRsp\022Y\n\022GetResso"
  "urceOwners\022!.ressource.GetRessourceOwner"
  "sRqst\032 .ressource.GetRessourceOwnersRsp\022"
  "_\n\024DeleteRessourceOwner\022#.ressource.Dele"
  "teRessourceOwnerRqst\032\".ressource.DeleteR"
  "essourceOwnerRsp\022b\n\025DeleteRessourceOwner"
  "s\022$.ressource.DeleteRessourceOwnersRqst\032"
  "#.ressource.DeleteRessourceOwnersRsp\022P\n\017"
  "GetAllFilesInfo\022\036.ressource.GetAllFilesI"
  "nfoRqst\032\035.ressource.GetAllFilesInfoRsp\022J"
  "\n\rValidateToken\022\034.ressource.ValidateToke"
  "nRqst\032\033.ressource.ValidateTokenRsp\022t\n\033Va"
  "lidateUserRessourceAccess\022*.ressource.Va"
  "lidateUserRessourceAccessRqst\032).ressourc"
  "e.ValidateUserRessourceAccessRsp\022\211\001\n\"Val"
  "idateApplicationRessourceAccess\0221.ressou"
  "rce.ValidateApplicationRessourceAccessRq"
  "st\0320.ressource.ValidateApplicationRessou"
  "rceAccessRsp\022Y\n\022ValidateUserAccess\022!.res"
  "source.ValidateUserAccessRqst\032 .ressourc"
  "e.ValidateUserAccessRsp\022n\n\031ValidateAppli"
  "cationAccess\022(.ressource.ValidateApplica"
  "tionAccessRqst\032\'.ressource.ValidateAppli"
  "cationAccessRsp\022Y\n\022ValidatePeerAccess\022!."
  "ressource.ValidatePeerAccessRqst\032 .resso"
  "urce.ValidatePeerAccessRsp\022t\n\033ValidatePe"
  "erRessourceAccess\022*.ressource.ValidatePe"
  "erRessourceAccessRqst\032).ressource.Valida"
  "tePeerRessourceAccessRsp\022k\n\030DeleteAccoun"
  "tPermissions\022\'.ressource.DeleteAccountPe"
  "rmissionsRqst\032&.ressource.DeleteAccountP"
  "ermissionsRsp\022b\n\025DeleteRolePermissions\022$"
  ".ressource.DeleteRolePermissionsRqst\032#.r"
  "essource.DeleteRolePermissionsRsp\022e\n\026Get"
  "AllApplicationsInfo\022%.ressource.GetAllAp"
  "plicationsInfoRqst\032$.ressource.GetAllApp"
  "licationsInfoRsp\022V\n\021DeleteApplication\022 ."
  "ressource.DeleteApplicationRqst\032\037.ressou"
  "rce.DeleteApplicationRsp\022,\n\003Log\022\022.ressou"
  "rce.LogRqst\032\021.ressource.LogRsp\0227\n\006GetLog"
  "\022\025.ressource.GetLogRqst\032\024.ressource.GetL"
  "ogRsp0\001\022>\n\tDeleteLog\022\030.ressource.DeleteL"
  "ogRqst\032\027.ressource.DeleteLogRsp\022D\n\013Clear"
  "AllLog\022\032.ressource.ClearAllLogRqst\032\031.res"
  "source.ClearAllLogRsp\022L\n\rGetRessources\022\034"
  ".ressource.GetRessourcesRqst\032\033.ressource"
  ".GetRessourcesRsp0\001\022G\n\014SetRessource\022\033.re"
  "ssource.SetRessourceRqst\032\032.ressource.Set"
  "RessourceRsp\022P\n\017RemoveRessource\022\036.ressou"
  "rce.RemoveRessourceRqst\032\035.ressource.Remo"
  "veRessourceRsp\022\\\n\023SetActionPermission\022\"."
  "ressource.SetActionPermissionRqst\032!.ress"
  "ource.SetActionPermissionRsp\022e\n\026RemoveAc"
  "tionPermission\022%.ressource.RemoveActionP"
  "ermissionRqst\032$.ressource.RemoveActionPe"
  "rmissionRsp\022\\\n\023GetActionPermission\022\".res"
  "source.GetActionPermissionRqst\032!.ressour"
  "ce.GetActionPermissionRsp\022_\n\024CreateDirPe"
  "rmissions\022#.ressource.CreateDirPermissio"
  "nsRqst\032\".ressource.CreateDirPermissionsR"
  "sp\022_\n\024RenameFilePermission\022#.ressource.R"
  "enameFilePermissionRqst\032\".ressource.Rena"
  "meFilePermissionRsp\022_\n\024DeleteDirPermissi"
  "ons\022#.ressource.DeleteDirPermissionsRqst"
  "\032\".ressource.DeleteDirPermissionsRsp\022b\n\025"
  "DeleteFilePermissions\022$.ressource.Delete"
  "FilePermissionsRqst\032#.ressource.DeleteFi"
  "lePermissionsRspB\027Z\025ressource/ressourcep"
  "bb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ressource_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ressource_2eproto_sccs[122] = {
  &scc_info_Account_ressource_2eproto.base,
  &scc_info_AccountExistRqst_ressource_2eproto.base,
  &scc_info_AccountExistRsp_ressource_2eproto.base,
  &scc_info_ActionParameterRessourcePermission_ressource_2eproto.base,
  &scc_info_AddAccountRoleRqst_ressource_2eproto.base,
  &scc_info_AddAccountRoleRsp_ressource_2eproto.base,
  &scc_info_AddApplicationActionRqst_ressource_2eproto.base,
  &scc_info_AddApplicationActionRsp_ressource_2eproto.base,
  &scc_info_AddPeerActionRqst_ressource_2eproto.base,
  &scc_info_AddPeerActionRsp_ressource_2eproto.base,
  &scc_info_AddRoleActionRqst_ressource_2eproto.base,
  &scc_info_AddRoleActionRsp_ressource_2eproto.base,
  &scc_info_AuthenticateRqst_ressource_2eproto.base,
  &scc_info_AuthenticateRsp_ressource_2eproto.base,
  &scc_info_ClearAllLogRqst_ressource_2eproto.base,
  &scc_info_ClearAllLogRsp_ressource_2eproto.base,
  &scc_info_CreateDirPermissionsRqst_ressource_2eproto.base,
  &scc_info_CreateDirPermissionsRsp_ressource_2eproto.base,
  &scc_info_CreateRoleRqst_ressource_2eproto.base,
  &scc_info_CreateRoleRsp_ressource_2eproto.base,
  &scc_info_DeleteAccountPermissionsRqst_ressource_2eproto.base,
  &scc_info_DeleteAccountPermissionsRsp_ressource_2eproto.base,
  &scc_info_DeleteAccountRqst_ressource_2eproto.base,
  &scc_info_DeleteAccountRsp_ressource_2eproto.base,
  &scc_info_DeleteApplicationRqst_ressource_2eproto.base,
  &scc_info_DeleteApplicationRsp_ressource_2eproto.base,
  &scc_info_DeleteDirPermissionsRqst_ressource_2eproto.base,
  &scc_info_DeleteDirPermissionsRsp_ressource_2eproto.base,
  &scc_info_DeleteFilePermissionsRqst_ressource_2eproto.base,
  &scc_info_DeleteFilePermissionsRsp_ressource_2eproto.base,
  &scc_info_DeleteLogRqst_ressource_2eproto.base,
  &scc_info_DeleteLogRsp_ressource_2eproto.base,
  &scc_info_DeletePeerRqst_ressource_2eproto.base,
  &scc_info_DeletePeerRsp_ressource_2eproto.base,
  &scc_info_DeletePermissionsRqst_ressource_2eproto.base,
  &scc_info_DeletePermissionsRsp_ressource_2eproto.base,
  &scc_info_DeleteRessourceOwnerRqst_ressource_2eproto.base,
  &scc_info_DeleteRessourceOwnerRsp_ressource_2eproto.base,
  &scc_info_DeleteRessourceOwnersRqst_ressource_2eproto.base,
  &scc_info_DeleteRessourceOwnersRsp_ressource_2eproto.base,
  &scc_info_DeleteRolePermissionsRqst_ressource_2eproto.base,
  &scc_info_DeleteRolePermissionsRsp_ressource_2eproto.base,
  &scc_info_DeleteRoleRqst_ressource_2eproto.base,
  &scc_info_DeleteRoleRsp_ressource_2eproto.base,
  &scc_info_GetActionPermissionRqst_ressource_2eproto.base,
  &scc_info_GetActionPermissionRsp_ressource_2eproto.base,
  &scc_info_GetAllActionsRqst_ressource_2eproto.base,
  &scc_info_GetAllActionsRsp_ressource_2eproto.base,
  &scc_info_GetAllApplicationsInfoRqst_ressource_2eproto.base,
  &scc_info_GetAllApplicationsInfoRsp_ressource_2eproto.base,
  &scc_info_GetAllFilesInfoRqst_ressource_2eproto.base,
  &scc_info_GetAllFilesInfoRsp_ressource_2eproto.base,
  &scc_info_GetLogMethodsRqst_ressource_2eproto.base,
  &scc_info_GetLogMethodsRsp_ressource_2eproto.base,
  &scc_info_GetLogRqst_ressource_2eproto.base,
  &scc_info_GetLogRsp_ressource_2eproto.base,
  &scc_info_GetPeersRqst_ressource_2eproto.base,
  &scc_info_GetPeersRsp_ressource_2eproto.base,
  &scc_info_GetPermissionsRqst_ressource_2eproto.base,
  &scc_info_GetPermissionsRsp_ressource_2eproto.base,
  &scc_info_GetRessourceOwnersRqst_ressource_2eproto.base,
  &scc_info_GetRessourceOwnersRsp_ressource_2eproto.base,
  &scc_info_GetRessourcesRqst_ressource_2eproto.base,
  &scc_info_GetRessourcesRsp_ressource_2eproto.base,
  &scc_info_GroupSyncInfos_ressource_2eproto.base,
  &scc_info_LdapSyncInfos_ressource_2eproto.base,
  &scc_info_LogInfo_ressource_2eproto.base,
  &scc_info_LogRqst_ressource_2eproto.base,
  &scc_info_LogRsp_ressource_2eproto.base,
  &scc_info_Peer_ressource_2eproto.base,
  &scc_info_RefreshTokenRqst_ressource_2eproto.base,
  &scc_info_RefreshTokenRsp_ressource_2eproto.base,
  &scc_info_RegisterAccountRqst_ressource_2eproto.base,
  &scc_info_RegisterAccountRsp_ressource_2eproto.base,
  &scc_info_RegisterPeerRqst_ressource_2eproto.base,
  &scc_info_RegisterPeerRsp_ressource_2eproto.base,
  &scc_info_RemoveAccountRoleRqst_ressource_2eproto.base,
  &scc_info_RemoveAccountRoleRsp_ressource_2eproto.base,
  &scc_info_RemoveActionPermissionRqst_ressource_2eproto.base,
  &scc_info_RemoveActionPermissionRsp_ressource_2eproto.base,
  &scc_info_RemoveApplicationActionRqst_ressource_2eproto.base,
  &scc_info_RemoveApplicationActionRsp_ressource_2eproto.base,
  &scc_info_RemovePeerActionRqst_ressource_2eproto.base,
  &scc_info_RemovePeerActionRsp_ressource_2eproto.base,
  &scc_info_RemoveRessourceRqst_ressource_2eproto.base,
  &scc_info_RemoveRessourceRsp_ressource_2eproto.base,
  &scc_info_RemoveRoleActionRqst_ressource_2eproto.base,
  &scc_info_RemoveRoleActionRsp_ressource_2eproto.base,
  &scc_info_RenameFilePermissionRqst_ressource_2eproto.base,
  &scc_info_RenameFilePermissionRsp_ressource_2eproto.base,
  &scc_info_ResetLogMethodRqst_ressource_2eproto.base,
  &scc_info_ResetLogMethodRsp_ressource_2eproto.base,
  &scc_info_Ressource_ressource_2eproto.base,
  &scc_info_RessourcePermission_ressource_2eproto.base,
  &scc_info_Role_ressource_2eproto.base,
  &scc_info_SetActionPermissionRqst_ressource_2eproto.base,
  &scc_info_SetActionPermissionRsp_ressource_2eproto.base,
  &scc_info_SetLogMethodRqst_ressource_2eproto.base,
  &scc_info_SetLogMethodRsp_ressource_2eproto.base,
  &scc_info_SetPermissionRqst_ressource_2eproto.base,
  &scc_info_SetPermissionRsp_ressource_2eproto.base,
  &scc_info_SetRessourceOwnerRqst_ressource_2eproto.base,
  &scc_info_SetRessourceOwnerRsp_ressource_2eproto.base,
  &scc_info_SetRessourceRqst_ressource_2eproto.base,
  &scc_info_SetRessourceRsp_ressource_2eproto.base,
  &scc_info_SynchronizeLdapRqst_ressource_2eproto.base,
  &scc_info_SynchronizeLdapRsp_ressource_2eproto.base,
  &scc_info_UserSyncInfos_ressource_2eproto.base,
  &scc_info_ValidateApplicationAccessRqst_ressource_2eproto.base,
  &scc_info_ValidateApplicationAccessRsp_ressource_2eproto.base,
  &scc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto.base,
  &scc_info_ValidateApplicationRessourceAccessRsp_ressource_2eproto.base,
  &scc_info_ValidatePeerAccessRqst_ressource_2eproto.base,
  &scc_info_ValidatePeerAccessRsp_ressource_2eproto.base,
  &scc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto.base,
  &scc_info_ValidatePeerRessourceAccessRsp_ressource_2eproto.base,
  &scc_info_ValidateTokenRqst_ressource_2eproto.base,
  &scc_info_ValidateTokenRsp_ressource_2eproto.base,
  &scc_info_ValidateUserAccessRqst_ressource_2eproto.base,
  &scc_info_ValidateUserAccessRsp_ressource_2eproto.base,
  &scc_info_ValidateUserRessourceAccessRqst_ressource_2eproto.base,
  &scc_info_ValidateUserRessourceAccessRsp_ressource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ressource_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ressource_2eproto = {
  false, false, descriptor_table_protodef_ressource_2eproto, "ressource.proto", 10889,
  &descriptor_table_ressource_2eproto_once, descriptor_table_ressource_2eproto_sccs, descriptor_table_ressource_2eproto_deps, 122, 0,
  schemas, file_default_instances, TableStruct_ressource_2eproto::offsets,
  file_level_metadata_ressource_2eproto, 122, file_level_enum_descriptors_ressource_2eproto, file_level_service_descriptors_ressource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ressource_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ressource_2eproto)), true);
namespace ressource {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ressource_2eproto);
  return file_level_enum_descriptors_ressource_2eproto[0];
}
bool LogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Account::InitAsDefaultInstance() {
}
class Account::_Internal {
 public:
};

Account::Account(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.Account)
}
Account::Account(const Account& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.Account)
}

void Account::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Account_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:ressource.Account)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Account::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Account::ArenaDtor(void* object) {
  Account* _this = reinterpret_cast< Account* >(object);
  (void)_this;
}
void Account::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Account& Account::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Account_ressource_2eproto.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Account::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Account.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Account.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Account.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Account.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Account::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Account.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Account.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Account.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Account.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.Account)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.Account)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void Account::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Account::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Role::InitAsDefaultInstance() {
}
class Role::_Internal {
 public:
};

Role::Role(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.Role)
}
Role::Role(const Role& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.Role)
}

void Role::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Role_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:ressource.Role)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Role::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Role::ArenaDtor(void* object) {
  Role* _this = reinterpret_cast< Role* >(object);
  (void)_this;
}
void Role::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Role& Role::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Role_ressource_2eproto.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Role::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Role.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Role.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Role.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Role::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Role.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Role.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string actions = 3;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Role.actions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.Role)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Role>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.Role)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Role::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::InternalSwap(Role* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Role::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRqst::InitAsDefaultInstance() {
  ::ressource::_RegisterAccountRqst_default_instance_._instance.get_mutable()->account_ = const_cast< ::ressource::Account*>(
      ::ressource::Account::internal_default_instance());
}
class RegisterAccountRqst::_Internal {
 public:
  static const ::ressource::Account& account(const RegisterAccountRqst* msg);
};

const ::ressource::Account&
RegisterAccountRqst::_Internal::account(const RegisterAccountRqst* msg) {
  return *msg->account_;
}
RegisterAccountRqst::RegisterAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RegisterAccountRqst)
}
RegisterAccountRqst::RegisterAccountRqst(const RegisterAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_confirm_password().empty()) {
    confirm_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_confirm_password(),
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new ::ressource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RegisterAccountRqst)
}

void RegisterAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRqst_ressource_2eproto.base);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  account_ = nullptr;
}

RegisterAccountRqst::~RegisterAccountRqst() {
  // @@protoc_insertion_point(destructor:ressource.RegisterAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confirm_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void RegisterAccountRqst::ArenaDtor(void* object) {
  RegisterAccountRqst* _this = reinterpret_cast< RegisterAccountRqst* >(object);
  (void)_this;
}
void RegisterAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRqst& RegisterAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  confirm_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RegisterAccountRqst.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string confirm_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_confirm_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RegisterAccountRqst.confirm_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RegisterAccountRqst.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_confirm_password().data(), static_cast<int>(this->_internal_confirm_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RegisterAccountRqst.confirm_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_confirm_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RegisterAccountRqst)
  return target;
}

size_t RegisterAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RegisterAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_confirm_password());
  }

  // .ressource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RegisterAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RegisterAccountRqst)
    MergeFrom(*source);
  }
}

void RegisterAccountRqst::MergeFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.confirm_password().size() > 0) {
    _internal_set_confirm_password(from._internal_confirm_password());
  }
  if (from.has_account()) {
    _internal_mutable_account()->::ressource::Account::MergeFrom(from._internal_account());
  }
}

void RegisterAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRqst::CopyFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRqst::IsInitialized() const {
  return true;
}

void RegisterAccountRqst::InternalSwap(RegisterAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  confirm_password_.Swap(&other->confirm_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRsp::InitAsDefaultInstance() {
}
class RegisterAccountRsp::_Internal {
 public:
};

RegisterAccountRsp::RegisterAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RegisterAccountRsp)
}
RegisterAccountRsp::RegisterAccountRsp(const RegisterAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RegisterAccountRsp)
}

void RegisterAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRsp_ressource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterAccountRsp::~RegisterAccountRsp() {
  // @@protoc_insertion_point(destructor:ressource.RegisterAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterAccountRsp::ArenaDtor(void* object) {
  RegisterAccountRsp* _this = reinterpret_cast< RegisterAccountRsp* >(object);
  (void)_this;
}
void RegisterAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRsp& RegisterAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RegisterAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RegisterAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RegisterAccountRsp)
  return target;
}

size_t RegisterAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RegisterAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RegisterAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RegisterAccountRsp)
    MergeFrom(*source);
  }
}

void RegisterAccountRsp::MergeFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRsp::CopyFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRsp::IsInitialized() const {
  return true;
}

void RegisterAccountRsp::InternalSwap(RegisterAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRqst::InitAsDefaultInstance() {
}
class DeleteAccountRqst::_Internal {
 public:
};

DeleteAccountRqst::DeleteAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteAccountRqst)
}
DeleteAccountRqst::DeleteAccountRqst(const DeleteAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteAccountRqst)
}

void DeleteAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRqst_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRqst::~DeleteAccountRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRqst::ArenaDtor(void* object) {
  DeleteAccountRqst* _this = reinterpret_cast< DeleteAccountRqst* >(object);
  (void)_this;
}
void DeleteAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRqst& DeleteAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteAccountRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteAccountRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteAccountRqst)
  return target;
}

size_t DeleteAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteAccountRqst)
    MergeFrom(*source);
  }
}

void DeleteAccountRqst::MergeFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRqst::CopyFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRqst::IsInitialized() const {
  return true;
}

void DeleteAccountRqst::InternalSwap(DeleteAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRsp::InitAsDefaultInstance() {
}
class DeleteAccountRsp::_Internal {
 public:
};

DeleteAccountRsp::DeleteAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteAccountRsp)
}
DeleteAccountRsp::DeleteAccountRsp(const DeleteAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteAccountRsp)
}

void DeleteAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRsp_ressource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRsp::~DeleteAccountRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRsp::ArenaDtor(void* object) {
  DeleteAccountRsp* _this = reinterpret_cast< DeleteAccountRsp* >(object);
  (void)_this;
}
void DeleteAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRsp& DeleteAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteAccountRsp)
  return target;
}

size_t DeleteAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteAccountRsp)
    MergeFrom(*source);
  }
}

void DeleteAccountRsp::MergeFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRsp::CopyFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRsp::IsInitialized() const {
  return true;
}

void DeleteAccountRsp::InternalSwap(DeleteAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticateRqst::InitAsDefaultInstance() {
}
class AuthenticateRqst::_Internal {
 public:
};

AuthenticateRqst::AuthenticateRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AuthenticateRqst)
}
AuthenticateRqst::AuthenticateRqst(const AuthenticateRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AuthenticateRqst)
}

void AuthenticateRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticateRqst_ressource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticateRqst::~AuthenticateRqst() {
  // @@protoc_insertion_point(destructor:ressource.AuthenticateRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticateRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateRqst::ArenaDtor(void* object) {
  AuthenticateRqst* _this = reinterpret_cast< AuthenticateRqst* >(object);
  (void)_this;
}
void AuthenticateRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticateRqst& AuthenticateRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticateRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AuthenticateRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AuthenticateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AuthenticateRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AuthenticateRqst.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticateRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AuthenticateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AuthenticateRqst.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AuthenticateRqst.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AuthenticateRqst)
  return target;
}

size_t AuthenticateRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AuthenticateRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AuthenticateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticateRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AuthenticateRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AuthenticateRqst)
    MergeFrom(*source);
  }
}

void AuthenticateRqst::MergeFrom(const AuthenticateRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AuthenticateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void AuthenticateRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AuthenticateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateRqst::CopyFrom(const AuthenticateRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AuthenticateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRqst::IsInitialized() const {
  return true;
}

void AuthenticateRqst::InternalSwap(AuthenticateRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticateRsp::InitAsDefaultInstance() {
}
class AuthenticateRsp::_Internal {
 public:
};

AuthenticateRsp::AuthenticateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AuthenticateRsp)
}
AuthenticateRsp::AuthenticateRsp(const AuthenticateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AuthenticateRsp)
}

void AuthenticateRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticateRsp_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticateRsp::~AuthenticateRsp() {
  // @@protoc_insertion_point(destructor:ressource.AuthenticateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateRsp::ArenaDtor(void* object) {
  AuthenticateRsp* _this = reinterpret_cast< AuthenticateRsp* >(object);
  (void)_this;
}
void AuthenticateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticateRsp& AuthenticateRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticateRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AuthenticateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AuthenticateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AuthenticateRsp.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AuthenticateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AuthenticateRsp.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AuthenticateRsp)
  return target;
}

size_t AuthenticateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AuthenticateRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AuthenticateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AuthenticateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AuthenticateRsp)
    MergeFrom(*source);
  }
}

void AuthenticateRsp::MergeFrom(const AuthenticateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AuthenticateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void AuthenticateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AuthenticateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateRsp::CopyFrom(const AuthenticateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AuthenticateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRsp::IsInitialized() const {
  return true;
}

void AuthenticateRsp::InternalSwap(AuthenticateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RefreshTokenRqst::InitAsDefaultInstance() {
}
class RefreshTokenRqst::_Internal {
 public:
};

RefreshTokenRqst::RefreshTokenRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RefreshTokenRqst)
}
RefreshTokenRqst::RefreshTokenRqst(const RefreshTokenRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RefreshTokenRqst)
}

void RefreshTokenRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefreshTokenRqst_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RefreshTokenRqst::~RefreshTokenRqst() {
  // @@protoc_insertion_point(destructor:ressource.RefreshTokenRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshTokenRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RefreshTokenRqst::ArenaDtor(void* object) {
  RefreshTokenRqst* _this = reinterpret_cast< RefreshTokenRqst* >(object);
  (void)_this;
}
void RefreshTokenRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshTokenRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshTokenRqst& RefreshTokenRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshTokenRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RefreshTokenRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RefreshTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTokenRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RefreshTokenRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshTokenRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RefreshTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RefreshTokenRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RefreshTokenRqst)
  return target;
}

size_t RefreshTokenRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RefreshTokenRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshTokenRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RefreshTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTokenRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshTokenRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RefreshTokenRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RefreshTokenRqst)
    MergeFrom(*source);
  }
}

void RefreshTokenRqst::MergeFrom(const RefreshTokenRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RefreshTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void RefreshTokenRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RefreshTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTokenRqst::CopyFrom(const RefreshTokenRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RefreshTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTokenRqst::IsInitialized() const {
  return true;
}

void RefreshTokenRqst::InternalSwap(RefreshTokenRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTokenRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RefreshTokenRsp::InitAsDefaultInstance() {
}
class RefreshTokenRsp::_Internal {
 public:
};

RefreshTokenRsp::RefreshTokenRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RefreshTokenRsp)
}
RefreshTokenRsp::RefreshTokenRsp(const RefreshTokenRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RefreshTokenRsp)
}

void RefreshTokenRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefreshTokenRsp_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RefreshTokenRsp::~RefreshTokenRsp() {
  // @@protoc_insertion_point(destructor:ressource.RefreshTokenRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshTokenRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RefreshTokenRsp::ArenaDtor(void* object) {
  RefreshTokenRsp* _this = reinterpret_cast< RefreshTokenRsp* >(object);
  (void)_this;
}
void RefreshTokenRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshTokenRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshTokenRsp& RefreshTokenRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshTokenRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RefreshTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RefreshTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTokenRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RefreshTokenRsp.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshTokenRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RefreshTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RefreshTokenRsp.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RefreshTokenRsp)
  return target;
}

size_t RefreshTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RefreshTokenRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshTokenRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RefreshTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTokenRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshTokenRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RefreshTokenRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RefreshTokenRsp)
    MergeFrom(*source);
  }
}

void RefreshTokenRsp::MergeFrom(const RefreshTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RefreshTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void RefreshTokenRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RefreshTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTokenRsp::CopyFrom(const RefreshTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RefreshTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTokenRsp::IsInitialized() const {
  return true;
}

void RefreshTokenRsp::InternalSwap(RefreshTokenRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTokenRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRqst::InitAsDefaultInstance() {
}
class AddAccountRoleRqst::_Internal {
 public:
};

AddAccountRoleRqst::AddAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddAccountRoleRqst)
}
AddAccountRoleRqst::AddAccountRoleRqst(const AddAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AddAccountRoleRqst)
}

void AddAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddAccountRoleRqst_ressource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddAccountRoleRqst::~AddAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:ressource.AddAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddAccountRoleRqst::ArenaDtor(void* object) {
  AddAccountRoleRqst* _this = reinterpret_cast< AddAccountRoleRqst* >(object);
  (void)_this;
}
void AddAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRqst& AddAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddAccountRoleRqst)
  return target;
}

size_t AddAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddAccountRoleRqst)
    MergeFrom(*source);
  }
}

void AddAccountRoleRqst::MergeFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRqst::CopyFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRqst::IsInitialized() const {
  return true;
}

void AddAccountRoleRqst::InternalSwap(AddAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRsp::InitAsDefaultInstance() {
}
class AddAccountRoleRsp::_Internal {
 public:
};

AddAccountRoleRsp::AddAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddAccountRoleRsp)
}
AddAccountRoleRsp::AddAccountRoleRsp(const AddAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.AddAccountRoleRsp)
}

void AddAccountRoleRsp::SharedCtor() {
  result_ = false;
}

AddAccountRoleRsp::~AddAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:ressource.AddAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddAccountRoleRsp::ArenaDtor(void* object) {
  AddAccountRoleRsp* _this = reinterpret_cast< AddAccountRoleRsp* >(object);
  (void)_this;
}
void AddAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRsp& AddAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddAccountRoleRsp)
  return target;
}

size_t AddAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddAccountRoleRsp)
    MergeFrom(*source);
  }
}

void AddAccountRoleRsp::MergeFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRsp::CopyFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRsp::IsInitialized() const {
  return true;
}

void AddAccountRoleRsp::InternalSwap(AddAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRqst::InitAsDefaultInstance() {
}
class RemoveAccountRoleRqst::_Internal {
 public:
};

RemoveAccountRoleRqst::RemoveAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveAccountRoleRqst)
}
RemoveAccountRoleRqst::RemoveAccountRoleRqst(const RemoveAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveAccountRoleRqst)
}

void RemoveAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveAccountRoleRqst_ressource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveAccountRoleRqst::~RemoveAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemoveAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveAccountRoleRqst::ArenaDtor(void* object) {
  RemoveAccountRoleRqst* _this = reinterpret_cast< RemoveAccountRoleRqst* >(object);
  (void)_this;
}
void RemoveAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRqst& RemoveAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveAccountRoleRqst)
  return target;
}

size_t RemoveAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveAccountRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRqst::MergeFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRqst::CopyFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRqst::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRqst::InternalSwap(RemoveAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRsp::InitAsDefaultInstance() {
}
class RemoveAccountRoleRsp::_Internal {
 public:
};

RemoveAccountRoleRsp::RemoveAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveAccountRoleRsp)
}
RemoveAccountRoleRsp::RemoveAccountRoleRsp(const RemoveAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveAccountRoleRsp)
}

void RemoveAccountRoleRsp::SharedCtor() {
  result_ = false;
}

RemoveAccountRoleRsp::~RemoveAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemoveAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveAccountRoleRsp::ArenaDtor(void* object) {
  RemoveAccountRoleRsp* _this = reinterpret_cast< RemoveAccountRoleRsp* >(object);
  (void)_this;
}
void RemoveAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRsp& RemoveAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveAccountRoleRsp)
  return target;
}

size_t RemoveAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveAccountRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRsp::MergeFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRsp::CopyFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRsp::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRsp::InternalSwap(RemoveAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRqst::InitAsDefaultInstance() {
  ::ressource::_CreateRoleRqst_default_instance_._instance.get_mutable()->role_ = const_cast< ::ressource::Role*>(
      ::ressource::Role::internal_default_instance());
}
class CreateRoleRqst::_Internal {
 public:
  static const ::ressource::Role& role(const CreateRoleRqst* msg);
};

const ::ressource::Role&
CreateRoleRqst::_Internal::role(const CreateRoleRqst* msg) {
  return *msg->role_;
}
CreateRoleRqst::CreateRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.CreateRoleRqst)
}
CreateRoleRqst::CreateRoleRqst(const CreateRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::ressource::Role(*from.role_);
  } else {
    role_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.CreateRoleRqst)
}

void CreateRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateRoleRqst_ressource_2eproto.base);
  role_ = nullptr;
}

CreateRoleRqst::~CreateRoleRqst() {
  // @@protoc_insertion_point(destructor:ressource.CreateRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete role_;
}

void CreateRoleRqst::ArenaDtor(void* object) {
  CreateRoleRqst* _this = reinterpret_cast< CreateRoleRqst* >(object);
  (void)_this;
}
void CreateRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRqst& CreateRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Role role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Role role = 1;
  if (this->has_role()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::role(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.CreateRoleRqst)
  return target;
}

size_t CreateRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.CreateRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.Role role = 1;
  if (this->has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.CreateRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.CreateRoleRqst)
    MergeFrom(*source);
  }
}

void CreateRoleRqst::MergeFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    _internal_mutable_role()->::ressource::Role::MergeFrom(from._internal_role());
  }
}

void CreateRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRqst::CopyFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRqst::IsInitialized() const {
  return true;
}

void CreateRoleRqst::InternalSwap(CreateRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(role_, other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRsp::InitAsDefaultInstance() {
}
class CreateRoleRsp::_Internal {
 public:
};

CreateRoleRsp::CreateRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.CreateRoleRsp)
}
CreateRoleRsp::CreateRoleRsp(const CreateRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.CreateRoleRsp)
}

void CreateRoleRsp::SharedCtor() {
  result_ = false;
}

CreateRoleRsp::~CreateRoleRsp() {
  // @@protoc_insertion_point(destructor:ressource.CreateRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateRoleRsp::ArenaDtor(void* object) {
  CreateRoleRsp* _this = reinterpret_cast< CreateRoleRsp* >(object);
  (void)_this;
}
void CreateRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRsp& CreateRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.CreateRoleRsp)
  return target;
}

size_t CreateRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.CreateRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.CreateRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.CreateRoleRsp)
    MergeFrom(*source);
  }
}

void CreateRoleRsp::MergeFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRsp::CopyFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRsp::IsInitialized() const {
  return true;
}

void CreateRoleRsp::InternalSwap(CreateRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRqst::InitAsDefaultInstance() {
}
class DeleteRoleRqst::_Internal {
 public:
};

DeleteRoleRqst::DeleteRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRoleRqst)
}
DeleteRoleRqst::DeleteRoleRqst(const DeleteRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRoleRqst)
}

void DeleteRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRoleRqst_ressource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRoleRqst::~DeleteRoleRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRoleRqst::ArenaDtor(void* object) {
  DeleteRoleRqst* _this = reinterpret_cast< DeleteRoleRqst* >(object);
  (void)_this;
}
void DeleteRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRqst& DeleteRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRoleRqst)
  return target;
}

size_t DeleteRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRoleRqst)
    MergeFrom(*source);
  }
}

void DeleteRoleRqst::MergeFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void DeleteRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRqst::CopyFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRqst::IsInitialized() const {
  return true;
}

void DeleteRoleRqst::InternalSwap(DeleteRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRsp::InitAsDefaultInstance() {
}
class DeleteRoleRsp::_Internal {
 public:
};

DeleteRoleRsp::DeleteRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRoleRsp)
}
DeleteRoleRsp::DeleteRoleRsp(const DeleteRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRoleRsp)
}

void DeleteRoleRsp::SharedCtor() {
  result_ = false;
}

DeleteRoleRsp::~DeleteRoleRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRoleRsp::ArenaDtor(void* object) {
  DeleteRoleRsp* _this = reinterpret_cast< DeleteRoleRsp* >(object);
  (void)_this;
}
void DeleteRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRsp& DeleteRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRoleRsp)
  return target;
}

size_t DeleteRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRoleRsp)
    MergeFrom(*source);
  }
}

void DeleteRoleRsp::MergeFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRsp::CopyFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRsp::IsInitialized() const {
  return true;
}

void DeleteRoleRsp::InternalSwap(DeleteRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionRqst::InitAsDefaultInstance() {
}
class AddRoleActionRqst::_Internal {
 public:
};

AddRoleActionRqst::AddRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddRoleActionRqst)
}
AddRoleActionRqst::AddRoleActionRqst(const AddRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AddRoleActionRqst)
}

void AddRoleActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRoleActionRqst_ressource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRoleActionRqst::~AddRoleActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.AddRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRoleActionRqst::ArenaDtor(void* object) {
  AddRoleActionRqst* _this = reinterpret_cast< AddRoleActionRqst* >(object);
  (void)_this;
}
void AddRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionRqst& AddRoleActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddRoleActionRqst)
  return target;
}

size_t AddRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddRoleActionRqst)
    MergeFrom(*source);
  }
}

void AddRoleActionRqst::MergeFrom(const AddRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionRqst::CopyFrom(const AddRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionRqst::IsInitialized() const {
  return true;
}

void AddRoleActionRqst::InternalSwap(AddRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionRsp::InitAsDefaultInstance() {
}
class AddRoleActionRsp::_Internal {
 public:
};

AddRoleActionRsp::AddRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddRoleActionRsp)
}
AddRoleActionRsp::AddRoleActionRsp(const AddRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.AddRoleActionRsp)
}

void AddRoleActionRsp::SharedCtor() {
  result_ = false;
}

AddRoleActionRsp::~AddRoleActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.AddRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddRoleActionRsp::ArenaDtor(void* object) {
  AddRoleActionRsp* _this = reinterpret_cast< AddRoleActionRsp* >(object);
  (void)_this;
}
void AddRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionRsp& AddRoleActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddRoleActionRsp)
  return target;
}

size_t AddRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddRoleActionRsp)
    MergeFrom(*source);
  }
}

void AddRoleActionRsp::MergeFrom(const AddRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionRsp::CopyFrom(const AddRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionRsp::IsInitialized() const {
  return true;
}

void AddRoleActionRsp::InternalSwap(AddRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRqst::InitAsDefaultInstance() {
}
class RemoveRoleActionRqst::_Internal {
 public:
};

RemoveRoleActionRqst::RemoveRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveRoleActionRqst)
}
RemoveRoleActionRqst::RemoveRoleActionRqst(const RemoveRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveRoleActionRqst)
}

void RemoveRoleActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveRoleActionRqst_ressource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRoleActionRqst::~RemoveRoleActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemoveRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRoleActionRqst::ArenaDtor(void* object) {
  RemoveRoleActionRqst* _this = reinterpret_cast< RemoveRoleActionRqst* >(object);
  (void)_this;
}
void RemoveRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRqst& RemoveRoleActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveRoleActionRqst)
  return target;
}

size_t RemoveRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveRoleActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRqst::MergeFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRqst::CopyFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRqst::IsInitialized() const {
  return true;
}

void RemoveRoleActionRqst::InternalSwap(RemoveRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRsp::InitAsDefaultInstance() {
}
class RemoveRoleActionRsp::_Internal {
 public:
};

RemoveRoleActionRsp::RemoveRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveRoleActionRsp)
}
RemoveRoleActionRsp::RemoveRoleActionRsp(const RemoveRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveRoleActionRsp)
}

void RemoveRoleActionRsp::SharedCtor() {
  result_ = false;
}

RemoveRoleActionRsp::~RemoveRoleActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemoveRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRoleActionRsp::ArenaDtor(void* object) {
  RemoveRoleActionRsp* _this = reinterpret_cast< RemoveRoleActionRsp* >(object);
  (void)_this;
}
void RemoveRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRsp& RemoveRoleActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveRoleActionRsp)
  return target;
}

size_t RemoveRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveRoleActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRsp::MergeFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRsp::CopyFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRsp::IsInitialized() const {
  return true;
}

void RemoveRoleActionRsp::InternalSwap(RemoveRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionRqst::InitAsDefaultInstance() {
}
class AddApplicationActionRqst::_Internal {
 public:
};

AddApplicationActionRqst::AddApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddApplicationActionRqst)
}
AddApplicationActionRqst::AddApplicationActionRqst(const AddApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AddApplicationActionRqst)
}

void AddApplicationActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddApplicationActionRqst_ressource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddApplicationActionRqst::~AddApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.AddApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddApplicationActionRqst::ArenaDtor(void* object) {
  AddApplicationActionRqst* _this = reinterpret_cast< AddApplicationActionRqst* >(object);
  (void)_this;
}
void AddApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionRqst& AddApplicationActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddApplicationActionRqst)
  return target;
}

size_t AddApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddApplicationActionRqst)
    MergeFrom(*source);
  }
}

void AddApplicationActionRqst::MergeFrom(const AddApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionRqst::CopyFrom(const AddApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionRqst::IsInitialized() const {
  return true;
}

void AddApplicationActionRqst::InternalSwap(AddApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionRsp::InitAsDefaultInstance() {
}
class AddApplicationActionRsp::_Internal {
 public:
};

AddApplicationActionRsp::AddApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddApplicationActionRsp)
}
AddApplicationActionRsp::AddApplicationActionRsp(const AddApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.AddApplicationActionRsp)
}

void AddApplicationActionRsp::SharedCtor() {
  result_ = false;
}

AddApplicationActionRsp::~AddApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.AddApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddApplicationActionRsp::ArenaDtor(void* object) {
  AddApplicationActionRsp* _this = reinterpret_cast< AddApplicationActionRsp* >(object);
  (void)_this;
}
void AddApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionRsp& AddApplicationActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddApplicationActionRsp)
  return target;
}

size_t AddApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddApplicationActionRsp)
    MergeFrom(*source);
  }
}

void AddApplicationActionRsp::MergeFrom(const AddApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionRsp::CopyFrom(const AddApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionRsp::IsInitialized() const {
  return true;
}

void AddApplicationActionRsp::InternalSwap(AddApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRqst::InitAsDefaultInstance() {
}
class RemoveApplicationActionRqst::_Internal {
 public:
};

RemoveApplicationActionRqst::RemoveApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveApplicationActionRqst)
}
RemoveApplicationActionRqst::RemoveApplicationActionRqst(const RemoveApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveApplicationActionRqst)
}

void RemoveApplicationActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveApplicationActionRqst_ressource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationActionRqst::~RemoveApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemoveApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationActionRqst::ArenaDtor(void* object) {
  RemoveApplicationActionRqst* _this = reinterpret_cast< RemoveApplicationActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRqst& RemoveApplicationActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveApplicationActionRqst)
  return target;
}

size_t RemoveApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveApplicationActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRqst::MergeFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRqst::CopyFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRqst::InternalSwap(RemoveApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRsp::InitAsDefaultInstance() {
}
class RemoveApplicationActionRsp::_Internal {
 public:
};

RemoveApplicationActionRsp::RemoveApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveApplicationActionRsp)
}
RemoveApplicationActionRsp::RemoveApplicationActionRsp(const RemoveApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveApplicationActionRsp)
}

void RemoveApplicationActionRsp::SharedCtor() {
  result_ = false;
}

RemoveApplicationActionRsp::~RemoveApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemoveApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationActionRsp::ArenaDtor(void* object) {
  RemoveApplicationActionRsp* _this = reinterpret_cast< RemoveApplicationActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRsp& RemoveApplicationActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveApplicationActionRsp)
  return target;
}

size_t RemoveApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveApplicationActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRsp::MergeFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRsp::CopyFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRsp::InternalSwap(RemoveApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllActionsRqst::InitAsDefaultInstance() {
}
class GetAllActionsRqst::_Internal {
 public:
};

GetAllActionsRqst::GetAllActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllActionsRqst)
}
GetAllActionsRqst::GetAllActionsRqst(const GetAllActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllActionsRqst)
}

void GetAllActionsRqst::SharedCtor() {
}

GetAllActionsRqst::~GetAllActionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetAllActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllActionsRqst::ArenaDtor(void* object) {
  GetAllActionsRqst* _this = reinterpret_cast< GetAllActionsRqst* >(object);
  (void)_this;
}
void GetAllActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllActionsRqst& GetAllActionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllActionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllActionsRqst)
  return target;
}

size_t GetAllActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllActionsRqst)
    MergeFrom(*source);
  }
}

void GetAllActionsRqst::MergeFrom(const GetAllActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActionsRqst::CopyFrom(const GetAllActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActionsRqst::IsInitialized() const {
  return true;
}

void GetAllActionsRqst::InternalSwap(GetAllActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllActionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllActionsRsp::InitAsDefaultInstance() {
}
class GetAllActionsRsp::_Internal {
 public:
};

GetAllActionsRsp::GetAllActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllActionsRsp)
}
GetAllActionsRsp::GetAllActionsRsp(const GetAllActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllActionsRsp)
}

void GetAllActionsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllActionsRsp_ressource_2eproto.base);
}

GetAllActionsRsp::~GetAllActionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetAllActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllActionsRsp::ArenaDtor(void* object) {
  GetAllActionsRsp* _this = reinterpret_cast< GetAllActionsRsp* >(object);
  (void)_this;
}
void GetAllActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllActionsRsp& GetAllActionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllActionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetAllActionsRsp.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetAllActionsRsp.actions");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllActionsRsp)
  return target;
}

size_t GetAllActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllActionsRsp)
    MergeFrom(*source);
  }
}

void GetAllActionsRsp::MergeFrom(const GetAllActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void GetAllActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActionsRsp::CopyFrom(const GetAllActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActionsRsp::IsInitialized() const {
  return true;
}

void GetAllActionsRsp::InternalSwap(GetAllActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllActionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRqst::InitAsDefaultInstance() {
}
class DeleteApplicationRqst::_Internal {
 public:
};

DeleteApplicationRqst::DeleteApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteApplicationRqst)
}
DeleteApplicationRqst::DeleteApplicationRqst(const DeleteApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteApplicationRqst)
}

void DeleteApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteApplicationRqst_ressource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationRqst::~DeleteApplicationRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationRqst::ArenaDtor(void* object) {
  DeleteApplicationRqst* _this = reinterpret_cast< DeleteApplicationRqst* >(object);
  (void)_this;
}
void DeleteApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRqst& DeleteApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteApplicationRqst)
  return target;
}

size_t DeleteApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteApplicationRqst)
    MergeFrom(*source);
  }
}

void DeleteApplicationRqst::MergeFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void DeleteApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRqst::CopyFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRqst::IsInitialized() const {
  return true;
}

void DeleteApplicationRqst::InternalSwap(DeleteApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRsp::InitAsDefaultInstance() {
}
class DeleteApplicationRsp::_Internal {
 public:
};

DeleteApplicationRsp::DeleteApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteApplicationRsp)
}
DeleteApplicationRsp::DeleteApplicationRsp(const DeleteApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteApplicationRsp)
}

void DeleteApplicationRsp::SharedCtor() {
  result_ = false;
}

DeleteApplicationRsp::~DeleteApplicationRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteApplicationRsp::ArenaDtor(void* object) {
  DeleteApplicationRsp* _this = reinterpret_cast< DeleteApplicationRsp* >(object);
  (void)_this;
}
void DeleteApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRsp& DeleteApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteApplicationRsp)
  return target;
}

size_t DeleteApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteApplicationRsp)
    MergeFrom(*source);
  }
}

void DeleteApplicationRsp::MergeFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRsp::CopyFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRsp::IsInitialized() const {
  return true;
}

void DeleteApplicationRsp::InternalSwap(DeleteApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RessourcePermission::InitAsDefaultInstance() {
  ::ressource::_RessourcePermission_default_instance_.user_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::ressource::_RessourcePermission_default_instance_.role_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::ressource::_RessourcePermission_default_instance_.application_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::ressource::_RessourcePermission_default_instance_.service_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::ressource::_RessourcePermission_default_instance_.peer_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class RessourcePermission::_Internal {
 public:
};

RessourcePermission::RessourcePermission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RessourcePermission)
}
RessourcePermission::RessourcePermission(const RessourcePermission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  number_ = from.number_;
  clear_has_owner();
  switch (from.owner_case()) {
    case kUser: {
      _internal_set_user(from._internal_user());
      break;
    }
    case kRole: {
      _internal_set_role(from._internal_role());
      break;
    }
    case kApplication: {
      _internal_set_application(from._internal_application());
      break;
    }
    case kService: {
      _internal_set_service(from._internal_service());
      break;
    }
    case kPeer: {
      _internal_set_peer(from._internal_peer());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RessourcePermission)
}

void RessourcePermission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RessourcePermission_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  number_ = 0;
  clear_has_owner();
}

RessourcePermission::~RessourcePermission() {
  // @@protoc_insertion_point(destructor:ressource.RessourcePermission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RessourcePermission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_owner()) {
    clear_owner();
  }
}

void RessourcePermission::ArenaDtor(void* object) {
  RessourcePermission* _this = reinterpret_cast< RessourcePermission* >(object);
  (void)_this;
}
void RessourcePermission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RessourcePermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RessourcePermission& RessourcePermission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RessourcePermission_ressource_2eproto.base);
  return *internal_default_instance();
}


void RessourcePermission::clear_owner() {
// @@protoc_insertion_point(one_of_clear_start:ressource.RessourcePermission)
  switch (owner_case()) {
    case kUser: {
      owner_.user_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kRole: {
      owner_.role_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kApplication: {
      owner_.application_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kService: {
      owner_.service_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kPeer: {
      owner_.peer_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OWNER_NOT_SET;
}


void RessourcePermission::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RessourcePermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  number_ = 0;
  clear_owner();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RessourcePermission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string role = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string application = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_application();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.application"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string service = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.service"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string peer = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_peer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RessourcePermission.peer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RessourcePermission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RessourcePermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (this->number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_number(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path(), target);
  }

  // string user = 3;
  if (_internal_has_user()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string role = 4;
  if (_internal_has_role()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role().data(), static_cast<int>(this->_internal_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.role");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_role(), target);
  }

  // string application = 5;
  if (_internal_has_application()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application().data(), static_cast<int>(this->_internal_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.application");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_application(), target);
  }

  // string service = 6;
  if (_internal_has_service()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service().data(), static_cast<int>(this->_internal_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.service");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_service(), target);
  }

  // string peer = 7;
  if (_internal_has_peer()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_peer().data(), static_cast<int>(this->_internal_peer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RessourcePermission.peer");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_peer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RessourcePermission)
  return target;
}

size_t RessourcePermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RessourcePermission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_number());
  }

  switch (owner_case()) {
    // string user = 3;
    case kUser: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_user());
      break;
    }
    // string role = 4;
    case kRole: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role());
      break;
    }
    // string application = 5;
    case kApplication: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_application());
      break;
    }
    // string service = 6;
    case kService: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_service());
      break;
    }
    // string peer = 7;
    case kPeer: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_peer());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RessourcePermission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RessourcePermission)
  GOOGLE_DCHECK_NE(&from, this);
  const RessourcePermission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RessourcePermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RessourcePermission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RessourcePermission)
    MergeFrom(*source);
  }
}

void RessourcePermission::MergeFrom(const RessourcePermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RessourcePermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.number() != 0) {
    _internal_set_number(from._internal_number());
  }
  switch (from.owner_case()) {
    case kUser: {
      _internal_set_user(from._internal_user());
      break;
    }
    case kRole: {
      _internal_set_role(from._internal_role());
      break;
    }
    case kApplication: {
      _internal_set_application(from._internal_application());
      break;
    }
    case kService: {
      _internal_set_service(from._internal_service());
      break;
    }
    case kPeer: {
      _internal_set_peer(from._internal_peer());
      break;
    }
    case OWNER_NOT_SET: {
      break;
    }
  }
}

void RessourcePermission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RessourcePermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RessourcePermission::CopyFrom(const RessourcePermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RessourcePermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RessourcePermission::IsInitialized() const {
  return true;
}

void RessourcePermission::InternalSwap(RessourcePermission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(number_, other->number_);
  swap(owner_, other->owner_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RessourcePermission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermissionsRqst::InitAsDefaultInstance() {
}
class GetPermissionsRqst::_Internal {
 public:
};

GetPermissionsRqst::GetPermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetPermissionsRqst)
}
GetPermissionsRqst::GetPermissionsRqst(const GetPermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetPermissionsRqst)
}

void GetPermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPermissionsRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPermissionsRqst::~GetPermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetPermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPermissionsRqst::ArenaDtor(void* object) {
  GetPermissionsRqst* _this = reinterpret_cast< GetPermissionsRqst* >(object);
  (void)_this;
}
void GetPermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermissionsRqst& GetPermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetPermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetPermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetPermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetPermissionsRqst)
  return target;
}

size_t GetPermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetPermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetPermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetPermissionsRqst)
    MergeFrom(*source);
  }
}

void GetPermissionsRqst::MergeFrom(const GetPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void GetPermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermissionsRqst::CopyFrom(const GetPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionsRqst::IsInitialized() const {
  return true;
}

void GetPermissionsRqst::InternalSwap(GetPermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermissionsRsp::InitAsDefaultInstance() {
}
class GetPermissionsRsp::_Internal {
 public:
};

GetPermissionsRsp::GetPermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetPermissionsRsp)
}
GetPermissionsRsp::GetPermissionsRsp(const GetPermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  permissions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_permissions().empty()) {
    permissions_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_permissions(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetPermissionsRsp)
}

void GetPermissionsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPermissionsRsp_ressource_2eproto.base);
  permissions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPermissionsRsp::~GetPermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetPermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  permissions_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPermissionsRsp::ArenaDtor(void* object) {
  GetPermissionsRsp* _this = reinterpret_cast< GetPermissionsRsp* >(object);
  (void)_this;
}
void GetPermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermissionsRsp& GetPermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetPermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string permissions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_permissions();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetPermissionsRsp.permissions"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string permissions = 1;
  if (this->permissions().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permissions().data(), static_cast<int>(this->_internal_permissions().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetPermissionsRsp.permissions");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_permissions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetPermissionsRsp)
  return target;
}

size_t GetPermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetPermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string permissions = 1;
  if (this->permissions().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permissions());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetPermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetPermissionsRsp)
    MergeFrom(*source);
  }
}

void GetPermissionsRsp::MergeFrom(const GetPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permissions().size() > 0) {
    _internal_set_permissions(from._internal_permissions());
  }
}

void GetPermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermissionsRsp::CopyFrom(const GetPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionsRsp::IsInitialized() const {
  return true;
}

void GetPermissionsRsp::InternalSwap(GetPermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permissions_.Swap(&other->permissions_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPermissionRqst::InitAsDefaultInstance() {
  ::ressource::_SetPermissionRqst_default_instance_._instance.get_mutable()->permission_ = const_cast< ::ressource::RessourcePermission*>(
      ::ressource::RessourcePermission::internal_default_instance());
}
class SetPermissionRqst::_Internal {
 public:
  static const ::ressource::RessourcePermission& permission(const SetPermissionRqst* msg);
};

const ::ressource::RessourcePermission&
SetPermissionRqst::_Internal::permission(const SetPermissionRqst* msg) {
  return *msg->permission_;
}
SetPermissionRqst::SetPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetPermissionRqst)
}
SetPermissionRqst::SetPermissionRqst(const SetPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_permission()) {
    permission_ = new ::ressource::RessourcePermission(*from.permission_);
  } else {
    permission_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SetPermissionRqst)
}

void SetPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetPermissionRqst_ressource_2eproto.base);
  permission_ = nullptr;
}

SetPermissionRqst::~SetPermissionRqst() {
  // @@protoc_insertion_point(destructor:ressource.SetPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete permission_;
}

void SetPermissionRqst::ArenaDtor(void* object) {
  SetPermissionRqst* _this = reinterpret_cast< SetPermissionRqst* >(object);
  (void)_this;
}
void SetPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPermissionRqst& SetPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPermissionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && permission_ != nullptr) {
    delete permission_;
  }
  permission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.RessourcePermission permission = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_permission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.RessourcePermission permission = 1;
  if (this->has_permission()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::permission(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetPermissionRqst)
  return target;
}

size_t SetPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.RessourcePermission permission = 1;
  if (this->has_permission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permission_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetPermissionRqst)
    MergeFrom(*source);
  }
}

void SetPermissionRqst::MergeFrom(const SetPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permission()) {
    _internal_mutable_permission()->::ressource::RessourcePermission::MergeFrom(from._internal_permission());
  }
}

void SetPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPermissionRqst::CopyFrom(const SetPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPermissionRqst::IsInitialized() const {
  return true;
}

void SetPermissionRqst::InternalSwap(SetPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetPermissionRsp::InitAsDefaultInstance() {
}
class SetPermissionRsp::_Internal {
 public:
};

SetPermissionRsp::SetPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetPermissionRsp)
}
SetPermissionRsp::SetPermissionRsp(const SetPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SetPermissionRsp)
}

void SetPermissionRsp::SharedCtor() {
  result_ = false;
}

SetPermissionRsp::~SetPermissionRsp() {
  // @@protoc_insertion_point(destructor:ressource.SetPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetPermissionRsp::ArenaDtor(void* object) {
  SetPermissionRsp* _this = reinterpret_cast< SetPermissionRsp* >(object);
  (void)_this;
}
void SetPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetPermissionRsp& SetPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetPermissionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetPermissionRsp)
  return target;
}

size_t SetPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetPermissionRsp)
    MergeFrom(*source);
  }
}

void SetPermissionRsp::MergeFrom(const SetPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPermissionRsp::CopyFrom(const SetPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPermissionRsp::IsInitialized() const {
  return true;
}

void SetPermissionRsp::InternalSwap(SetPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePermissionsRqst::InitAsDefaultInstance() {
}
class DeletePermissionsRqst::_Internal {
 public:
};

DeletePermissionsRqst::DeletePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeletePermissionsRqst)
}
DeletePermissionsRqst::DeletePermissionsRqst(const DeletePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeletePermissionsRqst)
}

void DeletePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeletePermissionsRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeletePermissionsRqst::~DeletePermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeletePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePermissionsRqst::ArenaDtor(void* object) {
  DeletePermissionsRqst* _this = reinterpret_cast< DeletePermissionsRqst* >(object);
  (void)_this;
}
void DeletePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePermissionsRqst& DeletePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeletePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeletePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeletePermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeletePermissionsRqst.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeletePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeletePermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeletePermissionsRqst.owner");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeletePermissionsRqst)
  return target;
}

size_t DeletePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeletePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeletePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeletePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeletePermissionsRqst)
    MergeFrom(*source);
  }
}

void DeletePermissionsRqst::MergeFrom(const DeletePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeletePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
}

void DeletePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeletePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePermissionsRqst::CopyFrom(const DeletePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeletePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePermissionsRqst::IsInitialized() const {
  return true;
}

void DeletePermissionsRqst::InternalSwap(DeletePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePermissionsRsp::InitAsDefaultInstance() {
}
class DeletePermissionsRsp::_Internal {
 public:
};

DeletePermissionsRsp::DeletePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeletePermissionsRsp)
}
DeletePermissionsRsp::DeletePermissionsRsp(const DeletePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeletePermissionsRsp)
}

void DeletePermissionsRsp::SharedCtor() {
  result_ = false;
}

DeletePermissionsRsp::~DeletePermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeletePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePermissionsRsp::ArenaDtor(void* object) {
  DeletePermissionsRsp* _this = reinterpret_cast< DeletePermissionsRsp* >(object);
  (void)_this;
}
void DeletePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePermissionsRsp& DeletePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeletePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeletePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeletePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeletePermissionsRsp)
  return target;
}

size_t DeletePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeletePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeletePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeletePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeletePermissionsRsp)
    MergeFrom(*source);
  }
}

void DeletePermissionsRsp::MergeFrom(const DeletePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeletePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeletePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeletePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePermissionsRsp::CopyFrom(const DeletePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeletePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePermissionsRsp::IsInitialized() const {
  return true;
}

void DeletePermissionsRsp::InternalSwap(DeletePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllFilesInfoRqst::InitAsDefaultInstance() {
}
class GetAllFilesInfoRqst::_Internal {
 public:
};

GetAllFilesInfoRqst::GetAllFilesInfoRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllFilesInfoRqst)
}
GetAllFilesInfoRqst::GetAllFilesInfoRqst(const GetAllFilesInfoRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllFilesInfoRqst)
}

void GetAllFilesInfoRqst::SharedCtor() {
}

GetAllFilesInfoRqst::~GetAllFilesInfoRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetAllFilesInfoRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllFilesInfoRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllFilesInfoRqst::ArenaDtor(void* object) {
  GetAllFilesInfoRqst* _this = reinterpret_cast< GetAllFilesInfoRqst* >(object);
  (void)_this;
}
void GetAllFilesInfoRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllFilesInfoRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllFilesInfoRqst& GetAllFilesInfoRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllFilesInfoRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllFilesInfoRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllFilesInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllFilesInfoRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllFilesInfoRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllFilesInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllFilesInfoRqst)
  return target;
}

size_t GetAllFilesInfoRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllFilesInfoRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllFilesInfoRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllFilesInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllFilesInfoRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllFilesInfoRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllFilesInfoRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllFilesInfoRqst)
    MergeFrom(*source);
  }
}

void GetAllFilesInfoRqst::MergeFrom(const GetAllFilesInfoRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllFilesInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllFilesInfoRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllFilesInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllFilesInfoRqst::CopyFrom(const GetAllFilesInfoRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllFilesInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllFilesInfoRqst::IsInitialized() const {
  return true;
}

void GetAllFilesInfoRqst::InternalSwap(GetAllFilesInfoRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllFilesInfoRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllFilesInfoRsp::InitAsDefaultInstance() {
}
class GetAllFilesInfoRsp::_Internal {
 public:
};

GetAllFilesInfoRsp::GetAllFilesInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllFilesInfoRsp)
}
GetAllFilesInfoRsp::GetAllFilesInfoRsp(const GetAllFilesInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllFilesInfoRsp)
}

void GetAllFilesInfoRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllFilesInfoRsp_ressource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllFilesInfoRsp::~GetAllFilesInfoRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetAllFilesInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllFilesInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllFilesInfoRsp::ArenaDtor(void* object) {
  GetAllFilesInfoRsp* _this = reinterpret_cast< GetAllFilesInfoRsp* >(object);
  (void)_this;
}
void GetAllFilesInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllFilesInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllFilesInfoRsp& GetAllFilesInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllFilesInfoRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllFilesInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllFilesInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllFilesInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetAllFilesInfoRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllFilesInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllFilesInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetAllFilesInfoRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllFilesInfoRsp)
  return target;
}

size_t GetAllFilesInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllFilesInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllFilesInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllFilesInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllFilesInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllFilesInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllFilesInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllFilesInfoRsp)
    MergeFrom(*source);
  }
}

void GetAllFilesInfoRsp::MergeFrom(const GetAllFilesInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllFilesInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetAllFilesInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllFilesInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllFilesInfoRsp::CopyFrom(const GetAllFilesInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllFilesInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllFilesInfoRsp::IsInitialized() const {
  return true;
}

void GetAllFilesInfoRsp::InternalSwap(GetAllFilesInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllFilesInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllApplicationsInfoRqst::InitAsDefaultInstance() {
}
class GetAllApplicationsInfoRqst::_Internal {
 public:
};

GetAllApplicationsInfoRqst::GetAllApplicationsInfoRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllApplicationsInfoRqst)
}
GetAllApplicationsInfoRqst::GetAllApplicationsInfoRqst(const GetAllApplicationsInfoRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllApplicationsInfoRqst)
}

void GetAllApplicationsInfoRqst::SharedCtor() {
}

GetAllApplicationsInfoRqst::~GetAllApplicationsInfoRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetAllApplicationsInfoRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllApplicationsInfoRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllApplicationsInfoRqst::ArenaDtor(void* object) {
  GetAllApplicationsInfoRqst* _this = reinterpret_cast< GetAllApplicationsInfoRqst* >(object);
  (void)_this;
}
void GetAllApplicationsInfoRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllApplicationsInfoRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllApplicationsInfoRqst& GetAllApplicationsInfoRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllApplicationsInfoRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllApplicationsInfoRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllApplicationsInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllApplicationsInfoRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllApplicationsInfoRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllApplicationsInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllApplicationsInfoRqst)
  return target;
}

size_t GetAllApplicationsInfoRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllApplicationsInfoRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllApplicationsInfoRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllApplicationsInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllApplicationsInfoRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllApplicationsInfoRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllApplicationsInfoRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllApplicationsInfoRqst)
    MergeFrom(*source);
  }
}

void GetAllApplicationsInfoRqst::MergeFrom(const GetAllApplicationsInfoRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllApplicationsInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllApplicationsInfoRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllApplicationsInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllApplicationsInfoRqst::CopyFrom(const GetAllApplicationsInfoRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllApplicationsInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllApplicationsInfoRqst::IsInitialized() const {
  return true;
}

void GetAllApplicationsInfoRqst::InternalSwap(GetAllApplicationsInfoRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllApplicationsInfoRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllApplicationsInfoRsp::InitAsDefaultInstance() {
}
class GetAllApplicationsInfoRsp::_Internal {
 public:
};

GetAllApplicationsInfoRsp::GetAllApplicationsInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetAllApplicationsInfoRsp)
}
GetAllApplicationsInfoRsp::GetAllApplicationsInfoRsp(const GetAllApplicationsInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetAllApplicationsInfoRsp)
}

void GetAllApplicationsInfoRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllApplicationsInfoRsp_ressource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllApplicationsInfoRsp::~GetAllApplicationsInfoRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetAllApplicationsInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllApplicationsInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllApplicationsInfoRsp::ArenaDtor(void* object) {
  GetAllApplicationsInfoRsp* _this = reinterpret_cast< GetAllApplicationsInfoRsp* >(object);
  (void)_this;
}
void GetAllApplicationsInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllApplicationsInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllApplicationsInfoRsp& GetAllApplicationsInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllApplicationsInfoRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetAllApplicationsInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetAllApplicationsInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllApplicationsInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetAllApplicationsInfoRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllApplicationsInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetAllApplicationsInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetAllApplicationsInfoRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetAllApplicationsInfoRsp)
  return target;
}

size_t GetAllApplicationsInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetAllApplicationsInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllApplicationsInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetAllApplicationsInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllApplicationsInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllApplicationsInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetAllApplicationsInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetAllApplicationsInfoRsp)
    MergeFrom(*source);
  }
}

void GetAllApplicationsInfoRsp::MergeFrom(const GetAllApplicationsInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetAllApplicationsInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetAllApplicationsInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetAllApplicationsInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllApplicationsInfoRsp::CopyFrom(const GetAllApplicationsInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetAllApplicationsInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllApplicationsInfoRsp::IsInitialized() const {
  return true;
}

void GetAllApplicationsInfoRsp::InternalSwap(GetAllApplicationsInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllApplicationsInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UserSyncInfos::InitAsDefaultInstance() {
}
class UserSyncInfos::_Internal {
 public:
};

UserSyncInfos::UserSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.UserSyncInfos)
}
UserSyncInfos::UserSyncInfos(const UserSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base().empty()) {
    base_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.UserSyncInfos)
}

void UserSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserSyncInfos_ressource_2eproto.base);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UserSyncInfos::~UserSyncInfos() {
  // @@protoc_insertion_point(destructor:ressource.UserSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UserSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserSyncInfos::ArenaDtor(void* object) {
  UserSyncInfos* _this = reinterpret_cast< UserSyncInfos* >(object);
  (void)_this;
}
void UserSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserSyncInfos& UserSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserSyncInfos_ressource_2eproto.base);
  return *internal_default_instance();
}


void UserSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.UserSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_base();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.UserSyncInfos.base"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.UserSyncInfos.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.UserSyncInfos.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.UserSyncInfos.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.UserSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base().data(), static_cast<int>(this->_internal_base().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.UserSyncInfos.base");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.UserSyncInfos.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.UserSyncInfos.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string email = 4;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.UserSyncInfos.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.UserSyncInfos)
  return target;
}

size_t UserSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.UserSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string email = 4;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.UserSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.UserSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.UserSyncInfos)
    MergeFrom(*source);
  }
}

void UserSyncInfos::MergeFrom(const UserSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.UserSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base().size() > 0) {
    _internal_set_base(from._internal_base());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
}

void UserSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.UserSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSyncInfos::CopyFrom(const UserSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.UserSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSyncInfos::IsInitialized() const {
  return true;
}

void UserSyncInfos::InternalSwap(UserSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  base_.Swap(&other->base_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GroupSyncInfos::InitAsDefaultInstance() {
}
class GroupSyncInfos::_Internal {
 public:
};

GroupSyncInfos::GroupSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GroupSyncInfos)
}
GroupSyncInfos::GroupSyncInfos(const GroupSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base().empty()) {
    base_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GroupSyncInfos)
}

void GroupSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GroupSyncInfos_ressource_2eproto.base);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GroupSyncInfos::~GroupSyncInfos() {
  // @@protoc_insertion_point(destructor:ressource.GroupSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GroupSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GroupSyncInfos::ArenaDtor(void* object) {
  GroupSyncInfos* _this = reinterpret_cast< GroupSyncInfos* >(object);
  (void)_this;
}
void GroupSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GroupSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupSyncInfos& GroupSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GroupSyncInfos_ressource_2eproto.base);
  return *internal_default_instance();
}


void GroupSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GroupSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_base();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GroupSyncInfos.base"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GroupSyncInfos.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GroupSyncInfos.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GroupSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GroupSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base().data(), static_cast<int>(this->_internal_base().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GroupSyncInfos.base");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GroupSyncInfos.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GroupSyncInfos.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GroupSyncInfos)
  return target;
}

size_t GroupSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GroupSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GroupSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GroupSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GroupSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GroupSyncInfos)
    MergeFrom(*source);
  }
}

void GroupSyncInfos::MergeFrom(const GroupSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GroupSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base().size() > 0) {
    _internal_set_base(from._internal_base());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GroupSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GroupSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupSyncInfos::CopyFrom(const GroupSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GroupSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupSyncInfos::IsInitialized() const {
  return true;
}

void GroupSyncInfos::InternalSwap(GroupSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  base_.Swap(&other->base_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LdapSyncInfos::InitAsDefaultInstance() {
  ::ressource::_LdapSyncInfos_default_instance_._instance.get_mutable()->usersyncinfos_ = const_cast< ::ressource::UserSyncInfos*>(
      ::ressource::UserSyncInfos::internal_default_instance());
  ::ressource::_LdapSyncInfos_default_instance_._instance.get_mutable()->groupsyncinfos_ = const_cast< ::ressource::GroupSyncInfos*>(
      ::ressource::GroupSyncInfos::internal_default_instance());
}
class LdapSyncInfos::_Internal {
 public:
  static const ::ressource::UserSyncInfos& usersyncinfos(const LdapSyncInfos* msg);
  static const ::ressource::GroupSyncInfos& groupsyncinfos(const LdapSyncInfos* msg);
};

const ::ressource::UserSyncInfos&
LdapSyncInfos::_Internal::usersyncinfos(const LdapSyncInfos* msg) {
  return *msg->usersyncinfos_;
}
const ::ressource::GroupSyncInfos&
LdapSyncInfos::_Internal::groupsyncinfos(const LdapSyncInfos* msg) {
  return *msg->groupsyncinfos_;
}
LdapSyncInfos::LdapSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.LdapSyncInfos)
}
LdapSyncInfos::LdapSyncInfos(const LdapSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ldapseriveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ldapseriveid().empty()) {
    ldapseriveid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ldapseriveid(),
      GetArena());
  }
  connectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connectionid().empty()) {
    connectionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connectionid(),
      GetArena());
  }
  if (from._internal_has_usersyncinfos()) {
    usersyncinfos_ = new ::ressource::UserSyncInfos(*from.usersyncinfos_);
  } else {
    usersyncinfos_ = nullptr;
  }
  if (from._internal_has_groupsyncinfos()) {
    groupsyncinfos_ = new ::ressource::GroupSyncInfos(*from.groupsyncinfos_);
  } else {
    groupsyncinfos_ = nullptr;
  }
  refresh_ = from.refresh_;
  // @@protoc_insertion_point(copy_constructor:ressource.LdapSyncInfos)
}

void LdapSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LdapSyncInfos_ressource_2eproto.base);
  ldapseriveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&usersyncinfos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_) -
      reinterpret_cast<char*>(&usersyncinfos_)) + sizeof(refresh_));
}

LdapSyncInfos::~LdapSyncInfos() {
  // @@protoc_insertion_point(destructor:ressource.LdapSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LdapSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ldapseriveid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connectionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete usersyncinfos_;
  if (this != internal_default_instance()) delete groupsyncinfos_;
}

void LdapSyncInfos::ArenaDtor(void* object) {
  LdapSyncInfos* _this = reinterpret_cast< LdapSyncInfos* >(object);
  (void)_this;
}
void LdapSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LdapSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LdapSyncInfos& LdapSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LdapSyncInfos_ressource_2eproto.base);
  return *internal_default_instance();
}


void LdapSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.LdapSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ldapseriveid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connectionid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && usersyncinfos_ != nullptr) {
    delete usersyncinfos_;
  }
  usersyncinfos_ = nullptr;
  if (GetArena() == nullptr && groupsyncinfos_ != nullptr) {
    delete groupsyncinfos_;
  }
  groupsyncinfos_ = nullptr;
  refresh_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LdapSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ldapSeriveId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ldapseriveid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LdapSyncInfos.ldapSeriveId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connectionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connectionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LdapSyncInfos.connectionId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 refresh = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          refresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ressource.UserSyncInfos userSyncInfos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_usersyncinfos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ressource.GroupSyncInfos groupSyncInfos = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupsyncinfos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LdapSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.LdapSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ldapSeriveId = 1;
  if (this->ldapseriveid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ldapseriveid().data(), static_cast<int>(this->_internal_ldapseriveid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LdapSyncInfos.ldapSeriveId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ldapseriveid(), target);
  }

  // string connectionId = 2;
  if (this->connectionid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connectionid().data(), static_cast<int>(this->_internal_connectionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LdapSyncInfos.connectionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connectionid(), target);
  }

  // int32 refresh = 3;
  if (this->refresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_refresh(), target);
  }

  // .ressource.UserSyncInfos userSyncInfos = 4;
  if (this->has_usersyncinfos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::usersyncinfos(this), target, stream);
  }

  // .ressource.GroupSyncInfos groupSyncInfos = 5;
  if (this->has_groupsyncinfos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::groupsyncinfos(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.LdapSyncInfos)
  return target;
}

size_t LdapSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.LdapSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ldapSeriveId = 1;
  if (this->ldapseriveid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ldapseriveid());
  }

  // string connectionId = 2;
  if (this->connectionid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connectionid());
  }

  // .ressource.UserSyncInfos userSyncInfos = 4;
  if (this->has_usersyncinfos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *usersyncinfos_);
  }

  // .ressource.GroupSyncInfos groupSyncInfos = 5;
  if (this->has_groupsyncinfos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupsyncinfos_);
  }

  // int32 refresh = 3;
  if (this->refresh() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_refresh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LdapSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.LdapSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const LdapSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LdapSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.LdapSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.LdapSyncInfos)
    MergeFrom(*source);
  }
}

void LdapSyncInfos::MergeFrom(const LdapSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.LdapSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ldapseriveid().size() > 0) {
    _internal_set_ldapseriveid(from._internal_ldapseriveid());
  }
  if (from.connectionid().size() > 0) {
    _internal_set_connectionid(from._internal_connectionid());
  }
  if (from.has_usersyncinfos()) {
    _internal_mutable_usersyncinfos()->::ressource::UserSyncInfos::MergeFrom(from._internal_usersyncinfos());
  }
  if (from.has_groupsyncinfos()) {
    _internal_mutable_groupsyncinfos()->::ressource::GroupSyncInfos::MergeFrom(from._internal_groupsyncinfos());
  }
  if (from.refresh() != 0) {
    _internal_set_refresh(from._internal_refresh());
  }
}

void LdapSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.LdapSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LdapSyncInfos::CopyFrom(const LdapSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.LdapSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LdapSyncInfos::IsInitialized() const {
  return true;
}

void LdapSyncInfos::InternalSwap(LdapSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ldapseriveid_.Swap(&other->ldapseriveid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connectionid_.Swap(&other->connectionid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LdapSyncInfos, refresh_)
      + sizeof(LdapSyncInfos::refresh_)
      - PROTOBUF_FIELD_OFFSET(LdapSyncInfos, usersyncinfos_)>(
          reinterpret_cast<char*>(&usersyncinfos_),
          reinterpret_cast<char*>(&other->usersyncinfos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LdapSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SynchronizeLdapRqst::InitAsDefaultInstance() {
  ::ressource::_SynchronizeLdapRqst_default_instance_._instance.get_mutable()->syncinfo_ = const_cast< ::ressource::LdapSyncInfos*>(
      ::ressource::LdapSyncInfos::internal_default_instance());
}
class SynchronizeLdapRqst::_Internal {
 public:
  static const ::ressource::LdapSyncInfos& syncinfo(const SynchronizeLdapRqst* msg);
};

const ::ressource::LdapSyncInfos&
SynchronizeLdapRqst::_Internal::syncinfo(const SynchronizeLdapRqst* msg) {
  return *msg->syncinfo_;
}
SynchronizeLdapRqst::SynchronizeLdapRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SynchronizeLdapRqst)
}
SynchronizeLdapRqst::SynchronizeLdapRqst(const SynchronizeLdapRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_syncinfo()) {
    syncinfo_ = new ::ressource::LdapSyncInfos(*from.syncinfo_);
  } else {
    syncinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SynchronizeLdapRqst)
}

void SynchronizeLdapRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SynchronizeLdapRqst_ressource_2eproto.base);
  syncinfo_ = nullptr;
}

SynchronizeLdapRqst::~SynchronizeLdapRqst() {
  // @@protoc_insertion_point(destructor:ressource.SynchronizeLdapRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SynchronizeLdapRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete syncinfo_;
}

void SynchronizeLdapRqst::ArenaDtor(void* object) {
  SynchronizeLdapRqst* _this = reinterpret_cast< SynchronizeLdapRqst* >(object);
  (void)_this;
}
void SynchronizeLdapRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SynchronizeLdapRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SynchronizeLdapRqst& SynchronizeLdapRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SynchronizeLdapRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SynchronizeLdapRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SynchronizeLdapRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && syncinfo_ != nullptr) {
    delete syncinfo_;
  }
  syncinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynchronizeLdapRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.LdapSyncInfos syncInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_syncinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SynchronizeLdapRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SynchronizeLdapRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.LdapSyncInfos syncInfo = 1;
  if (this->has_syncinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::syncinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SynchronizeLdapRqst)
  return target;
}

size_t SynchronizeLdapRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SynchronizeLdapRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.LdapSyncInfos syncInfo = 1;
  if (this->has_syncinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *syncinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynchronizeLdapRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SynchronizeLdapRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SynchronizeLdapRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SynchronizeLdapRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SynchronizeLdapRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SynchronizeLdapRqst)
    MergeFrom(*source);
  }
}

void SynchronizeLdapRqst::MergeFrom(const SynchronizeLdapRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SynchronizeLdapRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_syncinfo()) {
    _internal_mutable_syncinfo()->::ressource::LdapSyncInfos::MergeFrom(from._internal_syncinfo());
  }
}

void SynchronizeLdapRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SynchronizeLdapRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeLdapRqst::CopyFrom(const SynchronizeLdapRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SynchronizeLdapRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeLdapRqst::IsInitialized() const {
  return true;
}

void SynchronizeLdapRqst::InternalSwap(SynchronizeLdapRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(syncinfo_, other->syncinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynchronizeLdapRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SynchronizeLdapRsp::InitAsDefaultInstance() {
}
class SynchronizeLdapRsp::_Internal {
 public:
};

SynchronizeLdapRsp::SynchronizeLdapRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SynchronizeLdapRsp)
}
SynchronizeLdapRsp::SynchronizeLdapRsp(const SynchronizeLdapRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SynchronizeLdapRsp)
}

void SynchronizeLdapRsp::SharedCtor() {
  result_ = false;
}

SynchronizeLdapRsp::~SynchronizeLdapRsp() {
  // @@protoc_insertion_point(destructor:ressource.SynchronizeLdapRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SynchronizeLdapRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SynchronizeLdapRsp::ArenaDtor(void* object) {
  SynchronizeLdapRsp* _this = reinterpret_cast< SynchronizeLdapRsp* >(object);
  (void)_this;
}
void SynchronizeLdapRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SynchronizeLdapRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SynchronizeLdapRsp& SynchronizeLdapRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SynchronizeLdapRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SynchronizeLdapRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SynchronizeLdapRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynchronizeLdapRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SynchronizeLdapRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SynchronizeLdapRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SynchronizeLdapRsp)
  return target;
}

size_t SynchronizeLdapRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SynchronizeLdapRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynchronizeLdapRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SynchronizeLdapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SynchronizeLdapRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SynchronizeLdapRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SynchronizeLdapRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SynchronizeLdapRsp)
    MergeFrom(*source);
  }
}

void SynchronizeLdapRsp::MergeFrom(const SynchronizeLdapRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SynchronizeLdapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SynchronizeLdapRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SynchronizeLdapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeLdapRsp::CopyFrom(const SynchronizeLdapRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SynchronizeLdapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeLdapRsp::IsInitialized() const {
  return true;
}

void SynchronizeLdapRsp::InternalSwap(SynchronizeLdapRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynchronizeLdapRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetRessourceOwnerRqst::InitAsDefaultInstance() {
}
class SetRessourceOwnerRqst::_Internal {
 public:
};

SetRessourceOwnerRqst::SetRessourceOwnerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetRessourceOwnerRqst)
}
SetRessourceOwnerRqst::SetRessourceOwnerRqst(const SetRessourceOwnerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SetRessourceOwnerRqst)
}

void SetRessourceOwnerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetRessourceOwnerRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetRessourceOwnerRqst::~SetRessourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:ressource.SetRessourceOwnerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetRessourceOwnerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetRessourceOwnerRqst::ArenaDtor(void* object) {
  SetRessourceOwnerRqst* _this = reinterpret_cast< SetRessourceOwnerRqst* >(object);
  (void)_this;
}
void SetRessourceOwnerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetRessourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetRessourceOwnerRqst& SetRessourceOwnerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetRessourceOwnerRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetRessourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetRessourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRessourceOwnerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.SetRessourceOwnerRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.SetRessourceOwnerRqst.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetRessourceOwnerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetRessourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.SetRessourceOwnerRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.SetRessourceOwnerRqst.owner");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetRessourceOwnerRqst)
  return target;
}

size_t SetRessourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetRessourceOwnerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRessourceOwnerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetRessourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRessourceOwnerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetRessourceOwnerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetRessourceOwnerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetRessourceOwnerRqst)
    MergeFrom(*source);
  }
}

void SetRessourceOwnerRqst::MergeFrom(const SetRessourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetRessourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
}

void SetRessourceOwnerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetRessourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRessourceOwnerRqst::CopyFrom(const SetRessourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetRessourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRessourceOwnerRqst::IsInitialized() const {
  return true;
}

void SetRessourceOwnerRqst::InternalSwap(SetRessourceOwnerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRessourceOwnerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetRessourceOwnerRsp::InitAsDefaultInstance() {
}
class SetRessourceOwnerRsp::_Internal {
 public:
};

SetRessourceOwnerRsp::SetRessourceOwnerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetRessourceOwnerRsp)
}
SetRessourceOwnerRsp::SetRessourceOwnerRsp(const SetRessourceOwnerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SetRessourceOwnerRsp)
}

void SetRessourceOwnerRsp::SharedCtor() {
  result_ = false;
}

SetRessourceOwnerRsp::~SetRessourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:ressource.SetRessourceOwnerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetRessourceOwnerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetRessourceOwnerRsp::ArenaDtor(void* object) {
  SetRessourceOwnerRsp* _this = reinterpret_cast< SetRessourceOwnerRsp* >(object);
  (void)_this;
}
void SetRessourceOwnerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetRessourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetRessourceOwnerRsp& SetRessourceOwnerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetRessourceOwnerRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetRessourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetRessourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRessourceOwnerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetRessourceOwnerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetRessourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetRessourceOwnerRsp)
  return target;
}

size_t SetRessourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetRessourceOwnerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRessourceOwnerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetRessourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRessourceOwnerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetRessourceOwnerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetRessourceOwnerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetRessourceOwnerRsp)
    MergeFrom(*source);
  }
}

void SetRessourceOwnerRsp::MergeFrom(const SetRessourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetRessourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetRessourceOwnerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetRessourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRessourceOwnerRsp::CopyFrom(const SetRessourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetRessourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRessourceOwnerRsp::IsInitialized() const {
  return true;
}

void SetRessourceOwnerRsp::InternalSwap(SetRessourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRessourceOwnerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRessourceOwnersRqst::InitAsDefaultInstance() {
}
class GetRessourceOwnersRqst::_Internal {
 public:
};

GetRessourceOwnersRqst::GetRessourceOwnersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetRessourceOwnersRqst)
}
GetRessourceOwnersRqst::GetRessourceOwnersRqst(const GetRessourceOwnersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetRessourceOwnersRqst)
}

void GetRessourceOwnersRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRessourceOwnersRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRessourceOwnersRqst::~GetRessourceOwnersRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetRessourceOwnersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRessourceOwnersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRessourceOwnersRqst::ArenaDtor(void* object) {
  GetRessourceOwnersRqst* _this = reinterpret_cast< GetRessourceOwnersRqst* >(object);
  (void)_this;
}
void GetRessourceOwnersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRessourceOwnersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRessourceOwnersRqst& GetRessourceOwnersRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRessourceOwnersRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetRessourceOwnersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetRessourceOwnersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRessourceOwnersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetRessourceOwnersRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRessourceOwnersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetRessourceOwnersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetRessourceOwnersRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetRessourceOwnersRqst)
  return target;
}

size_t GetRessourceOwnersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetRessourceOwnersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRessourceOwnersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetRessourceOwnersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRessourceOwnersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRessourceOwnersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetRessourceOwnersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetRessourceOwnersRqst)
    MergeFrom(*source);
  }
}

void GetRessourceOwnersRqst::MergeFrom(const GetRessourceOwnersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetRessourceOwnersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void GetRessourceOwnersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetRessourceOwnersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRessourceOwnersRqst::CopyFrom(const GetRessourceOwnersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetRessourceOwnersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRessourceOwnersRqst::IsInitialized() const {
  return true;
}

void GetRessourceOwnersRqst::InternalSwap(GetRessourceOwnersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRessourceOwnersRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRessourceOwnersRsp::InitAsDefaultInstance() {
}
class GetRessourceOwnersRsp::_Internal {
 public:
};

GetRessourceOwnersRsp::GetRessourceOwnersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  owners_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetRessourceOwnersRsp)
}
GetRessourceOwnersRsp::GetRessourceOwnersRsp(const GetRessourceOwnersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      owners_(from.owners_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetRessourceOwnersRsp)
}

void GetRessourceOwnersRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRessourceOwnersRsp_ressource_2eproto.base);
}

GetRessourceOwnersRsp::~GetRessourceOwnersRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetRessourceOwnersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRessourceOwnersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRessourceOwnersRsp::ArenaDtor(void* object) {
  GetRessourceOwnersRsp* _this = reinterpret_cast< GetRessourceOwnersRsp* >(object);
  (void)_this;
}
void GetRessourceOwnersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRessourceOwnersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRessourceOwnersRsp& GetRessourceOwnersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRessourceOwnersRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetRessourceOwnersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetRessourceOwnersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owners_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRessourceOwnersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string owners = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_owners();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetRessourceOwnersRsp.owners"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRessourceOwnersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetRessourceOwnersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string owners = 1;
  for (int i = 0, n = this->_internal_owners_size(); i < n; i++) {
    const auto& s = this->_internal_owners(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetRessourceOwnersRsp.owners");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetRessourceOwnersRsp)
  return target;
}

size_t GetRessourceOwnersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetRessourceOwnersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string owners = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(owners_.size());
  for (int i = 0, n = owners_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      owners_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRessourceOwnersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetRessourceOwnersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRessourceOwnersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRessourceOwnersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetRessourceOwnersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetRessourceOwnersRsp)
    MergeFrom(*source);
  }
}

void GetRessourceOwnersRsp::MergeFrom(const GetRessourceOwnersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetRessourceOwnersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  owners_.MergeFrom(from.owners_);
}

void GetRessourceOwnersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetRessourceOwnersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRessourceOwnersRsp::CopyFrom(const GetRessourceOwnersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetRessourceOwnersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRessourceOwnersRsp::IsInitialized() const {
  return true;
}

void GetRessourceOwnersRsp::InternalSwap(GetRessourceOwnersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  owners_.InternalSwap(&other->owners_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRessourceOwnersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRessourceOwnerRqst::InitAsDefaultInstance() {
}
class DeleteRessourceOwnerRqst::_Internal {
 public:
};

DeleteRessourceOwnerRqst::DeleteRessourceOwnerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRessourceOwnerRqst)
}
DeleteRessourceOwnerRqst::DeleteRessourceOwnerRqst(const DeleteRessourceOwnerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRessourceOwnerRqst)
}

void DeleteRessourceOwnerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRessourceOwnerRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRessourceOwnerRqst::~DeleteRessourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRessourceOwnerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRessourceOwnerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRessourceOwnerRqst::ArenaDtor(void* object) {
  DeleteRessourceOwnerRqst* _this = reinterpret_cast< DeleteRessourceOwnerRqst* >(object);
  (void)_this;
}
void DeleteRessourceOwnerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRessourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRessourceOwnerRqst& DeleteRessourceOwnerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRessourceOwnerRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRessourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRessourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRessourceOwnerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteRessourceOwnerRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteRessourceOwnerRqst.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRessourceOwnerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRessourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteRessourceOwnerRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteRessourceOwnerRqst.owner");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRessourceOwnerRqst)
  return target;
}

size_t DeleteRessourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRessourceOwnerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRessourceOwnerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRessourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRessourceOwnerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRessourceOwnerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRessourceOwnerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRessourceOwnerRqst)
    MergeFrom(*source);
  }
}

void DeleteRessourceOwnerRqst::MergeFrom(const DeleteRessourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRessourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
}

void DeleteRessourceOwnerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRessourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRessourceOwnerRqst::CopyFrom(const DeleteRessourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRessourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRessourceOwnerRqst::IsInitialized() const {
  return true;
}

void DeleteRessourceOwnerRqst::InternalSwap(DeleteRessourceOwnerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRessourceOwnerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRessourceOwnerRsp::InitAsDefaultInstance() {
}
class DeleteRessourceOwnerRsp::_Internal {
 public:
};

DeleteRessourceOwnerRsp::DeleteRessourceOwnerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRessourceOwnerRsp)
}
DeleteRessourceOwnerRsp::DeleteRessourceOwnerRsp(const DeleteRessourceOwnerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRessourceOwnerRsp)
}

void DeleteRessourceOwnerRsp::SharedCtor() {
  result_ = false;
}

DeleteRessourceOwnerRsp::~DeleteRessourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRessourceOwnerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRessourceOwnerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRessourceOwnerRsp::ArenaDtor(void* object) {
  DeleteRessourceOwnerRsp* _this = reinterpret_cast< DeleteRessourceOwnerRsp* >(object);
  (void)_this;
}
void DeleteRessourceOwnerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRessourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRessourceOwnerRsp& DeleteRessourceOwnerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRessourceOwnerRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRessourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRessourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRessourceOwnerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRessourceOwnerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRessourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRessourceOwnerRsp)
  return target;
}

size_t DeleteRessourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRessourceOwnerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRessourceOwnerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRessourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRessourceOwnerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRessourceOwnerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRessourceOwnerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRessourceOwnerRsp)
    MergeFrom(*source);
  }
}

void DeleteRessourceOwnerRsp::MergeFrom(const DeleteRessourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRessourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRessourceOwnerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRessourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRessourceOwnerRsp::CopyFrom(const DeleteRessourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRessourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRessourceOwnerRsp::IsInitialized() const {
  return true;
}

void DeleteRessourceOwnerRsp::InternalSwap(DeleteRessourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRessourceOwnerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRessourceOwnersRqst::InitAsDefaultInstance() {
}
class DeleteRessourceOwnersRqst::_Internal {
 public:
};

DeleteRessourceOwnersRqst::DeleteRessourceOwnersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRessourceOwnersRqst)
}
DeleteRessourceOwnersRqst::DeleteRessourceOwnersRqst(const DeleteRessourceOwnersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRessourceOwnersRqst)
}

void DeleteRessourceOwnersRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRessourceOwnersRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRessourceOwnersRqst::~DeleteRessourceOwnersRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRessourceOwnersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRessourceOwnersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRessourceOwnersRqst::ArenaDtor(void* object) {
  DeleteRessourceOwnersRqst* _this = reinterpret_cast< DeleteRessourceOwnersRqst* >(object);
  (void)_this;
}
void DeleteRessourceOwnersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRessourceOwnersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRessourceOwnersRqst& DeleteRessourceOwnersRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRessourceOwnersRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRessourceOwnersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRessourceOwnersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRessourceOwnersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteRessourceOwnersRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRessourceOwnersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRessourceOwnersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteRessourceOwnersRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRessourceOwnersRqst)
  return target;
}

size_t DeleteRessourceOwnersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRessourceOwnersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRessourceOwnersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRessourceOwnersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRessourceOwnersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRessourceOwnersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRessourceOwnersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRessourceOwnersRqst)
    MergeFrom(*source);
  }
}

void DeleteRessourceOwnersRqst::MergeFrom(const DeleteRessourceOwnersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRessourceOwnersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void DeleteRessourceOwnersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRessourceOwnersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRessourceOwnersRqst::CopyFrom(const DeleteRessourceOwnersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRessourceOwnersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRessourceOwnersRqst::IsInitialized() const {
  return true;
}

void DeleteRessourceOwnersRqst::InternalSwap(DeleteRessourceOwnersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRessourceOwnersRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRessourceOwnersRsp::InitAsDefaultInstance() {
}
class DeleteRessourceOwnersRsp::_Internal {
 public:
};

DeleteRessourceOwnersRsp::DeleteRessourceOwnersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRessourceOwnersRsp)
}
DeleteRessourceOwnersRsp::DeleteRessourceOwnersRsp(const DeleteRessourceOwnersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRessourceOwnersRsp)
}

void DeleteRessourceOwnersRsp::SharedCtor() {
  result_ = false;
}

DeleteRessourceOwnersRsp::~DeleteRessourceOwnersRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRessourceOwnersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRessourceOwnersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRessourceOwnersRsp::ArenaDtor(void* object) {
  DeleteRessourceOwnersRsp* _this = reinterpret_cast< DeleteRessourceOwnersRsp* >(object);
  (void)_this;
}
void DeleteRessourceOwnersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRessourceOwnersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRessourceOwnersRsp& DeleteRessourceOwnersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRessourceOwnersRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRessourceOwnersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRessourceOwnersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRessourceOwnersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRessourceOwnersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRessourceOwnersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRessourceOwnersRsp)
  return target;
}

size_t DeleteRessourceOwnersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRessourceOwnersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRessourceOwnersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRessourceOwnersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRessourceOwnersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRessourceOwnersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRessourceOwnersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRessourceOwnersRsp)
    MergeFrom(*source);
  }
}

void DeleteRessourceOwnersRsp::MergeFrom(const DeleteRessourceOwnersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRessourceOwnersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRessourceOwnersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRessourceOwnersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRessourceOwnersRsp::CopyFrom(const DeleteRessourceOwnersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRessourceOwnersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRessourceOwnersRsp::IsInitialized() const {
  return true;
}

void DeleteRessourceOwnersRsp::InternalSwap(DeleteRessourceOwnersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRessourceOwnersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateTokenRqst::InitAsDefaultInstance() {
}
class ValidateTokenRqst::_Internal {
 public:
};

ValidateTokenRqst::ValidateTokenRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateTokenRqst)
}
ValidateTokenRqst::ValidateTokenRqst(const ValidateTokenRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateTokenRqst)
}

void ValidateTokenRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateTokenRqst_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ValidateTokenRqst::~ValidateTokenRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidateTokenRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateTokenRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateTokenRqst::ArenaDtor(void* object) {
  ValidateTokenRqst* _this = reinterpret_cast< ValidateTokenRqst* >(object);
  (void)_this;
}
void ValidateTokenRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateTokenRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateTokenRqst& ValidateTokenRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateTokenRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateTokenRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateTokenRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateTokenRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateTokenRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateTokenRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateTokenRqst)
  return target;
}

size_t ValidateTokenRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateTokenRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateTokenRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateTokenRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateTokenRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateTokenRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateTokenRqst)
    MergeFrom(*source);
  }
}

void ValidateTokenRqst::MergeFrom(const ValidateTokenRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void ValidateTokenRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateTokenRqst::CopyFrom(const ValidateTokenRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateTokenRqst::IsInitialized() const {
  return true;
}

void ValidateTokenRqst::InternalSwap(ValidateTokenRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateTokenRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateTokenRsp::InitAsDefaultInstance() {
}
class ValidateTokenRsp::_Internal {
 public:
};

ValidateTokenRsp::ValidateTokenRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateTokenRsp)
}
ValidateTokenRsp::ValidateTokenRsp(const ValidateTokenRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_clientid().empty()) {
    clientid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_clientid(),
      GetArena());
  }
  expired_ = from.expired_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateTokenRsp)
}

void ValidateTokenRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateTokenRsp_ressource_2eproto.base);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expired_ = PROTOBUF_LONGLONG(0);
}

ValidateTokenRsp::~ValidateTokenRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidateTokenRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateTokenRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  clientid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateTokenRsp::ArenaDtor(void* object) {
  ValidateTokenRsp* _this = reinterpret_cast< ValidateTokenRsp* >(object);
  (void)_this;
}
void ValidateTokenRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateTokenRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateTokenRsp& ValidateTokenRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateTokenRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expired_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateTokenRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string clientId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_clientid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateTokenRsp.clientId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expired = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          expired_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateTokenRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateTokenRsp.clientId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_clientid(), target);
  }

  // int64 expired = 2;
  if (this->expired() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_expired(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateTokenRsp)
  return target;
}

size_t ValidateTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateTokenRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  // int64 expired = 2;
  if (this->expired() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expired());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateTokenRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateTokenRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateTokenRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateTokenRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateTokenRsp)
    MergeFrom(*source);
  }
}

void ValidateTokenRsp::MergeFrom(const ValidateTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid().size() > 0) {
    _internal_set_clientid(from._internal_clientid());
  }
  if (from.expired() != 0) {
    _internal_set_expired(from._internal_expired());
  }
}

void ValidateTokenRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateTokenRsp::CopyFrom(const ValidateTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateTokenRsp::IsInitialized() const {
  return true;
}

void ValidateTokenRsp::InternalSwap(ValidateTokenRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  clientid_.Swap(&other->clientid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expired_, other->expired_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateTokenRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateApplicationAccessRqst::InitAsDefaultInstance() {
}
class ValidateApplicationAccessRqst::_Internal {
 public:
};

ValidateApplicationAccessRqst::ValidateApplicationAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateApplicationAccessRqst)
}
ValidateApplicationAccessRqst::ValidateApplicationAccessRqst(const ValidateApplicationAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateApplicationAccessRqst)
}

void ValidateApplicationAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateApplicationAccessRqst_ressource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ValidateApplicationAccessRqst::~ValidateApplicationAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidateApplicationAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateApplicationAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateApplicationAccessRqst::ArenaDtor(void* object) {
  ValidateApplicationAccessRqst* _this = reinterpret_cast< ValidateApplicationAccessRqst* >(object);
  (void)_this;
}
void ValidateApplicationAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateApplicationAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateApplicationAccessRqst& ValidateApplicationAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateApplicationAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateApplicationAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateApplicationAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateApplicationAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateApplicationAccessRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateApplicationAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateApplicationAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateApplicationAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateApplicationAccessRqst.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateApplicationAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateApplicationAccessRqst)
  return target;
}

size_t ValidateApplicationAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateApplicationAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateApplicationAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateApplicationAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateApplicationAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateApplicationAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateApplicationAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateApplicationAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateApplicationAccessRqst::MergeFrom(const ValidateApplicationAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateApplicationAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void ValidateApplicationAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateApplicationAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateApplicationAccessRqst::CopyFrom(const ValidateApplicationAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateApplicationAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateApplicationAccessRqst::IsInitialized() const {
  return true;
}

void ValidateApplicationAccessRqst::InternalSwap(ValidateApplicationAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateApplicationAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateApplicationAccessRsp::InitAsDefaultInstance() {
}
class ValidateApplicationAccessRsp::_Internal {
 public:
};

ValidateApplicationAccessRsp::ValidateApplicationAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateApplicationAccessRsp)
}
ValidateApplicationAccessRsp::ValidateApplicationAccessRsp(const ValidateApplicationAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateApplicationAccessRsp)
}

void ValidateApplicationAccessRsp::SharedCtor() {
  result_ = false;
}

ValidateApplicationAccessRsp::~ValidateApplicationAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidateApplicationAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateApplicationAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidateApplicationAccessRsp::ArenaDtor(void* object) {
  ValidateApplicationAccessRsp* _this = reinterpret_cast< ValidateApplicationAccessRsp* >(object);
  (void)_this;
}
void ValidateApplicationAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateApplicationAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateApplicationAccessRsp& ValidateApplicationAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateApplicationAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateApplicationAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateApplicationAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateApplicationAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateApplicationAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateApplicationAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateApplicationAccessRsp)
  return target;
}

size_t ValidateApplicationAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateApplicationAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateApplicationAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateApplicationAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateApplicationAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateApplicationAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateApplicationAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateApplicationAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateApplicationAccessRsp::MergeFrom(const ValidateApplicationAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateApplicationAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidateApplicationAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateApplicationAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateApplicationAccessRsp::CopyFrom(const ValidateApplicationAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateApplicationAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateApplicationAccessRsp::IsInitialized() const {
  return true;
}

void ValidateApplicationAccessRsp::InternalSwap(ValidateApplicationAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateApplicationAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidatePeerAccessRqst::InitAsDefaultInstance() {
}
class ValidatePeerAccessRqst::_Internal {
 public:
};

ValidatePeerAccessRqst::ValidatePeerAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidatePeerAccessRqst)
}
ValidatePeerAccessRqst::ValidatePeerAccessRqst(const ValidatePeerAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.ValidatePeerAccessRqst)
}

void ValidatePeerAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidatePeerAccessRqst_ressource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ValidatePeerAccessRqst::~ValidatePeerAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidatePeerAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidatePeerAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidatePeerAccessRqst::ArenaDtor(void* object) {
  ValidatePeerAccessRqst* _this = reinterpret_cast< ValidatePeerAccessRqst* >(object);
  (void)_this;
}
void ValidatePeerAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidatePeerAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatePeerAccessRqst& ValidatePeerAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidatePeerAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidatePeerAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidatePeerAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidatePeerAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidatePeerAccessRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidatePeerAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidatePeerAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidatePeerAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidatePeerAccessRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidatePeerAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidatePeerAccessRqst)
  return target;
}

size_t ValidatePeerAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidatePeerAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatePeerAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidatePeerAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatePeerAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidatePeerAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidatePeerAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidatePeerAccessRqst)
    MergeFrom(*source);
  }
}

void ValidatePeerAccessRqst::MergeFrom(const ValidatePeerAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidatePeerAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void ValidatePeerAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidatePeerAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatePeerAccessRqst::CopyFrom(const ValidatePeerAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidatePeerAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatePeerAccessRqst::IsInitialized() const {
  return true;
}

void ValidatePeerAccessRqst::InternalSwap(ValidatePeerAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidatePeerAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidatePeerAccessRsp::InitAsDefaultInstance() {
}
class ValidatePeerAccessRsp::_Internal {
 public:
};

ValidatePeerAccessRsp::ValidatePeerAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidatePeerAccessRsp)
}
ValidatePeerAccessRsp::ValidatePeerAccessRsp(const ValidatePeerAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidatePeerAccessRsp)
}

void ValidatePeerAccessRsp::SharedCtor() {
  result_ = false;
}

ValidatePeerAccessRsp::~ValidatePeerAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidatePeerAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidatePeerAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidatePeerAccessRsp::ArenaDtor(void* object) {
  ValidatePeerAccessRsp* _this = reinterpret_cast< ValidatePeerAccessRsp* >(object);
  (void)_this;
}
void ValidatePeerAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidatePeerAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatePeerAccessRsp& ValidatePeerAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidatePeerAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidatePeerAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidatePeerAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidatePeerAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidatePeerAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidatePeerAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidatePeerAccessRsp)
  return target;
}

size_t ValidatePeerAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidatePeerAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatePeerAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidatePeerAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatePeerAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidatePeerAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidatePeerAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidatePeerAccessRsp)
    MergeFrom(*source);
  }
}

void ValidatePeerAccessRsp::MergeFrom(const ValidatePeerAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidatePeerAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidatePeerAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidatePeerAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatePeerAccessRsp::CopyFrom(const ValidatePeerAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidatePeerAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatePeerAccessRsp::IsInitialized() const {
  return true;
}

void ValidatePeerAccessRsp::InternalSwap(ValidatePeerAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidatePeerAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidatePeerRessourceAccessRqst::InitAsDefaultInstance() {
}
class ValidatePeerRessourceAccessRqst::_Internal {
 public:
};

ValidatePeerRessourceAccessRqst::ValidatePeerRessourceAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidatePeerRessourceAccessRqst)
}
ValidatePeerRessourceAccessRqst::ValidatePeerRessourceAccessRqst(const ValidatePeerRessourceAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  permission_ = from.permission_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidatePeerRessourceAccessRqst)
}

void ValidatePeerRessourceAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
}

ValidatePeerRessourceAccessRqst::~ValidatePeerRessourceAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidatePeerRessourceAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidatePeerRessourceAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidatePeerRessourceAccessRqst::ArenaDtor(void* object) {
  ValidatePeerRessourceAccessRqst* _this = reinterpret_cast< ValidatePeerRessourceAccessRqst* >(object);
  (void)_this;
}
void ValidatePeerRessourceAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidatePeerRessourceAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatePeerRessourceAccessRqst& ValidatePeerRessourceAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidatePeerRessourceAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidatePeerRessourceAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidatePeerRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  permission_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidatePeerRessourceAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidatePeerRessourceAccessRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidatePeerRessourceAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidatePeerRessourceAccessRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 permission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          permission_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidatePeerRessourceAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidatePeerRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidatePeerRessourceAccessRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidatePeerRessourceAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidatePeerRessourceAccessRqst.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidatePeerRessourceAccessRqst)
  return target;
}

size_t ValidatePeerRessourceAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidatePeerRessourceAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_permission());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatePeerRessourceAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidatePeerRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatePeerRessourceAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidatePeerRessourceAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidatePeerRessourceAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidatePeerRessourceAccessRqst)
    MergeFrom(*source);
  }
}

void ValidatePeerRessourceAccessRqst::MergeFrom(const ValidatePeerRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidatePeerRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.permission() != 0) {
    _internal_set_permission(from._internal_permission());
  }
}

void ValidatePeerRessourceAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidatePeerRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatePeerRessourceAccessRqst::CopyFrom(const ValidatePeerRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidatePeerRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatePeerRessourceAccessRqst::IsInitialized() const {
  return true;
}

void ValidatePeerRessourceAccessRqst::InternalSwap(ValidatePeerRessourceAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidatePeerRessourceAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidatePeerRessourceAccessRsp::InitAsDefaultInstance() {
}
class ValidatePeerRessourceAccessRsp::_Internal {
 public:
};

ValidatePeerRessourceAccessRsp::ValidatePeerRessourceAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidatePeerRessourceAccessRsp)
}
ValidatePeerRessourceAccessRsp::ValidatePeerRessourceAccessRsp(const ValidatePeerRessourceAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidatePeerRessourceAccessRsp)
}

void ValidatePeerRessourceAccessRsp::SharedCtor() {
  result_ = false;
}

ValidatePeerRessourceAccessRsp::~ValidatePeerRessourceAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidatePeerRessourceAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidatePeerRessourceAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidatePeerRessourceAccessRsp::ArenaDtor(void* object) {
  ValidatePeerRessourceAccessRsp* _this = reinterpret_cast< ValidatePeerRessourceAccessRsp* >(object);
  (void)_this;
}
void ValidatePeerRessourceAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidatePeerRessourceAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatePeerRessourceAccessRsp& ValidatePeerRessourceAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidatePeerRessourceAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidatePeerRessourceAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidatePeerRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidatePeerRessourceAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidatePeerRessourceAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidatePeerRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidatePeerRessourceAccessRsp)
  return target;
}

size_t ValidatePeerRessourceAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidatePeerRessourceAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatePeerRessourceAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidatePeerRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatePeerRessourceAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidatePeerRessourceAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidatePeerRessourceAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidatePeerRessourceAccessRsp)
    MergeFrom(*source);
  }
}

void ValidatePeerRessourceAccessRsp::MergeFrom(const ValidatePeerRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidatePeerRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidatePeerRessourceAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidatePeerRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatePeerRessourceAccessRsp::CopyFrom(const ValidatePeerRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidatePeerRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatePeerRessourceAccessRsp::IsInitialized() const {
  return true;
}

void ValidatePeerRessourceAccessRsp::InternalSwap(ValidatePeerRessourceAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidatePeerRessourceAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateUserAccessRqst::InitAsDefaultInstance() {
}
class ValidateUserAccessRqst::_Internal {
 public:
};

ValidateUserAccessRqst::ValidateUserAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateUserAccessRqst)
}
ValidateUserAccessRqst::ValidateUserAccessRqst(const ValidateUserAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateUserAccessRqst)
}

void ValidateUserAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateUserAccessRqst_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ValidateUserAccessRqst::~ValidateUserAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidateUserAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateUserAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateUserAccessRqst::ArenaDtor(void* object) {
  ValidateUserAccessRqst* _this = reinterpret_cast< ValidateUserAccessRqst* >(object);
  (void)_this;
}
void ValidateUserAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateUserAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateUserAccessRqst& ValidateUserAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateUserAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateUserAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateUserAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateUserAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateUserAccessRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateUserAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateUserAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateUserAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateUserAccessRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateUserAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateUserAccessRqst)
  return target;
}

size_t ValidateUserAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateUserAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateUserAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateUserAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateUserAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateUserAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateUserAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateUserAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateUserAccessRqst::MergeFrom(const ValidateUserAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateUserAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void ValidateUserAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateUserAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateUserAccessRqst::CopyFrom(const ValidateUserAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateUserAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateUserAccessRqst::IsInitialized() const {
  return true;
}

void ValidateUserAccessRqst::InternalSwap(ValidateUserAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateUserAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateUserAccessRsp::InitAsDefaultInstance() {
}
class ValidateUserAccessRsp::_Internal {
 public:
};

ValidateUserAccessRsp::ValidateUserAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateUserAccessRsp)
}
ValidateUserAccessRsp::ValidateUserAccessRsp(const ValidateUserAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateUserAccessRsp)
}

void ValidateUserAccessRsp::SharedCtor() {
  result_ = false;
}

ValidateUserAccessRsp::~ValidateUserAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidateUserAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateUserAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidateUserAccessRsp::ArenaDtor(void* object) {
  ValidateUserAccessRsp* _this = reinterpret_cast< ValidateUserAccessRsp* >(object);
  (void)_this;
}
void ValidateUserAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateUserAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateUserAccessRsp& ValidateUserAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateUserAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateUserAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateUserAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateUserAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateUserAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateUserAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateUserAccessRsp)
  return target;
}

size_t ValidateUserAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateUserAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateUserAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateUserAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateUserAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateUserAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateUserAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateUserAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateUserAccessRsp::MergeFrom(const ValidateUserAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateUserAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidateUserAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateUserAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateUserAccessRsp::CopyFrom(const ValidateUserAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateUserAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateUserAccessRsp::IsInitialized() const {
  return true;
}

void ValidateUserAccessRsp::InternalSwap(ValidateUserAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateUserAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateUserRessourceAccessRqst::InitAsDefaultInstance() {
}
class ValidateUserRessourceAccessRqst::_Internal {
 public:
};

ValidateUserRessourceAccessRqst::ValidateUserRessourceAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateUserRessourceAccessRqst)
}
ValidateUserRessourceAccessRqst::ValidateUserRessourceAccessRqst(const ValidateUserRessourceAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  permission_ = from.permission_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateUserRessourceAccessRqst)
}

void ValidateUserRessourceAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateUserRessourceAccessRqst_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
}

ValidateUserRessourceAccessRqst::~ValidateUserRessourceAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidateUserRessourceAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateUserRessourceAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateUserRessourceAccessRqst::ArenaDtor(void* object) {
  ValidateUserRessourceAccessRqst* _this = reinterpret_cast< ValidateUserRessourceAccessRqst* >(object);
  (void)_this;
}
void ValidateUserRessourceAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateUserRessourceAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateUserRessourceAccessRqst& ValidateUserRessourceAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateUserRessourceAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateUserRessourceAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateUserRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  permission_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateUserRessourceAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateUserRessourceAccessRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateUserRessourceAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateUserRessourceAccessRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 permission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          permission_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateUserRessourceAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateUserRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateUserRessourceAccessRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateUserRessourceAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateUserRessourceAccessRqst.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateUserRessourceAccessRqst)
  return target;
}

size_t ValidateUserRessourceAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateUserRessourceAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_permission());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateUserRessourceAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateUserRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateUserRessourceAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateUserRessourceAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateUserRessourceAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateUserRessourceAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateUserRessourceAccessRqst::MergeFrom(const ValidateUserRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateUserRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.permission() != 0) {
    _internal_set_permission(from._internal_permission());
  }
}

void ValidateUserRessourceAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateUserRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateUserRessourceAccessRqst::CopyFrom(const ValidateUserRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateUserRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateUserRessourceAccessRqst::IsInitialized() const {
  return true;
}

void ValidateUserRessourceAccessRqst::InternalSwap(ValidateUserRessourceAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateUserRessourceAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateUserRessourceAccessRsp::InitAsDefaultInstance() {
}
class ValidateUserRessourceAccessRsp::_Internal {
 public:
};

ValidateUserRessourceAccessRsp::ValidateUserRessourceAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateUserRessourceAccessRsp)
}
ValidateUserRessourceAccessRsp::ValidateUserRessourceAccessRsp(const ValidateUserRessourceAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateUserRessourceAccessRsp)
}

void ValidateUserRessourceAccessRsp::SharedCtor() {
  result_ = false;
}

ValidateUserRessourceAccessRsp::~ValidateUserRessourceAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidateUserRessourceAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateUserRessourceAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidateUserRessourceAccessRsp::ArenaDtor(void* object) {
  ValidateUserRessourceAccessRsp* _this = reinterpret_cast< ValidateUserRessourceAccessRsp* >(object);
  (void)_this;
}
void ValidateUserRessourceAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateUserRessourceAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateUserRessourceAccessRsp& ValidateUserRessourceAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateUserRessourceAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateUserRessourceAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateUserRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateUserRessourceAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateUserRessourceAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateUserRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateUserRessourceAccessRsp)
  return target;
}

size_t ValidateUserRessourceAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateUserRessourceAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateUserRessourceAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateUserRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateUserRessourceAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateUserRessourceAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateUserRessourceAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateUserRessourceAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateUserRessourceAccessRsp::MergeFrom(const ValidateUserRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateUserRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidateUserRessourceAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateUserRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateUserRessourceAccessRsp::CopyFrom(const ValidateUserRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateUserRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateUserRessourceAccessRsp::IsInitialized() const {
  return true;
}

void ValidateUserRessourceAccessRsp::InternalSwap(ValidateUserRessourceAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateUserRessourceAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateApplicationRessourceAccessRqst::InitAsDefaultInstance() {
}
class ValidateApplicationRessourceAccessRqst::_Internal {
 public:
};

ValidateApplicationRessourceAccessRqst::ValidateApplicationRessourceAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateApplicationRessourceAccessRqst)
}
ValidateApplicationRessourceAccessRqst::ValidateApplicationRessourceAccessRqst(const ValidateApplicationRessourceAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  permission_ = from.permission_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateApplicationRessourceAccessRqst)
}

void ValidateApplicationRessourceAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
}

ValidateApplicationRessourceAccessRqst::~ValidateApplicationRessourceAccessRqst() {
  // @@protoc_insertion_point(destructor:ressource.ValidateApplicationRessourceAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateApplicationRessourceAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateApplicationRessourceAccessRqst::ArenaDtor(void* object) {
  ValidateApplicationRessourceAccessRqst* _this = reinterpret_cast< ValidateApplicationRessourceAccessRqst* >(object);
  (void)_this;
}
void ValidateApplicationRessourceAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateApplicationRessourceAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateApplicationRessourceAccessRqst& ValidateApplicationRessourceAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateApplicationRessourceAccessRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateApplicationRessourceAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateApplicationRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  permission_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateApplicationRessourceAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateApplicationRessourceAccessRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateApplicationRessourceAccessRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ValidateApplicationRessourceAccessRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 permission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          permission_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateApplicationRessourceAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateApplicationRessourceAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateApplicationRessourceAccessRqst.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateApplicationRessourceAccessRqst.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ValidateApplicationRessourceAccessRqst.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateApplicationRessourceAccessRqst)
  return target;
}

size_t ValidateApplicationRessourceAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateApplicationRessourceAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // int32 permission = 4;
  if (this->permission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_permission());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateApplicationRessourceAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateApplicationRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateApplicationRessourceAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateApplicationRessourceAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateApplicationRessourceAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateApplicationRessourceAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateApplicationRessourceAccessRqst::MergeFrom(const ValidateApplicationRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateApplicationRessourceAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.permission() != 0) {
    _internal_set_permission(from._internal_permission());
  }
}

void ValidateApplicationRessourceAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateApplicationRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateApplicationRessourceAccessRqst::CopyFrom(const ValidateApplicationRessourceAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateApplicationRessourceAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateApplicationRessourceAccessRqst::IsInitialized() const {
  return true;
}

void ValidateApplicationRessourceAccessRqst::InternalSwap(ValidateApplicationRessourceAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateApplicationRessourceAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateApplicationRessourceAccessRsp::InitAsDefaultInstance() {
}
class ValidateApplicationRessourceAccessRsp::_Internal {
 public:
};

ValidateApplicationRessourceAccessRsp::ValidateApplicationRessourceAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ValidateApplicationRessourceAccessRsp)
}
ValidateApplicationRessourceAccessRsp::ValidateApplicationRessourceAccessRsp(const ValidateApplicationRessourceAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ValidateApplicationRessourceAccessRsp)
}

void ValidateApplicationRessourceAccessRsp::SharedCtor() {
  result_ = false;
}

ValidateApplicationRessourceAccessRsp::~ValidateApplicationRessourceAccessRsp() {
  // @@protoc_insertion_point(destructor:ressource.ValidateApplicationRessourceAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateApplicationRessourceAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidateApplicationRessourceAccessRsp::ArenaDtor(void* object) {
  ValidateApplicationRessourceAccessRsp* _this = reinterpret_cast< ValidateApplicationRessourceAccessRsp* >(object);
  (void)_this;
}
void ValidateApplicationRessourceAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateApplicationRessourceAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateApplicationRessourceAccessRsp& ValidateApplicationRessourceAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateApplicationRessourceAccessRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ValidateApplicationRessourceAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ValidateApplicationRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateApplicationRessourceAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateApplicationRessourceAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ValidateApplicationRessourceAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ValidateApplicationRessourceAccessRsp)
  return target;
}

size_t ValidateApplicationRessourceAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ValidateApplicationRessourceAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateApplicationRessourceAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ValidateApplicationRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateApplicationRessourceAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateApplicationRessourceAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ValidateApplicationRessourceAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ValidateApplicationRessourceAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateApplicationRessourceAccessRsp::MergeFrom(const ValidateApplicationRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ValidateApplicationRessourceAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidateApplicationRessourceAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ValidateApplicationRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateApplicationRessourceAccessRsp::CopyFrom(const ValidateApplicationRessourceAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ValidateApplicationRessourceAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateApplicationRessourceAccessRsp::IsInitialized() const {
  return true;
}

void ValidateApplicationRessourceAccessRsp::InternalSwap(ValidateApplicationRessourceAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateApplicationRessourceAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRqst::InitAsDefaultInstance() {
}
class AccountExistRqst::_Internal {
 public:
};

AccountExistRqst::AccountExistRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AccountExistRqst)
}
AccountExistRqst::AccountExistRqst(const AccountExistRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AccountExistRqst)
}

void AccountExistRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountExistRqst_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountExistRqst::~AccountExistRqst() {
  // @@protoc_insertion_point(destructor:ressource.AccountExistRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountExistRqst::ArenaDtor(void* object) {
  AccountExistRqst* _this = reinterpret_cast< AccountExistRqst* >(object);
  (void)_this;
}
void AccountExistRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRqst& AccountExistRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AccountExistRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AccountExistRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AccountExistRqst)
  return target;
}

size_t AccountExistRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AccountExistRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AccountExistRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AccountExistRqst)
    MergeFrom(*source);
  }
}

void AccountExistRqst::MergeFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void AccountExistRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRqst::CopyFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRqst::IsInitialized() const {
  return true;
}

void AccountExistRqst::InternalSwap(AccountExistRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRsp::InitAsDefaultInstance() {
}
class AccountExistRsp::_Internal {
 public:
};

AccountExistRsp::AccountExistRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AccountExistRsp)
}
AccountExistRsp::AccountExistRsp(const AccountExistRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.AccountExistRsp)
}

void AccountExistRsp::SharedCtor() {
  result_ = false;
}

AccountExistRsp::~AccountExistRsp() {
  // @@protoc_insertion_point(destructor:ressource.AccountExistRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccountExistRsp::ArenaDtor(void* object) {
  AccountExistRsp* _this = reinterpret_cast< AccountExistRsp* >(object);
  (void)_this;
}
void AccountExistRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRsp& AccountExistRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AccountExistRsp)
  return target;
}

size_t AccountExistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AccountExistRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AccountExistRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AccountExistRsp)
    MergeFrom(*source);
  }
}

void AccountExistRsp::MergeFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AccountExistRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRsp::CopyFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRsp::IsInitialized() const {
  return true;
}

void AccountExistRsp::InternalSwap(AccountExistRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountPermissionsRqst::InitAsDefaultInstance() {
}
class DeleteAccountPermissionsRqst::_Internal {
 public:
};

DeleteAccountPermissionsRqst::DeleteAccountPermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteAccountPermissionsRqst)
}
DeleteAccountPermissionsRqst::DeleteAccountPermissionsRqst(const DeleteAccountPermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteAccountPermissionsRqst)
}

void DeleteAccountPermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountPermissionsRqst_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountPermissionsRqst::~DeleteAccountPermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteAccountPermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountPermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountPermissionsRqst::ArenaDtor(void* object) {
  DeleteAccountPermissionsRqst* _this = reinterpret_cast< DeleteAccountPermissionsRqst* >(object);
  (void)_this;
}
void DeleteAccountPermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountPermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountPermissionsRqst& DeleteAccountPermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountPermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountPermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteAccountPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountPermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteAccountPermissionsRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountPermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteAccountPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteAccountPermissionsRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteAccountPermissionsRqst)
  return target;
}

size_t DeleteAccountPermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteAccountPermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountPermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteAccountPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountPermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountPermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteAccountPermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteAccountPermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteAccountPermissionsRqst::MergeFrom(const DeleteAccountPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteAccountPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteAccountPermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteAccountPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountPermissionsRqst::CopyFrom(const DeleteAccountPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteAccountPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountPermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteAccountPermissionsRqst::InternalSwap(DeleteAccountPermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountPermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountPermissionsRsp::InitAsDefaultInstance() {
}
class DeleteAccountPermissionsRsp::_Internal {
 public:
};

DeleteAccountPermissionsRsp::DeleteAccountPermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteAccountPermissionsRsp)
}
DeleteAccountPermissionsRsp::DeleteAccountPermissionsRsp(const DeleteAccountPermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteAccountPermissionsRsp)
}

void DeleteAccountPermissionsRsp::SharedCtor() {
  result_ = false;
}

DeleteAccountPermissionsRsp::~DeleteAccountPermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteAccountPermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountPermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteAccountPermissionsRsp::ArenaDtor(void* object) {
  DeleteAccountPermissionsRsp* _this = reinterpret_cast< DeleteAccountPermissionsRsp* >(object);
  (void)_this;
}
void DeleteAccountPermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountPermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountPermissionsRsp& DeleteAccountPermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountPermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountPermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteAccountPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountPermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountPermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteAccountPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteAccountPermissionsRsp)
  return target;
}

size_t DeleteAccountPermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteAccountPermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountPermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteAccountPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountPermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountPermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteAccountPermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteAccountPermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteAccountPermissionsRsp::MergeFrom(const DeleteAccountPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteAccountPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteAccountPermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteAccountPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountPermissionsRsp::CopyFrom(const DeleteAccountPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteAccountPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountPermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteAccountPermissionsRsp::InternalSwap(DeleteAccountPermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountPermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRolePermissionsRqst::InitAsDefaultInstance() {
}
class DeleteRolePermissionsRqst::_Internal {
 public:
};

DeleteRolePermissionsRqst::DeleteRolePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRolePermissionsRqst)
}
DeleteRolePermissionsRqst::DeleteRolePermissionsRqst(const DeleteRolePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRolePermissionsRqst)
}

void DeleteRolePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRolePermissionsRqst_ressource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRolePermissionsRqst::~DeleteRolePermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRolePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRolePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRolePermissionsRqst::ArenaDtor(void* object) {
  DeleteRolePermissionsRqst* _this = reinterpret_cast< DeleteRolePermissionsRqst* >(object);
  (void)_this;
}
void DeleteRolePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRolePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRolePermissionsRqst& DeleteRolePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRolePermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRolePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRolePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRolePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteRolePermissionsRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRolePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRolePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteRolePermissionsRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRolePermissionsRqst)
  return target;
}

size_t DeleteRolePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRolePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRolePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRolePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRolePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRolePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRolePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRolePermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteRolePermissionsRqst::MergeFrom(const DeleteRolePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRolePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteRolePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRolePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRolePermissionsRqst::CopyFrom(const DeleteRolePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRolePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRolePermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteRolePermissionsRqst::InternalSwap(DeleteRolePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRolePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRolePermissionsRsp::InitAsDefaultInstance() {
}
class DeleteRolePermissionsRsp::_Internal {
 public:
};

DeleteRolePermissionsRsp::DeleteRolePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteRolePermissionsRsp)
}
DeleteRolePermissionsRsp::DeleteRolePermissionsRsp(const DeleteRolePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteRolePermissionsRsp)
}

void DeleteRolePermissionsRsp::SharedCtor() {
  result_ = false;
}

DeleteRolePermissionsRsp::~DeleteRolePermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteRolePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRolePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRolePermissionsRsp::ArenaDtor(void* object) {
  DeleteRolePermissionsRsp* _this = reinterpret_cast< DeleteRolePermissionsRsp* >(object);
  (void)_this;
}
void DeleteRolePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRolePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRolePermissionsRsp& DeleteRolePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRolePermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRolePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteRolePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRolePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRolePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteRolePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteRolePermissionsRsp)
  return target;
}

size_t DeleteRolePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteRolePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRolePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteRolePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRolePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRolePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteRolePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteRolePermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteRolePermissionsRsp::MergeFrom(const DeleteRolePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteRolePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRolePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteRolePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRolePermissionsRsp::CopyFrom(const DeleteRolePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteRolePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRolePermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteRolePermissionsRsp::InternalSwap(DeleteRolePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRolePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogInfo::InitAsDefaultInstance() {
}
class LogInfo::_Internal {
 public:
};

LogInfo::LogInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.LogInfo)
}
LogInfo::LogInfo(const LogInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_application().empty()) {
    application_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_application(),
      GetArena());
  }
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_userid(),
      GetArena());
  }
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_username(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&date_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ressource.LogInfo)
}

void LogInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogInfo_ressource_2eproto.base);
  application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(type_));
}

LogInfo::~LogInfo() {
  // @@protoc_insertion_point(destructor:ressource.LogInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  application_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LogInfo::ArenaDtor(void* object) {
  LogInfo* _this = reinterpret_cast< LogInfo* >(object);
  (void)_this;
}
void LogInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogInfo& LogInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogInfo_ressource_2eproto.base);
  return *internal_default_instance();
}


void LogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.LogInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  application_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  username_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 date = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ressource.LogType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::ressource::LogType>(val));
        } else goto handle_unusual;
        continue;
      // string application = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_application();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LogInfo.application"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LogInfo.userId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LogInfo.userName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LogInfo.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.LogInfo.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.LogInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 date = 1;
  if (this->date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_date(), target);
  }

  // .ressource.LogType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string application = 3;
  if (this->application().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application().data(), static_cast<int>(this->_internal_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LogInfo.application");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_application(), target);
  }

  // string userId = 4;
  if (this->userid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LogInfo.userId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_userid(), target);
  }

  // string userName = 5;
  if (this->username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LogInfo.userName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_username(), target);
  }

  // string method = 6;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LogInfo.method");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_method(), target);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.LogInfo.message");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.LogInfo)
  return target;
}

size_t LogInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.LogInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string application = 3;
  if (this->application().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application());
  }

  // string userId = 4;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  // string userName = 5;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string method = 6;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 date = 1;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_date());
  }

  // .ressource.LogType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.LogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LogInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.LogInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.LogInfo)
    MergeFrom(*source);
  }
}

void LogInfo::MergeFrom(const LogInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.LogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.application().size() > 0) {
    _internal_set_application(from._internal_application());
  }
  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.username().size() > 0) {
    _internal_set_username(from._internal_username());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void LogInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.LogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogInfo::CopyFrom(const LogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.LogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogInfo::IsInitialized() const {
  return true;
}

void LogInfo::InternalSwap(LogInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  application_.Swap(&other->application_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogInfo, type_)
      + sizeof(LogInfo::type_)
      - PROTOBUF_FIELD_OFFSET(LogInfo, date_)>(
          reinterpret_cast<char*>(&date_),
          reinterpret_cast<char*>(&other->date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogRqst::InitAsDefaultInstance() {
  ::ressource::_LogRqst_default_instance_._instance.get_mutable()->info_ = const_cast< ::ressource::LogInfo*>(
      ::ressource::LogInfo::internal_default_instance());
}
class LogRqst::_Internal {
 public:
  static const ::ressource::LogInfo& info(const LogRqst* msg);
};

const ::ressource::LogInfo&
LogRqst::_Internal::info(const LogRqst* msg) {
  return *msg->info_;
}
LogRqst::LogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.LogRqst)
}
LogRqst::LogRqst(const LogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::ressource::LogInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.LogRqst)
}

void LogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogRqst_ressource_2eproto.base);
  info_ = nullptr;
}

LogRqst::~LogRqst() {
  // @@protoc_insertion_point(destructor:ressource.LogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
}

void LogRqst::ArenaDtor(void* object) {
  LogRqst* _this = reinterpret_cast< LogRqst* >(object);
  (void)_this;
}
void LogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogRqst& LogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void LogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.LogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.LogInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.LogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.LogInfo info = 1;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.LogRqst)
  return target;
}

size_t LogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.LogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.LogInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.LogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const LogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.LogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.LogRqst)
    MergeFrom(*source);
  }
}

void LogRqst::MergeFrom(const LogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.LogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::ressource::LogInfo::MergeFrom(from._internal_info());
  }
}

void LogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.LogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogRqst::CopyFrom(const LogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.LogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRqst::IsInitialized() const {
  return true;
}

void LogRqst::InternalSwap(LogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogRsp::InitAsDefaultInstance() {
}
class LogRsp::_Internal {
 public:
};

LogRsp::LogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.LogRsp)
}
LogRsp::LogRsp(const LogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.LogRsp)
}

void LogRsp::SharedCtor() {
  result_ = false;
}

LogRsp::~LogRsp() {
  // @@protoc_insertion_point(destructor:ressource.LogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LogRsp::ArenaDtor(void* object) {
  LogRsp* _this = reinterpret_cast< LogRsp* >(object);
  (void)_this;
}
void LogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogRsp& LogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void LogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.LogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.LogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.LogRsp)
  return target;
}

size_t LogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.LogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.LogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.LogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.LogRsp)
    MergeFrom(*source);
  }
}

void LogRsp::MergeFrom(const LogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.LogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void LogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.LogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogRsp::CopyFrom(const LogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.LogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRsp::IsInitialized() const {
  return true;
}

void LogRsp::InternalSwap(LogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteLogRqst::InitAsDefaultInstance() {
  ::ressource::_DeleteLogRqst_default_instance_._instance.get_mutable()->log_ = const_cast< ::ressource::LogInfo*>(
      ::ressource::LogInfo::internal_default_instance());
}
class DeleteLogRqst::_Internal {
 public:
  static const ::ressource::LogInfo& log(const DeleteLogRqst* msg);
};

const ::ressource::LogInfo&
DeleteLogRqst::_Internal::log(const DeleteLogRqst* msg) {
  return *msg->log_;
}
DeleteLogRqst::DeleteLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteLogRqst)
}
DeleteLogRqst::DeleteLogRqst(const DeleteLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log()) {
    log_ = new ::ressource::LogInfo(*from.log_);
  } else {
    log_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteLogRqst)
}

void DeleteLogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteLogRqst_ressource_2eproto.base);
  log_ = nullptr;
}

DeleteLogRqst::~DeleteLogRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete log_;
}

void DeleteLogRqst::ArenaDtor(void* object) {
  DeleteLogRqst* _this = reinterpret_cast< DeleteLogRqst* >(object);
  (void)_this;
}
void DeleteLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRqst& DeleteLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && log_ != nullptr) {
    delete log_;
  }
  log_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.LogInfo log = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.LogInfo log = 1;
  if (this->has_log()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::log(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteLogRqst)
  return target;
}

size_t DeleteLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.LogInfo log = 1;
  if (this->has_log()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *log_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteLogRqst)
    MergeFrom(*source);
  }
}

void DeleteLogRqst::MergeFrom(const DeleteLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_log()) {
    _internal_mutable_log()->::ressource::LogInfo::MergeFrom(from._internal_log());
  }
}

void DeleteLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRqst::CopyFrom(const DeleteLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRqst::IsInitialized() const {
  return true;
}

void DeleteLogRqst::InternalSwap(DeleteLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(log_, other->log_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteLogRsp::InitAsDefaultInstance() {
}
class DeleteLogRsp::_Internal {
 public:
};

DeleteLogRsp::DeleteLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteLogRsp)
}
DeleteLogRsp::DeleteLogRsp(const DeleteLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteLogRsp)
}

void DeleteLogRsp::SharedCtor() {
  result_ = false;
}

DeleteLogRsp::~DeleteLogRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteLogRsp::ArenaDtor(void* object) {
  DeleteLogRsp* _this = reinterpret_cast< DeleteLogRsp* >(object);
  (void)_this;
}
void DeleteLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRsp& DeleteLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteLogRsp)
  return target;
}

size_t DeleteLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteLogRsp)
    MergeFrom(*source);
  }
}

void DeleteLogRsp::MergeFrom(const DeleteLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRsp::CopyFrom(const DeleteLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRsp::IsInitialized() const {
  return true;
}

void DeleteLogRsp::InternalSwap(DeleteLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetLogMethodRqst::InitAsDefaultInstance() {
}
class SetLogMethodRqst::_Internal {
 public:
};

SetLogMethodRqst::SetLogMethodRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetLogMethodRqst)
}
SetLogMethodRqst::SetLogMethodRqst(const SetLogMethodRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SetLogMethodRqst)
}

void SetLogMethodRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetLogMethodRqst_ressource_2eproto.base);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetLogMethodRqst::~SetLogMethodRqst() {
  // @@protoc_insertion_point(destructor:ressource.SetLogMethodRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogMethodRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetLogMethodRqst::ArenaDtor(void* object) {
  SetLogMethodRqst* _this = reinterpret_cast< SetLogMethodRqst* >(object);
  (void)_this;
}
void SetLogMethodRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogMethodRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLogMethodRqst& SetLogMethodRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLogMethodRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetLogMethodRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogMethodRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.SetLogMethodRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogMethodRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.SetLogMethodRqst.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetLogMethodRqst)
  return target;
}

size_t SetLogMethodRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetLogMethodRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogMethodRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogMethodRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogMethodRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetLogMethodRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetLogMethodRqst)
    MergeFrom(*source);
  }
}

void SetLogMethodRqst::MergeFrom(const SetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void SetLogMethodRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogMethodRqst::CopyFrom(const SetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogMethodRqst::IsInitialized() const {
  return true;
}

void SetLogMethodRqst::InternalSwap(SetLogMethodRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogMethodRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetLogMethodRsp::InitAsDefaultInstance() {
}
class SetLogMethodRsp::_Internal {
 public:
};

SetLogMethodRsp::SetLogMethodRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetLogMethodRsp)
}
SetLogMethodRsp::SetLogMethodRsp(const SetLogMethodRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SetLogMethodRsp)
}

void SetLogMethodRsp::SharedCtor() {
  result_ = false;
}

SetLogMethodRsp::~SetLogMethodRsp() {
  // @@protoc_insertion_point(destructor:ressource.SetLogMethodRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogMethodRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetLogMethodRsp::ArenaDtor(void* object) {
  SetLogMethodRsp* _this = reinterpret_cast< SetLogMethodRsp* >(object);
  (void)_this;
}
void SetLogMethodRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogMethodRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLogMethodRsp& SetLogMethodRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLogMethodRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetLogMethodRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogMethodRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogMethodRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetLogMethodRsp)
  return target;
}

size_t SetLogMethodRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetLogMethodRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogMethodRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogMethodRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogMethodRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetLogMethodRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetLogMethodRsp)
    MergeFrom(*source);
  }
}

void SetLogMethodRsp::MergeFrom(const SetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetLogMethodRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogMethodRsp::CopyFrom(const SetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogMethodRsp::IsInitialized() const {
  return true;
}

void SetLogMethodRsp::InternalSwap(SetLogMethodRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogMethodRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetLogMethodRqst::InitAsDefaultInstance() {
}
class ResetLogMethodRqst::_Internal {
 public:
};

ResetLogMethodRqst::ResetLogMethodRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ResetLogMethodRqst)
}
ResetLogMethodRqst::ResetLogMethodRqst(const ResetLogMethodRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.ResetLogMethodRqst)
}

void ResetLogMethodRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetLogMethodRqst_ressource_2eproto.base);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetLogMethodRqst::~ResetLogMethodRqst() {
  // @@protoc_insertion_point(destructor:ressource.ResetLogMethodRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetLogMethodRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetLogMethodRqst::ArenaDtor(void* object) {
  ResetLogMethodRqst* _this = reinterpret_cast< ResetLogMethodRqst* >(object);
  (void)_this;
}
void ResetLogMethodRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetLogMethodRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetLogMethodRqst& ResetLogMethodRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetLogMethodRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ResetLogMethodRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ResetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetLogMethodRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.ResetLogMethodRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetLogMethodRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ResetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.ResetLogMethodRqst.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ResetLogMethodRqst)
  return target;
}

size_t ResetLogMethodRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ResetLogMethodRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetLogMethodRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ResetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetLogMethodRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetLogMethodRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ResetLogMethodRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ResetLogMethodRqst)
    MergeFrom(*source);
  }
}

void ResetLogMethodRqst::MergeFrom(const ResetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ResetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void ResetLogMethodRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ResetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetLogMethodRqst::CopyFrom(const ResetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ResetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetLogMethodRqst::IsInitialized() const {
  return true;
}

void ResetLogMethodRqst::InternalSwap(ResetLogMethodRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetLogMethodRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetLogMethodRsp::InitAsDefaultInstance() {
}
class ResetLogMethodRsp::_Internal {
 public:
};

ResetLogMethodRsp::ResetLogMethodRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ResetLogMethodRsp)
}
ResetLogMethodRsp::ResetLogMethodRsp(const ResetLogMethodRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ResetLogMethodRsp)
}

void ResetLogMethodRsp::SharedCtor() {
  result_ = false;
}

ResetLogMethodRsp::~ResetLogMethodRsp() {
  // @@protoc_insertion_point(destructor:ressource.ResetLogMethodRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetLogMethodRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResetLogMethodRsp::ArenaDtor(void* object) {
  ResetLogMethodRsp* _this = reinterpret_cast< ResetLogMethodRsp* >(object);
  (void)_this;
}
void ResetLogMethodRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetLogMethodRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetLogMethodRsp& ResetLogMethodRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetLogMethodRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ResetLogMethodRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ResetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetLogMethodRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetLogMethodRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ResetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ResetLogMethodRsp)
  return target;
}

size_t ResetLogMethodRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ResetLogMethodRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetLogMethodRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ResetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetLogMethodRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetLogMethodRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ResetLogMethodRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ResetLogMethodRsp)
    MergeFrom(*source);
  }
}

void ResetLogMethodRsp::MergeFrom(const ResetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ResetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ResetLogMethodRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ResetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetLogMethodRsp::CopyFrom(const ResetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ResetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetLogMethodRsp::IsInitialized() const {
  return true;
}

void ResetLogMethodRsp::InternalSwap(ResetLogMethodRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetLogMethodRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogMethodsRqst::InitAsDefaultInstance() {
}
class GetLogMethodsRqst::_Internal {
 public:
};

GetLogMethodsRqst::GetLogMethodsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetLogMethodsRqst)
}
GetLogMethodsRqst::GetLogMethodsRqst(const GetLogMethodsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetLogMethodsRqst)
}

void GetLogMethodsRqst::SharedCtor() {
}

GetLogMethodsRqst::~GetLogMethodsRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetLogMethodsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogMethodsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogMethodsRqst::ArenaDtor(void* object) {
  GetLogMethodsRqst* _this = reinterpret_cast< GetLogMethodsRqst* >(object);
  (void)_this;
}
void GetLogMethodsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogMethodsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogMethodsRqst& GetLogMethodsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogMethodsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetLogMethodsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetLogMethodsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogMethodsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogMethodsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetLogMethodsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetLogMethodsRqst)
  return target;
}

size_t GetLogMethodsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetLogMethodsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogMethodsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetLogMethodsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMethodsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogMethodsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetLogMethodsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetLogMethodsRqst)
    MergeFrom(*source);
  }
}

void GetLogMethodsRqst::MergeFrom(const GetLogMethodsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetLogMethodsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetLogMethodsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetLogMethodsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMethodsRqst::CopyFrom(const GetLogMethodsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetLogMethodsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMethodsRqst::IsInitialized() const {
  return true;
}

void GetLogMethodsRqst::InternalSwap(GetLogMethodsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogMethodsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogMethodsRsp::InitAsDefaultInstance() {
}
class GetLogMethodsRsp::_Internal {
 public:
};

GetLogMethodsRsp::GetLogMethodsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  methods_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetLogMethodsRsp)
}
GetLogMethodsRsp::GetLogMethodsRsp(const GetLogMethodsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      methods_(from.methods_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetLogMethodsRsp)
}

void GetLogMethodsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogMethodsRsp_ressource_2eproto.base);
}

GetLogMethodsRsp::~GetLogMethodsRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetLogMethodsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogMethodsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogMethodsRsp::ArenaDtor(void* object) {
  GetLogMethodsRsp* _this = reinterpret_cast< GetLogMethodsRsp* >(object);
  (void)_this;
}
void GetLogMethodsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogMethodsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogMethodsRsp& GetLogMethodsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogMethodsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetLogMethodsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetLogMethodsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  methods_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogMethodsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string methods = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_methods();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetLogMethodsRsp.methods"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogMethodsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetLogMethodsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string methods = 1;
  for (int i = 0, n = this->_internal_methods_size(); i < n; i++) {
    const auto& s = this->_internal_methods(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetLogMethodsRsp.methods");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetLogMethodsRsp)
  return target;
}

size_t GetLogMethodsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetLogMethodsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string methods = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(methods_.size());
  for (int i = 0, n = methods_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      methods_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogMethodsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetLogMethodsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMethodsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogMethodsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetLogMethodsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetLogMethodsRsp)
    MergeFrom(*source);
  }
}

void GetLogMethodsRsp::MergeFrom(const GetLogMethodsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetLogMethodsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  methods_.MergeFrom(from.methods_);
}

void GetLogMethodsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetLogMethodsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMethodsRsp::CopyFrom(const GetLogMethodsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetLogMethodsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMethodsRsp::IsInitialized() const {
  return true;
}

void GetLogMethodsRsp::InternalSwap(GetLogMethodsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  methods_.InternalSwap(&other->methods_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogMethodsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogRqst::InitAsDefaultInstance() {
}
class GetLogRqst::_Internal {
 public:
};

GetLogRqst::GetLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetLogRqst)
}
GetLogRqst::GetLogRqst(const GetLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetLogRqst)
}

void GetLogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogRqst_ressource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetLogRqst::~GetLogRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetLogRqst::ArenaDtor(void* object) {
  GetLogRqst* _this = reinterpret_cast< GetLogRqst* >(object);
  (void)_this;
}
void GetLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogRqst& GetLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetLogRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetLogRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetLogRqst)
  return target;
}

size_t GetLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetLogRqst)
    MergeFrom(*source);
  }
}

void GetLogRqst::MergeFrom(const GetLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogRqst::CopyFrom(const GetLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogRqst::IsInitialized() const {
  return true;
}

void GetLogRqst::InternalSwap(GetLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogRsp::InitAsDefaultInstance() {
}
class GetLogRsp::_Internal {
 public:
};

GetLogRsp::GetLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetLogRsp)
}
GetLogRsp::GetLogRsp(const GetLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      info_(from.info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetLogRsp)
}

void GetLogRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogRsp_ressource_2eproto.base);
}

GetLogRsp::~GetLogRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogRsp::ArenaDtor(void* object) {
  GetLogRsp* _this = reinterpret_cast< GetLogRsp* >(object);
  (void)_this;
}
void GetLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogRsp& GetLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ressource.LogInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ressource.LogInfo info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetLogRsp)
  return target;
}

size_t GetLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ressource.LogInfo info = 1;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetLogRsp)
    MergeFrom(*source);
  }
}

void GetLogRsp::MergeFrom(const GetLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
}

void GetLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogRsp::CopyFrom(const GetLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogRsp::IsInitialized() const {
  return true;
}

void GetLogRsp::InternalSwap(GetLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  info_.InternalSwap(&other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllLogRqst::InitAsDefaultInstance() {
}
class ClearAllLogRqst::_Internal {
 public:
};

ClearAllLogRqst::ClearAllLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ClearAllLogRqst)
}
ClearAllLogRqst::ClearAllLogRqst(const ClearAllLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ressource.ClearAllLogRqst)
}

void ClearAllLogRqst::SharedCtor() {
  type_ = 0;
}

ClearAllLogRqst::~ClearAllLogRqst() {
  // @@protoc_insertion_point(destructor:ressource.ClearAllLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllLogRqst::ArenaDtor(void* object) {
  ClearAllLogRqst* _this = reinterpret_cast< ClearAllLogRqst* >(object);
  (void)_this;
}
void ClearAllLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllLogRqst& ClearAllLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllLogRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ClearAllLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.LogType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::ressource::LogType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ClearAllLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.LogType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ClearAllLogRqst)
  return target;
}

size_t ClearAllLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ClearAllLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.LogType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ClearAllLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ClearAllLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ClearAllLogRqst)
    MergeFrom(*source);
  }
}

void ClearAllLogRqst::MergeFrom(const ClearAllLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ClearAllLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ClearAllLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ClearAllLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllLogRqst::CopyFrom(const ClearAllLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ClearAllLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllLogRqst::IsInitialized() const {
  return true;
}

void ClearAllLogRqst::InternalSwap(ClearAllLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllLogRsp::InitAsDefaultInstance() {
}
class ClearAllLogRsp::_Internal {
 public:
};

ClearAllLogRsp::ClearAllLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ClearAllLogRsp)
}
ClearAllLogRsp::ClearAllLogRsp(const ClearAllLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.ClearAllLogRsp)
}

void ClearAllLogRsp::SharedCtor() {
  result_ = false;
}

ClearAllLogRsp::~ClearAllLogRsp() {
  // @@protoc_insertion_point(destructor:ressource.ClearAllLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllLogRsp::ArenaDtor(void* object) {
  ClearAllLogRsp* _this = reinterpret_cast< ClearAllLogRsp* >(object);
  (void)_this;
}
void ClearAllLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllLogRsp& ClearAllLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllLogRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ClearAllLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ClearAllLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ClearAllLogRsp)
  return target;
}

size_t ClearAllLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ClearAllLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ClearAllLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ClearAllLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ClearAllLogRsp)
    MergeFrom(*source);
  }
}

void ClearAllLogRsp::MergeFrom(const ClearAllLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ClearAllLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ClearAllLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ClearAllLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllLogRsp::CopyFrom(const ClearAllLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ClearAllLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllLogRsp::IsInitialized() const {
  return true;
}

void ClearAllLogRsp::InternalSwap(ClearAllLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Peer::InitAsDefaultInstance() {
}
class Peer::_Internal {
 public:
};

Peer::Peer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.Peer)
}
Peer::Peer(const Peer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.Peer)
}

void Peer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Peer_ressource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:ressource.Peer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Peer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Peer::ArenaDtor(void* object) {
  Peer* _this = reinterpret_cast< Peer* >(object);
  (void)_this;
}
void Peer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Peer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Peer& Peer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Peer_ressource_2eproto.base);
  return *internal_default_instance();
}


void Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Peer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Peer.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Peer.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Peer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Peer.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Peer.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.Peer)
  return target;
}

size_t Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.Peer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Peer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  const Peer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Peer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.Peer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.Peer)
    MergeFrom(*source);
  }
}

void Peer::MergeFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
}

void Peer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Peer::CopyFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Peer::IsInitialized() const {
  return true;
}

void Peer::InternalSwap(Peer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Peer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ressource::InitAsDefaultInstance() {
}
class Ressource::_Internal {
 public:
};

Ressource::Ressource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.Ressource)
}
Ressource::Ressource(const Ressource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&modified_, &from.modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:ressource.Ressource)
}

void Ressource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Ressource_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(size_));
}

Ressource::~Ressource() {
  // @@protoc_insertion_point(destructor:ressource.Ressource)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ressource::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Ressource::ArenaDtor(void* object) {
  Ressource* _this = reinterpret_cast< Ressource* >(object);
  (void)_this;
}
void Ressource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ressource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ressource& Ressource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ressource_ressource_2eproto.base);
  return *internal_default_instance();
}


void Ressource::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.Ressource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ressource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Ressource.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.Ressource.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 modified = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          modified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ressource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.Ressource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Ressource.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.Ressource.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int64 modified = 3;
  if (this->modified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_modified(), target);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.Ressource)
  return target;
}

size_t Ressource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.Ressource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 modified = 3;
  if (this->modified() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_modified());
  }

  // int64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ressource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.Ressource)
  GOOGLE_DCHECK_NE(&from, this);
  const Ressource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ressource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.Ressource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.Ressource)
    MergeFrom(*source);
  }
}

void Ressource::MergeFrom(const Ressource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.Ressource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.modified() != 0) {
    _internal_set_modified(from._internal_modified());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void Ressource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.Ressource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ressource::CopyFrom(const Ressource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.Ressource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ressource::IsInitialized() const {
  return true;
}

void Ressource::InternalSwap(Ressource* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ressource, size_)
      + sizeof(Ressource::size_)
      - PROTOBUF_FIELD_OFFSET(Ressource, modified_)>(
          reinterpret_cast<char*>(&modified_),
          reinterpret_cast<char*>(&other->modified_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ressource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetRessourceRqst::InitAsDefaultInstance() {
  ::ressource::_SetRessourceRqst_default_instance_._instance.get_mutable()->ressource_ = const_cast< ::ressource::Ressource*>(
      ::ressource::Ressource::internal_default_instance());
}
class SetRessourceRqst::_Internal {
 public:
  static const ::ressource::Ressource& ressource(const SetRessourceRqst* msg);
};

const ::ressource::Ressource&
SetRessourceRqst::_Internal::ressource(const SetRessourceRqst* msg) {
  return *msg->ressource_;
}
SetRessourceRqst::SetRessourceRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetRessourceRqst)
}
SetRessourceRqst::SetRessourceRqst(const SetRessourceRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ressource()) {
    ressource_ = new ::ressource::Ressource(*from.ressource_);
  } else {
    ressource_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SetRessourceRqst)
}

void SetRessourceRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetRessourceRqst_ressource_2eproto.base);
  ressource_ = nullptr;
}

SetRessourceRqst::~SetRessourceRqst() {
  // @@protoc_insertion_point(destructor:ressource.SetRessourceRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetRessourceRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ressource_;
}

void SetRessourceRqst::ArenaDtor(void* object) {
  SetRessourceRqst* _this = reinterpret_cast< SetRessourceRqst* >(object);
  (void)_this;
}
void SetRessourceRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetRessourceRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetRessourceRqst& SetRessourceRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetRessourceRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetRessourceRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetRessourceRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ressource_ != nullptr) {
    delete ressource_;
  }
  ressource_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRessourceRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Ressource ressource = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ressource(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetRessourceRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetRessourceRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Ressource ressource = 1;
  if (this->has_ressource()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ressource(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetRessourceRqst)
  return target;
}

size_t SetRessourceRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetRessourceRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.Ressource ressource = 1;
  if (this->has_ressource()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ressource_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRessourceRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetRessourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRessourceRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetRessourceRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetRessourceRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetRessourceRqst)
    MergeFrom(*source);
  }
}

void SetRessourceRqst::MergeFrom(const SetRessourceRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetRessourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ressource()) {
    _internal_mutable_ressource()->::ressource::Ressource::MergeFrom(from._internal_ressource());
  }
}

void SetRessourceRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetRessourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRessourceRqst::CopyFrom(const SetRessourceRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetRessourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRessourceRqst::IsInitialized() const {
  return true;
}

void SetRessourceRqst::InternalSwap(SetRessourceRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ressource_, other->ressource_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRessourceRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetRessourceRsp::InitAsDefaultInstance() {
}
class SetRessourceRsp::_Internal {
 public:
};

SetRessourceRsp::SetRessourceRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetRessourceRsp)
}
SetRessourceRsp::SetRessourceRsp(const SetRessourceRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SetRessourceRsp)
}

void SetRessourceRsp::SharedCtor() {
  result_ = false;
}

SetRessourceRsp::~SetRessourceRsp() {
  // @@protoc_insertion_point(destructor:ressource.SetRessourceRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetRessourceRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetRessourceRsp::ArenaDtor(void* object) {
  SetRessourceRsp* _this = reinterpret_cast< SetRessourceRsp* >(object);
  (void)_this;
}
void SetRessourceRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetRessourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetRessourceRsp& SetRessourceRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetRessourceRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetRessourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetRessourceRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRessourceRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetRessourceRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetRessourceRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetRessourceRsp)
  return target;
}

size_t SetRessourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetRessourceRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRessourceRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetRessourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRessourceRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetRessourceRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetRessourceRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetRessourceRsp)
    MergeFrom(*source);
  }
}

void SetRessourceRsp::MergeFrom(const SetRessourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetRessourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetRessourceRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetRessourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRessourceRsp::CopyFrom(const SetRessourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetRessourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRessourceRsp::IsInitialized() const {
  return true;
}

void SetRessourceRsp::InternalSwap(SetRessourceRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRessourceRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionParameterRessourcePermission::InitAsDefaultInstance() {
}
class ActionParameterRessourcePermission::_Internal {
 public:
};

ActionParameterRessourcePermission::ActionParameterRessourcePermission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.ActionParameterRessourcePermission)
}
ActionParameterRessourcePermission::ActionParameterRessourcePermission(const ActionParameterRessourcePermission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&permission_) -
    reinterpret_cast<char*>(&index_)) + sizeof(permission_));
  // @@protoc_insertion_point(copy_constructor:ressource.ActionParameterRessourcePermission)
}

void ActionParameterRessourcePermission::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permission_) -
      reinterpret_cast<char*>(&index_)) + sizeof(permission_));
}

ActionParameterRessourcePermission::~ActionParameterRessourcePermission() {
  // @@protoc_insertion_point(destructor:ressource.ActionParameterRessourcePermission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionParameterRessourcePermission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ActionParameterRessourcePermission::ArenaDtor(void* object) {
  ActionParameterRessourcePermission* _this = reinterpret_cast< ActionParameterRessourcePermission* >(object);
  (void)_this;
}
void ActionParameterRessourcePermission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionParameterRessourcePermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionParameterRessourcePermission& ActionParameterRessourcePermission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionParameterRessourcePermission_ressource_2eproto.base);
  return *internal_default_instance();
}


void ActionParameterRessourcePermission::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.ActionParameterRessourcePermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permission_) -
      reinterpret_cast<char*>(&index_)) + sizeof(permission_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionParameterRessourcePermission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          permission_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionParameterRessourcePermission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.ActionParameterRessourcePermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // int32 permission = 2;
  if (this->permission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.ActionParameterRessourcePermission)
  return target;
}

size_t ActionParameterRessourcePermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.ActionParameterRessourcePermission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  // int32 permission = 2;
  if (this->permission() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_permission());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionParameterRessourcePermission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.ActionParameterRessourcePermission)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionParameterRessourcePermission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionParameterRessourcePermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.ActionParameterRessourcePermission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.ActionParameterRessourcePermission)
    MergeFrom(*source);
  }
}

void ActionParameterRessourcePermission::MergeFrom(const ActionParameterRessourcePermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.ActionParameterRessourcePermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from.permission() != 0) {
    _internal_set_permission(from._internal_permission());
  }
}

void ActionParameterRessourcePermission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.ActionParameterRessourcePermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionParameterRessourcePermission::CopyFrom(const ActionParameterRessourcePermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.ActionParameterRessourcePermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionParameterRessourcePermission::IsInitialized() const {
  return true;
}

void ActionParameterRessourcePermission::InternalSwap(ActionParameterRessourcePermission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActionParameterRessourcePermission, permission_)
      + sizeof(ActionParameterRessourcePermission::permission_)
      - PROTOBUF_FIELD_OFFSET(ActionParameterRessourcePermission, index_)>(
          reinterpret_cast<char*>(&index_),
          reinterpret_cast<char*>(&other->index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionParameterRessourcePermission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetActionPermissionRqst::InitAsDefaultInstance() {
}
class SetActionPermissionRqst::_Internal {
 public:
};

SetActionPermissionRqst::SetActionPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actionparameterressourcepermissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetActionPermissionRqst)
}
SetActionPermissionRqst::SetActionPermissionRqst(const SetActionPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actionparameterressourcepermissions_(from.actionparameterressourcepermissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.SetActionPermissionRqst)
}

void SetActionPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetActionPermissionRqst_ressource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetActionPermissionRqst::~SetActionPermissionRqst() {
  // @@protoc_insertion_point(destructor:ressource.SetActionPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetActionPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetActionPermissionRqst::ArenaDtor(void* object) {
  SetActionPermissionRqst* _this = reinterpret_cast< SetActionPermissionRqst* >(object);
  (void)_this;
}
void SetActionPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetActionPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetActionPermissionRqst& SetActionPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetActionPermissionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetActionPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionparameterressourcepermissions_.Clear();
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetActionPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.SetActionPermissionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionparameterressourcepermissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetActionPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.SetActionPermissionRqst.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actionparameterressourcepermissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_actionparameterressourcepermissions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetActionPermissionRqst)
  return target;
}

size_t SetActionPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetActionPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 2;
  total_size += 1UL * this->_internal_actionparameterressourcepermissions_size();
  for (const auto& msg : this->actionparameterressourcepermissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetActionPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetActionPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetActionPermissionRqst)
    MergeFrom(*source);
  }
}

void SetActionPermissionRqst::MergeFrom(const SetActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionparameterressourcepermissions_.MergeFrom(from.actionparameterressourcepermissions_);
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void SetActionPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionPermissionRqst::CopyFrom(const SetActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionPermissionRqst::IsInitialized() const {
  return true;
}

void SetActionPermissionRqst::InternalSwap(SetActionPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actionparameterressourcepermissions_.InternalSwap(&other->actionparameterressourcepermissions_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetActionPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetActionPermissionRsp::InitAsDefaultInstance() {
}
class SetActionPermissionRsp::_Internal {
 public:
};

SetActionPermissionRsp::SetActionPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.SetActionPermissionRsp)
}
SetActionPermissionRsp::SetActionPermissionRsp(const SetActionPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.SetActionPermissionRsp)
}

void SetActionPermissionRsp::SharedCtor() {
  result_ = false;
}

SetActionPermissionRsp::~SetActionPermissionRsp() {
  // @@protoc_insertion_point(destructor:ressource.SetActionPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetActionPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetActionPermissionRsp::ArenaDtor(void* object) {
  SetActionPermissionRsp* _this = reinterpret_cast< SetActionPermissionRsp* >(object);
  (void)_this;
}
void SetActionPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetActionPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetActionPermissionRsp& SetActionPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetActionPermissionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void SetActionPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.SetActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetActionPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetActionPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.SetActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.SetActionPermissionRsp)
  return target;
}

size_t SetActionPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.SetActionPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.SetActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetActionPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.SetActionPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.SetActionPermissionRsp)
    MergeFrom(*source);
  }
}

void SetActionPermissionRsp::MergeFrom(const SetActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.SetActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetActionPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.SetActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionPermissionRsp::CopyFrom(const SetActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.SetActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionPermissionRsp::IsInitialized() const {
  return true;
}

void SetActionPermissionRsp::InternalSwap(SetActionPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetActionPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActionPermissionRqst::InitAsDefaultInstance() {
}
class GetActionPermissionRqst::_Internal {
 public:
};

GetActionPermissionRqst::GetActionPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetActionPermissionRqst)
}
GetActionPermissionRqst::GetActionPermissionRqst(const GetActionPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetActionPermissionRqst)
}

void GetActionPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActionPermissionRqst_ressource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetActionPermissionRqst::~GetActionPermissionRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetActionPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActionPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetActionPermissionRqst::ArenaDtor(void* object) {
  GetActionPermissionRqst* _this = reinterpret_cast< GetActionPermissionRqst* >(object);
  (void)_this;
}
void GetActionPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActionPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActionPermissionRqst& GetActionPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActionPermissionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetActionPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActionPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetActionPermissionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActionPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetActionPermissionRqst.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetActionPermissionRqst)
  return target;
}

size_t GetActionPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetActionPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActionPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetActionPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetActionPermissionRqst)
    MergeFrom(*source);
  }
}

void GetActionPermissionRqst::MergeFrom(const GetActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void GetActionPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionPermissionRqst::CopyFrom(const GetActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionPermissionRqst::IsInitialized() const {
  return true;
}

void GetActionPermissionRqst::InternalSwap(GetActionPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActionPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActionPermissionRsp::InitAsDefaultInstance() {
}
class GetActionPermissionRsp::_Internal {
 public:
};

GetActionPermissionRsp::GetActionPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actionparameterressourcepermissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetActionPermissionRsp)
}
GetActionPermissionRsp::GetActionPermissionRsp(const GetActionPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actionparameterressourcepermissions_(from.actionparameterressourcepermissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetActionPermissionRsp)
}

void GetActionPermissionRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActionPermissionRsp_ressource_2eproto.base);
}

GetActionPermissionRsp::~GetActionPermissionRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetActionPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActionPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetActionPermissionRsp::ArenaDtor(void* object) {
  GetActionPermissionRsp* _this = reinterpret_cast< GetActionPermissionRsp* >(object);
  (void)_this;
}
void GetActionPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActionPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActionPermissionRsp& GetActionPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActionPermissionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetActionPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionparameterressourcepermissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActionPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionparameterressourcepermissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActionPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actionparameterressourcepermissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actionparameterressourcepermissions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetActionPermissionRsp)
  return target;
}

size_t GetActionPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetActionPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ressource.ActionParameterRessourcePermission actionParameterRessourcePermissions = 1;
  total_size += 1UL * this->_internal_actionparameterressourcepermissions_size();
  for (const auto& msg : this->actionparameterressourcepermissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActionPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetActionPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetActionPermissionRsp)
    MergeFrom(*source);
  }
}

void GetActionPermissionRsp::MergeFrom(const GetActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionparameterressourcepermissions_.MergeFrom(from.actionparameterressourcepermissions_);
}

void GetActionPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionPermissionRsp::CopyFrom(const GetActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionPermissionRsp::IsInitialized() const {
  return true;
}

void GetActionPermissionRsp::InternalSwap(GetActionPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actionparameterressourcepermissions_.InternalSwap(&other->actionparameterressourcepermissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActionPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRessourceRqst::InitAsDefaultInstance() {
  ::ressource::_RemoveRessourceRqst_default_instance_._instance.get_mutable()->ressource_ = const_cast< ::ressource::Ressource*>(
      ::ressource::Ressource::internal_default_instance());
}
class RemoveRessourceRqst::_Internal {
 public:
  static const ::ressource::Ressource& ressource(const RemoveRessourceRqst* msg);
};

const ::ressource::Ressource&
RemoveRessourceRqst::_Internal::ressource(const RemoveRessourceRqst* msg) {
  return *msg->ressource_;
}
RemoveRessourceRqst::RemoveRessourceRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveRessourceRqst)
}
RemoveRessourceRqst::RemoveRessourceRqst(const RemoveRessourceRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ressource()) {
    ressource_ = new ::ressource::Ressource(*from.ressource_);
  } else {
    ressource_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveRessourceRqst)
}

void RemoveRessourceRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveRessourceRqst_ressource_2eproto.base);
  ressource_ = nullptr;
}

RemoveRessourceRqst::~RemoveRessourceRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemoveRessourceRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRessourceRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ressource_;
}

void RemoveRessourceRqst::ArenaDtor(void* object) {
  RemoveRessourceRqst* _this = reinterpret_cast< RemoveRessourceRqst* >(object);
  (void)_this;
}
void RemoveRessourceRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRessourceRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRessourceRqst& RemoveRessourceRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRessourceRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRessourceRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveRessourceRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ressource_ != nullptr) {
    delete ressource_;
  }
  ressource_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRessourceRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Ressource ressource = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ressource(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRessourceRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveRessourceRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Ressource ressource = 1;
  if (this->has_ressource()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ressource(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveRessourceRqst)
  return target;
}

size_t RemoveRessourceRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveRessourceRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.Ressource ressource = 1;
  if (this->has_ressource()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ressource_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRessourceRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveRessourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRessourceRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRessourceRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveRessourceRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveRessourceRqst)
    MergeFrom(*source);
  }
}

void RemoveRessourceRqst::MergeFrom(const RemoveRessourceRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveRessourceRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ressource()) {
    _internal_mutable_ressource()->::ressource::Ressource::MergeFrom(from._internal_ressource());
  }
}

void RemoveRessourceRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveRessourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRessourceRqst::CopyFrom(const RemoveRessourceRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveRessourceRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRessourceRqst::IsInitialized() const {
  return true;
}

void RemoveRessourceRqst::InternalSwap(RemoveRessourceRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ressource_, other->ressource_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRessourceRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRessourceRsp::InitAsDefaultInstance() {
}
class RemoveRessourceRsp::_Internal {
 public:
};

RemoveRessourceRsp::RemoveRessourceRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveRessourceRsp)
}
RemoveRessourceRsp::RemoveRessourceRsp(const RemoveRessourceRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveRessourceRsp)
}

void RemoveRessourceRsp::SharedCtor() {
  result_ = false;
}

RemoveRessourceRsp::~RemoveRessourceRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemoveRessourceRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRessourceRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRessourceRsp::ArenaDtor(void* object) {
  RemoveRessourceRsp* _this = reinterpret_cast< RemoveRessourceRsp* >(object);
  (void)_this;
}
void RemoveRessourceRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRessourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRessourceRsp& RemoveRessourceRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRessourceRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRessourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveRessourceRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRessourceRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRessourceRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveRessourceRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveRessourceRsp)
  return target;
}

size_t RemoveRessourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveRessourceRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRessourceRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveRessourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRessourceRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRessourceRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveRessourceRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveRessourceRsp)
    MergeFrom(*source);
  }
}

void RemoveRessourceRsp::MergeFrom(const RemoveRessourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveRessourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRessourceRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveRessourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRessourceRsp::CopyFrom(const RemoveRessourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveRessourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRessourceRsp::IsInitialized() const {
  return true;
}

void RemoveRessourceRsp::InternalSwap(RemoveRessourceRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRessourceRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRessourcesRqst::InitAsDefaultInstance() {
}
class GetRessourcesRqst::_Internal {
 public:
};

GetRessourcesRqst::GetRessourcesRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetRessourcesRqst)
}
GetRessourcesRqst::GetRessourcesRqst(const GetRessourcesRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetRessourcesRqst)
}

void GetRessourcesRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRessourcesRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRessourcesRqst::~GetRessourcesRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetRessourcesRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRessourcesRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRessourcesRqst::ArenaDtor(void* object) {
  GetRessourcesRqst* _this = reinterpret_cast< GetRessourcesRqst* >(object);
  (void)_this;
}
void GetRessourcesRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRessourcesRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRessourcesRqst& GetRessourcesRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRessourcesRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetRessourcesRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetRessourcesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRessourcesRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetRessourcesRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetRessourcesRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRessourcesRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetRessourcesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetRessourcesRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetRessourcesRqst.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetRessourcesRqst)
  return target;
}

size_t GetRessourcesRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetRessourcesRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRessourcesRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetRessourcesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRessourcesRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRessourcesRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetRessourcesRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetRessourcesRqst)
    MergeFrom(*source);
  }
}

void GetRessourcesRqst::MergeFrom(const GetRessourcesRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetRessourcesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetRessourcesRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetRessourcesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRessourcesRqst::CopyFrom(const GetRessourcesRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetRessourcesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRessourcesRqst::IsInitialized() const {
  return true;
}

void GetRessourcesRqst::InternalSwap(GetRessourcesRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRessourcesRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRessourcesRsp::InitAsDefaultInstance() {
}
class GetRessourcesRsp::_Internal {
 public:
};

GetRessourcesRsp::GetRessourcesRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ressources_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetRessourcesRsp)
}
GetRessourcesRsp::GetRessourcesRsp(const GetRessourcesRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ressources_(from.ressources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetRessourcesRsp)
}

void GetRessourcesRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRessourcesRsp_ressource_2eproto.base);
}

GetRessourcesRsp::~GetRessourcesRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetRessourcesRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRessourcesRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRessourcesRsp::ArenaDtor(void* object) {
  GetRessourcesRsp* _this = reinterpret_cast< GetRessourcesRsp* >(object);
  (void)_this;
}
void GetRessourcesRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRessourcesRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRessourcesRsp& GetRessourcesRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRessourcesRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetRessourcesRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetRessourcesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ressources_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRessourcesRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ressource.Ressource ressources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ressources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRessourcesRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetRessourcesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ressource.Ressource ressources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ressources_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ressources(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetRessourcesRsp)
  return target;
}

size_t GetRessourcesRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetRessourcesRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ressource.Ressource ressources = 1;
  total_size += 1UL * this->_internal_ressources_size();
  for (const auto& msg : this->ressources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRessourcesRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetRessourcesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRessourcesRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRessourcesRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetRessourcesRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetRessourcesRsp)
    MergeFrom(*source);
  }
}

void GetRessourcesRsp::MergeFrom(const GetRessourcesRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetRessourcesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ressources_.MergeFrom(from.ressources_);
}

void GetRessourcesRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetRessourcesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRessourcesRsp::CopyFrom(const GetRessourcesRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetRessourcesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRessourcesRsp::IsInitialized() const {
  return true;
}

void GetRessourcesRsp::InternalSwap(GetRessourcesRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ressources_.InternalSwap(&other->ressources_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRessourcesRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveActionPermissionRqst::InitAsDefaultInstance() {
}
class RemoveActionPermissionRqst::_Internal {
 public:
};

RemoveActionPermissionRqst::RemoveActionPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveActionPermissionRqst)
}
RemoveActionPermissionRqst::RemoveActionPermissionRqst(const RemoveActionPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveActionPermissionRqst)
}

void RemoveActionPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveActionPermissionRqst_ressource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveActionPermissionRqst::~RemoveActionPermissionRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemoveActionPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveActionPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveActionPermissionRqst::ArenaDtor(void* object) {
  RemoveActionPermissionRqst* _this = reinterpret_cast< RemoveActionPermissionRqst* >(object);
  (void)_this;
}
void RemoveActionPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveActionPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveActionPermissionRqst& RemoveActionPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveActionPermissionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveActionPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveActionPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemoveActionPermissionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveActionPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveActionPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemoveActionPermissionRqst.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveActionPermissionRqst)
  return target;
}

size_t RemoveActionPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveActionPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveActionPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveActionPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveActionPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveActionPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveActionPermissionRqst)
    MergeFrom(*source);
  }
}

void RemoveActionPermissionRqst::MergeFrom(const RemoveActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveActionPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveActionPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveActionPermissionRqst::CopyFrom(const RemoveActionPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveActionPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveActionPermissionRqst::IsInitialized() const {
  return true;
}

void RemoveActionPermissionRqst::InternalSwap(RemoveActionPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveActionPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveActionPermissionRsp::InitAsDefaultInstance() {
}
class RemoveActionPermissionRsp::_Internal {
 public:
};

RemoveActionPermissionRsp::RemoveActionPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemoveActionPermissionRsp)
}
RemoveActionPermissionRsp::RemoveActionPermissionRsp(const RemoveActionPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemoveActionPermissionRsp)
}

void RemoveActionPermissionRsp::SharedCtor() {
  result_ = false;
}

RemoveActionPermissionRsp::~RemoveActionPermissionRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemoveActionPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveActionPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveActionPermissionRsp::ArenaDtor(void* object) {
  RemoveActionPermissionRsp* _this = reinterpret_cast< RemoveActionPermissionRsp* >(object);
  (void)_this;
}
void RemoveActionPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveActionPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveActionPermissionRsp& RemoveActionPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveActionPermissionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemoveActionPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemoveActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveActionPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveActionPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemoveActionPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemoveActionPermissionRsp)
  return target;
}

size_t RemoveActionPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemoveActionPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveActionPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemoveActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveActionPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveActionPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemoveActionPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemoveActionPermissionRsp)
    MergeFrom(*source);
  }
}

void RemoveActionPermissionRsp::MergeFrom(const RemoveActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemoveActionPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveActionPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemoveActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveActionPermissionRsp::CopyFrom(const RemoveActionPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemoveActionPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveActionPermissionRsp::IsInitialized() const {
  return true;
}

void RemoveActionPermissionRsp::InternalSwap(RemoveActionPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveActionPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateDirPermissionsRqst::InitAsDefaultInstance() {
}
class CreateDirPermissionsRqst::_Internal {
 public:
};

CreateDirPermissionsRqst::CreateDirPermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.CreateDirPermissionsRqst)
}
CreateDirPermissionsRqst::CreateDirPermissionsRqst(const CreateDirPermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.CreateDirPermissionsRqst)
}

void CreateDirPermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateDirPermissionsRqst_ressource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateDirPermissionsRqst::~CreateDirPermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.CreateDirPermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDirPermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateDirPermissionsRqst::ArenaDtor(void* object) {
  CreateDirPermissionsRqst* _this = reinterpret_cast< CreateDirPermissionsRqst* >(object);
  (void)_this;
}
void CreateDirPermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDirPermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDirPermissionsRqst& CreateDirPermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateDirPermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void CreateDirPermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.CreateDirPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDirPermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.CreateDirPermissionsRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.CreateDirPermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.CreateDirPermissionsRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDirPermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.CreateDirPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.CreateDirPermissionsRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.CreateDirPermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.CreateDirPermissionsRqst.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.CreateDirPermissionsRqst)
  return target;
}

size_t CreateDirPermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.CreateDirPermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDirPermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.CreateDirPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDirPermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDirPermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.CreateDirPermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.CreateDirPermissionsRqst)
    MergeFrom(*source);
  }
}

void CreateDirPermissionsRqst::MergeFrom(const CreateDirPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.CreateDirPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void CreateDirPermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.CreateDirPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDirPermissionsRqst::CopyFrom(const CreateDirPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.CreateDirPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDirPermissionsRqst::IsInitialized() const {
  return true;
}

void CreateDirPermissionsRqst::InternalSwap(CreateDirPermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDirPermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateDirPermissionsRsp::InitAsDefaultInstance() {
}
class CreateDirPermissionsRsp::_Internal {
 public:
};

CreateDirPermissionsRsp::CreateDirPermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.CreateDirPermissionsRsp)
}
CreateDirPermissionsRsp::CreateDirPermissionsRsp(const CreateDirPermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.CreateDirPermissionsRsp)
}

void CreateDirPermissionsRsp::SharedCtor() {
  result_ = false;
}

CreateDirPermissionsRsp::~CreateDirPermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.CreateDirPermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDirPermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateDirPermissionsRsp::ArenaDtor(void* object) {
  CreateDirPermissionsRsp* _this = reinterpret_cast< CreateDirPermissionsRsp* >(object);
  (void)_this;
}
void CreateDirPermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDirPermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDirPermissionsRsp& CreateDirPermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateDirPermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void CreateDirPermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.CreateDirPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDirPermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDirPermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.CreateDirPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.CreateDirPermissionsRsp)
  return target;
}

size_t CreateDirPermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.CreateDirPermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDirPermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.CreateDirPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDirPermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDirPermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.CreateDirPermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.CreateDirPermissionsRsp)
    MergeFrom(*source);
  }
}

void CreateDirPermissionsRsp::MergeFrom(const CreateDirPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.CreateDirPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateDirPermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.CreateDirPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDirPermissionsRsp::CopyFrom(const CreateDirPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.CreateDirPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDirPermissionsRsp::IsInitialized() const {
  return true;
}

void CreateDirPermissionsRsp::InternalSwap(CreateDirPermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDirPermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RenameFilePermissionRqst::InitAsDefaultInstance() {
}
class RenameFilePermissionRqst::_Internal {
 public:
};

RenameFilePermissionRqst::RenameFilePermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RenameFilePermissionRqst)
}
RenameFilePermissionRqst::RenameFilePermissionRqst(const RenameFilePermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldname().empty()) {
    oldname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oldname(),
      GetArena());
  }
  newname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_newname().empty()) {
    newname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_newname(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RenameFilePermissionRqst)
}

void RenameFilePermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RenameFilePermissionRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RenameFilePermissionRqst::~RenameFilePermissionRqst() {
  // @@protoc_insertion_point(destructor:ressource.RenameFilePermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RenameFilePermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RenameFilePermissionRqst::ArenaDtor(void* object) {
  RenameFilePermissionRqst* _this = reinterpret_cast< RenameFilePermissionRqst* >(object);
  (void)_this;
}
void RenameFilePermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RenameFilePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RenameFilePermissionRqst& RenameFilePermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RenameFilePermissionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RenameFilePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RenameFilePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oldname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RenameFilePermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RenameFilePermissionRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RenameFilePermissionRqst.oldName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string newName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RenameFilePermissionRqst.newName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RenameFilePermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RenameFilePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RenameFilePermissionRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldname().data(), static_cast<int>(this->_internal_oldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RenameFilePermissionRqst.oldName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldname(), target);
  }

  // string newName = 3;
  if (this->newname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newname().data(), static_cast<int>(this->_internal_newname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RenameFilePermissionRqst.newName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RenameFilePermissionRqst)
  return target;
}

size_t RenameFilePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RenameFilePermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldname());
  }

  // string newName = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameFilePermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RenameFilePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameFilePermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RenameFilePermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RenameFilePermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RenameFilePermissionRqst)
    MergeFrom(*source);
  }
}

void RenameFilePermissionRqst::MergeFrom(const RenameFilePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RenameFilePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.oldname().size() > 0) {
    _internal_set_oldname(from._internal_oldname());
  }
  if (from.newname().size() > 0) {
    _internal_set_newname(from._internal_newname());
  }
}

void RenameFilePermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RenameFilePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameFilePermissionRqst::CopyFrom(const RenameFilePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RenameFilePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameFilePermissionRqst::IsInitialized() const {
  return true;
}

void RenameFilePermissionRqst::InternalSwap(RenameFilePermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oldname_.Swap(&other->oldname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newname_.Swap(&other->newname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameFilePermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RenameFilePermissionRsp::InitAsDefaultInstance() {
}
class RenameFilePermissionRsp::_Internal {
 public:
};

RenameFilePermissionRsp::RenameFilePermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RenameFilePermissionRsp)
}
RenameFilePermissionRsp::RenameFilePermissionRsp(const RenameFilePermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RenameFilePermissionRsp)
}

void RenameFilePermissionRsp::SharedCtor() {
  result_ = false;
}

RenameFilePermissionRsp::~RenameFilePermissionRsp() {
  // @@protoc_insertion_point(destructor:ressource.RenameFilePermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RenameFilePermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RenameFilePermissionRsp::ArenaDtor(void* object) {
  RenameFilePermissionRsp* _this = reinterpret_cast< RenameFilePermissionRsp* >(object);
  (void)_this;
}
void RenameFilePermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RenameFilePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RenameFilePermissionRsp& RenameFilePermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RenameFilePermissionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RenameFilePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RenameFilePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RenameFilePermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RenameFilePermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RenameFilePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RenameFilePermissionRsp)
  return target;
}

size_t RenameFilePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RenameFilePermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameFilePermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RenameFilePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameFilePermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RenameFilePermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RenameFilePermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RenameFilePermissionRsp)
    MergeFrom(*source);
  }
}

void RenameFilePermissionRsp::MergeFrom(const RenameFilePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RenameFilePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RenameFilePermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RenameFilePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameFilePermissionRsp::CopyFrom(const RenameFilePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RenameFilePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameFilePermissionRsp::IsInitialized() const {
  return true;
}

void RenameFilePermissionRsp::InternalSwap(RenameFilePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameFilePermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteDirPermissionsRqst::InitAsDefaultInstance() {
}
class DeleteDirPermissionsRqst::_Internal {
 public:
};

DeleteDirPermissionsRqst::DeleteDirPermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteDirPermissionsRqst)
}
DeleteDirPermissionsRqst::DeleteDirPermissionsRqst(const DeleteDirPermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteDirPermissionsRqst)
}

void DeleteDirPermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteDirPermissionsRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteDirPermissionsRqst::~DeleteDirPermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteDirPermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteDirPermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteDirPermissionsRqst::ArenaDtor(void* object) {
  DeleteDirPermissionsRqst* _this = reinterpret_cast< DeleteDirPermissionsRqst* >(object);
  (void)_this;
}
void DeleteDirPermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteDirPermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteDirPermissionsRqst& DeleteDirPermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteDirPermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteDirPermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteDirPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDirPermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteDirPermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteDirPermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteDirPermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteDirPermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteDirPermissionsRqst)
  return target;
}

size_t DeleteDirPermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteDirPermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDirPermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteDirPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDirPermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteDirPermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteDirPermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteDirPermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteDirPermissionsRqst::MergeFrom(const DeleteDirPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteDirPermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void DeleteDirPermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteDirPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDirPermissionsRqst::CopyFrom(const DeleteDirPermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteDirPermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDirPermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteDirPermissionsRqst::InternalSwap(DeleteDirPermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDirPermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteDirPermissionsRsp::InitAsDefaultInstance() {
}
class DeleteDirPermissionsRsp::_Internal {
 public:
};

DeleteDirPermissionsRsp::DeleteDirPermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteDirPermissionsRsp)
}
DeleteDirPermissionsRsp::DeleteDirPermissionsRsp(const DeleteDirPermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteDirPermissionsRsp)
}

void DeleteDirPermissionsRsp::SharedCtor() {
  result_ = false;
}

DeleteDirPermissionsRsp::~DeleteDirPermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteDirPermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteDirPermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteDirPermissionsRsp::ArenaDtor(void* object) {
  DeleteDirPermissionsRsp* _this = reinterpret_cast< DeleteDirPermissionsRsp* >(object);
  (void)_this;
}
void DeleteDirPermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteDirPermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteDirPermissionsRsp& DeleteDirPermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteDirPermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteDirPermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteDirPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDirPermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteDirPermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteDirPermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteDirPermissionsRsp)
  return target;
}

size_t DeleteDirPermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteDirPermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDirPermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteDirPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDirPermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteDirPermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteDirPermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteDirPermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteDirPermissionsRsp::MergeFrom(const DeleteDirPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteDirPermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteDirPermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteDirPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDirPermissionsRsp::CopyFrom(const DeleteDirPermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteDirPermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDirPermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteDirPermissionsRsp::InternalSwap(DeleteDirPermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDirPermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteFilePermissionsRqst::InitAsDefaultInstance() {
}
class DeleteFilePermissionsRqst::_Internal {
 public:
};

DeleteFilePermissionsRqst::DeleteFilePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteFilePermissionsRqst)
}
DeleteFilePermissionsRqst::DeleteFilePermissionsRqst(const DeleteFilePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteFilePermissionsRqst)
}

void DeleteFilePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteFilePermissionsRqst_ressource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteFilePermissionsRqst::~DeleteFilePermissionsRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeleteFilePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteFilePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteFilePermissionsRqst::ArenaDtor(void* object) {
  DeleteFilePermissionsRqst* _this = reinterpret_cast< DeleteFilePermissionsRqst* >(object);
  (void)_this;
}
void DeleteFilePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteFilePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteFilePermissionsRqst& DeleteFilePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteFilePermissionsRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteFilePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteFilePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFilePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.DeleteFilePermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteFilePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteFilePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.DeleteFilePermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteFilePermissionsRqst)
  return target;
}

size_t DeleteFilePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteFilePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteFilePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteFilePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFilePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteFilePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteFilePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteFilePermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteFilePermissionsRqst::MergeFrom(const DeleteFilePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteFilePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void DeleteFilePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteFilePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFilePermissionsRqst::CopyFrom(const DeleteFilePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteFilePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFilePermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteFilePermissionsRqst::InternalSwap(DeleteFilePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFilePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteFilePermissionsRsp::InitAsDefaultInstance() {
}
class DeleteFilePermissionsRsp::_Internal {
 public:
};

DeleteFilePermissionsRsp::DeleteFilePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeleteFilePermissionsRsp)
}
DeleteFilePermissionsRsp::DeleteFilePermissionsRsp(const DeleteFilePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeleteFilePermissionsRsp)
}

void DeleteFilePermissionsRsp::SharedCtor() {
  result_ = false;
}

DeleteFilePermissionsRsp::~DeleteFilePermissionsRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeleteFilePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteFilePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteFilePermissionsRsp::ArenaDtor(void* object) {
  DeleteFilePermissionsRsp* _this = reinterpret_cast< DeleteFilePermissionsRsp* >(object);
  (void)_this;
}
void DeleteFilePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteFilePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteFilePermissionsRsp& DeleteFilePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteFilePermissionsRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeleteFilePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeleteFilePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFilePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteFilePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeleteFilePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeleteFilePermissionsRsp)
  return target;
}

size_t DeleteFilePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeleteFilePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteFilePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeleteFilePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFilePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteFilePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeleteFilePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeleteFilePermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteFilePermissionsRsp::MergeFrom(const DeleteFilePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeleteFilePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteFilePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeleteFilePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFilePermissionsRsp::CopyFrom(const DeleteFilePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeleteFilePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFilePermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteFilePermissionsRsp::InternalSwap(DeleteFilePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFilePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRqst::InitAsDefaultInstance() {
  ::ressource::_RegisterPeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::ressource::Peer*>(
      ::ressource::Peer::internal_default_instance());
}
class RegisterPeerRqst::_Internal {
 public:
  static const ::ressource::Peer& peer(const RegisterPeerRqst* msg);
};

const ::ressource::Peer&
RegisterPeerRqst::_Internal::peer(const RegisterPeerRqst* msg) {
  return *msg->peer_;
}
RegisterPeerRqst::RegisterPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RegisterPeerRqst)
}
RegisterPeerRqst::RegisterPeerRqst(const RegisterPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::ressource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RegisterPeerRqst)
}

void RegisterPeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPeerRqst_ressource_2eproto.base);
  peer_ = nullptr;
}

RegisterPeerRqst::~RegisterPeerRqst() {
  // @@protoc_insertion_point(destructor:ressource.RegisterPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRqst::ArenaDtor(void* object) {
  RegisterPeerRqst* _this = reinterpret_cast< RegisterPeerRqst* >(object);
  (void)_this;
}
void RegisterPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRqst& RegisterPeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RegisterPeerRqst)
  return target;
}

size_t RegisterPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RegisterPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RegisterPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RegisterPeerRqst)
    MergeFrom(*source);
  }
}

void RegisterPeerRqst::MergeFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::ressource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRqst::CopyFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRqst::IsInitialized() const {
  return true;
}

void RegisterPeerRqst::InternalSwap(RegisterPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRsp::InitAsDefaultInstance() {
}
class RegisterPeerRsp::_Internal {
 public:
};

RegisterPeerRsp::RegisterPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RegisterPeerRsp)
}
RegisterPeerRsp::RegisterPeerRsp(const RegisterPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RegisterPeerRsp)
}

void RegisterPeerRsp::SharedCtor() {
  result_ = false;
}

RegisterPeerRsp::~RegisterPeerRsp() {
  // @@protoc_insertion_point(destructor:ressource.RegisterPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RegisterPeerRsp::ArenaDtor(void* object) {
  RegisterPeerRsp* _this = reinterpret_cast< RegisterPeerRsp* >(object);
  (void)_this;
}
void RegisterPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRsp& RegisterPeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RegisterPeerRsp)
  return target;
}

size_t RegisterPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RegisterPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RegisterPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RegisterPeerRsp)
    MergeFrom(*source);
  }
}

void RegisterPeerRsp::MergeFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRsp::CopyFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRsp::IsInitialized() const {
  return true;
}

void RegisterPeerRsp::InternalSwap(RegisterPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRqst::InitAsDefaultInstance() {
}
class GetPeersRqst::_Internal {
 public:
};

GetPeersRqst::GetPeersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetPeersRqst)
}
GetPeersRqst::GetPeersRqst(const GetPeersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.GetPeersRqst)
}

void GetPeersRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRqst_ressource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeersRqst::~GetPeersRqst() {
  // @@protoc_insertion_point(destructor:ressource.GetPeersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeersRqst::ArenaDtor(void* object) {
  GetPeersRqst* _this = reinterpret_cast< GetPeersRqst* >(object);
  (void)_this;
}
void GetPeersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRqst& GetPeersRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.GetPeersRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.GetPeersRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetPeersRqst)
  return target;
}

size_t GetPeersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetPeersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetPeersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetPeersRqst)
    MergeFrom(*source);
  }
}

void GetPeersRqst::MergeFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetPeersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRqst::CopyFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRqst::IsInitialized() const {
  return true;
}

void GetPeersRqst::InternalSwap(GetPeersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRsp::InitAsDefaultInstance() {
}
class GetPeersRsp::_Internal {
 public:
};

GetPeersRsp::GetPeersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  peers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.GetPeersRsp)
}
GetPeersRsp::GetPeersRsp(const GetPeersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ressource.GetPeersRsp)
}

void GetPeersRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRsp_ressource_2eproto.base);
}

GetPeersRsp::~GetPeersRsp() {
  // @@protoc_insertion_point(destructor:ressource.GetPeersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPeersRsp::ArenaDtor(void* object) {
  GetPeersRsp* _this = reinterpret_cast< GetPeersRsp* >(object);
  (void)_this;
}
void GetPeersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRsp& GetPeersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ressource.Peer peers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_peers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ressource.Peer peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_peers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_peers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.GetPeersRsp)
  return target;
}

size_t GetPeersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.GetPeersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ressource.Peer peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->peers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.GetPeersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.GetPeersRsp)
    MergeFrom(*source);
  }
}

void GetPeersRsp::MergeFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void GetPeersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRsp::CopyFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRsp::IsInitialized() const {
  return true;
}

void GetPeersRsp::InternalSwap(GetPeersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  peers_.InternalSwap(&other->peers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRqst::InitAsDefaultInstance() {
  ::ressource::_DeletePeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::ressource::Peer*>(
      ::ressource::Peer::internal_default_instance());
}
class DeletePeerRqst::_Internal {
 public:
  static const ::ressource::Peer& peer(const DeletePeerRqst* msg);
};

const ::ressource::Peer&
DeletePeerRqst::_Internal::peer(const DeletePeerRqst* msg) {
  return *msg->peer_;
}
DeletePeerRqst::DeletePeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeletePeerRqst)
}
DeletePeerRqst::DeletePeerRqst(const DeletePeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::ressource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ressource.DeletePeerRqst)
}

void DeletePeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeletePeerRqst_ressource_2eproto.base);
  peer_ = nullptr;
}

DeletePeerRqst::~DeletePeerRqst() {
  // @@protoc_insertion_point(destructor:ressource.DeletePeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void DeletePeerRqst::ArenaDtor(void* object) {
  DeletePeerRqst* _this = reinterpret_cast< DeletePeerRqst* >(object);
  (void)_this;
}
void DeletePeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRqst& DeletePeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ressource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ressource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeletePeerRqst)
  return target;
}

size_t DeletePeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeletePeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ressource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeletePeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeletePeerRqst)
    MergeFrom(*source);
  }
}

void DeletePeerRqst::MergeFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::ressource::Peer::MergeFrom(from._internal_peer());
  }
}

void DeletePeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRqst::CopyFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRqst::IsInitialized() const {
  return true;
}

void DeletePeerRqst::InternalSwap(DeletePeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRsp::InitAsDefaultInstance() {
}
class DeletePeerRsp::_Internal {
 public:
};

DeletePeerRsp::DeletePeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.DeletePeerRsp)
}
DeletePeerRsp::DeletePeerRsp(const DeletePeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.DeletePeerRsp)
}

void DeletePeerRsp::SharedCtor() {
  result_ = false;
}

DeletePeerRsp::~DeletePeerRsp() {
  // @@protoc_insertion_point(destructor:ressource.DeletePeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePeerRsp::ArenaDtor(void* object) {
  DeletePeerRsp* _this = reinterpret_cast< DeletePeerRsp* >(object);
  (void)_this;
}
void DeletePeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRsp& DeletePeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.DeletePeerRsp)
  return target;
}

size_t DeletePeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.DeletePeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.DeletePeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.DeletePeerRsp)
    MergeFrom(*source);
  }
}

void DeletePeerRsp::MergeFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeletePeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRsp::CopyFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRsp::IsInitialized() const {
  return true;
}

void DeletePeerRsp::InternalSwap(DeletePeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionRqst::InitAsDefaultInstance() {
}
class AddPeerActionRqst::_Internal {
 public:
};

AddPeerActionRqst::AddPeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddPeerActionRqst)
}
AddPeerActionRqst::AddPeerActionRqst(const AddPeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.AddPeerActionRqst)
}

void AddPeerActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPeerActionRqst_ressource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddPeerActionRqst::~AddPeerActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.AddPeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPeerActionRqst::ArenaDtor(void* object) {
  AddPeerActionRqst* _this = reinterpret_cast< AddPeerActionRqst* >(object);
  (void)_this;
}
void AddPeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionRqst& AddPeerActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddPeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddPeerActionRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.AddPeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddPeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddPeerActionRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.AddPeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddPeerActionRqst)
  return target;
}

size_t AddPeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddPeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddPeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddPeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddPeerActionRqst)
    MergeFrom(*source);
  }
}

void AddPeerActionRqst::MergeFrom(const AddPeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddPeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddPeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddPeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionRqst::CopyFrom(const AddPeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddPeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionRqst::IsInitialized() const {
  return true;
}

void AddPeerActionRqst::InternalSwap(AddPeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionRsp::InitAsDefaultInstance() {
}
class AddPeerActionRsp::_Internal {
 public:
};

AddPeerActionRsp::AddPeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.AddPeerActionRsp)
}
AddPeerActionRsp::AddPeerActionRsp(const AddPeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.AddPeerActionRsp)
}

void AddPeerActionRsp::SharedCtor() {
  result_ = false;
}

AddPeerActionRsp::~AddPeerActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.AddPeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPeerActionRsp::ArenaDtor(void* object) {
  AddPeerActionRsp* _this = reinterpret_cast< AddPeerActionRsp* >(object);
  (void)_this;
}
void AddPeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionRsp& AddPeerActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.AddPeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.AddPeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.AddPeerActionRsp)
  return target;
}

size_t AddPeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.AddPeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.AddPeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.AddPeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.AddPeerActionRsp)
    MergeFrom(*source);
  }
}

void AddPeerActionRsp::MergeFrom(const AddPeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.AddPeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddPeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.AddPeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionRsp::CopyFrom(const AddPeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.AddPeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionRsp::IsInitialized() const {
  return true;
}

void AddPeerActionRsp::InternalSwap(AddPeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRqst::InitAsDefaultInstance() {
}
class RemovePeerActionRqst::_Internal {
 public:
};

RemovePeerActionRqst::RemovePeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemovePeerActionRqst)
}
RemovePeerActionRqst::RemovePeerActionRqst(const RemovePeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ressource.RemovePeerActionRqst)
}

void RemovePeerActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemovePeerActionRqst_ressource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeerActionRqst::~RemovePeerActionRqst() {
  // @@protoc_insertion_point(destructor:ressource.RemovePeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerActionRqst::ArenaDtor(void* object) {
  RemovePeerActionRqst* _this = reinterpret_cast< RemovePeerActionRqst* >(object);
  (void)_this;
}
void RemovePeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRqst& RemovePeerActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRqst_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemovePeerActionRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ressource.RemovePeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemovePeerActionRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ressource.RemovePeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemovePeerActionRqst)
  return target;
}

size_t RemovePeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemovePeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemovePeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemovePeerActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeerActionRqst::MergeFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRqst::CopyFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRqst::IsInitialized() const {
  return true;
}

void RemovePeerActionRqst::InternalSwap(RemovePeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRsp::InitAsDefaultInstance() {
}
class RemovePeerActionRsp::_Internal {
 public:
};

RemovePeerActionRsp::RemovePeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ressource.RemovePeerActionRsp)
}
RemovePeerActionRsp::RemovePeerActionRsp(const RemovePeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ressource.RemovePeerActionRsp)
}

void RemovePeerActionRsp::SharedCtor() {
  result_ = false;
}

RemovePeerActionRsp::~RemovePeerActionRsp() {
  // @@protoc_insertion_point(destructor:ressource.RemovePeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeerActionRsp::ArenaDtor(void* object) {
  RemovePeerActionRsp* _this = reinterpret_cast< RemovePeerActionRsp* >(object);
  (void)_this;
}
void RemovePeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRsp& RemovePeerActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRsp_ressource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ressource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ressource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ressource.RemovePeerActionRsp)
  return target;
}

size_t RemovePeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ressource.RemovePeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ressource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ressource.RemovePeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ressource.RemovePeerActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeerActionRsp::MergeFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ressource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ressource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRsp::CopyFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ressource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRsp::IsInitialized() const {
  return true;
}

void RemovePeerActionRsp::InternalSwap(RemovePeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ressource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ressource::Account* Arena::CreateMaybeMessage< ::ressource::Account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::Account >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::Role* Arena::CreateMaybeMessage< ::ressource::Role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::Role >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RegisterAccountRqst* Arena::CreateMaybeMessage< ::ressource::RegisterAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RegisterAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RegisterAccountRsp* Arena::CreateMaybeMessage< ::ressource::RegisterAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RegisterAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteAccountRqst* Arena::CreateMaybeMessage< ::ressource::DeleteAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteAccountRsp* Arena::CreateMaybeMessage< ::ressource::DeleteAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AuthenticateRqst* Arena::CreateMaybeMessage< ::ressource::AuthenticateRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AuthenticateRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AuthenticateRsp* Arena::CreateMaybeMessage< ::ressource::AuthenticateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AuthenticateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RefreshTokenRqst* Arena::CreateMaybeMessage< ::ressource::RefreshTokenRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RefreshTokenRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RefreshTokenRsp* Arena::CreateMaybeMessage< ::ressource::RefreshTokenRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RefreshTokenRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddAccountRoleRqst* Arena::CreateMaybeMessage< ::ressource::AddAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddAccountRoleRsp* Arena::CreateMaybeMessage< ::ressource::AddAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveAccountRoleRqst* Arena::CreateMaybeMessage< ::ressource::RemoveAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveAccountRoleRsp* Arena::CreateMaybeMessage< ::ressource::RemoveAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::CreateRoleRqst* Arena::CreateMaybeMessage< ::ressource::CreateRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::CreateRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::CreateRoleRsp* Arena::CreateMaybeMessage< ::ressource::CreateRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::CreateRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRoleRqst* Arena::CreateMaybeMessage< ::ressource::DeleteRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRoleRsp* Arena::CreateMaybeMessage< ::ressource::DeleteRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddRoleActionRqst* Arena::CreateMaybeMessage< ::ressource::AddRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddRoleActionRsp* Arena::CreateMaybeMessage< ::ressource::AddRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveRoleActionRqst* Arena::CreateMaybeMessage< ::ressource::RemoveRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveRoleActionRsp* Arena::CreateMaybeMessage< ::ressource::RemoveRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddApplicationActionRqst* Arena::CreateMaybeMessage< ::ressource::AddApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddApplicationActionRsp* Arena::CreateMaybeMessage< ::ressource::AddApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveApplicationActionRqst* Arena::CreateMaybeMessage< ::ressource::RemoveApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveApplicationActionRsp* Arena::CreateMaybeMessage< ::ressource::RemoveApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllActionsRqst* Arena::CreateMaybeMessage< ::ressource::GetAllActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllActionsRsp* Arena::CreateMaybeMessage< ::ressource::GetAllActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteApplicationRqst* Arena::CreateMaybeMessage< ::ressource::DeleteApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteApplicationRsp* Arena::CreateMaybeMessage< ::ressource::DeleteApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RessourcePermission* Arena::CreateMaybeMessage< ::ressource::RessourcePermission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RessourcePermission >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetPermissionsRqst* Arena::CreateMaybeMessage< ::ressource::GetPermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetPermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetPermissionsRsp* Arena::CreateMaybeMessage< ::ressource::GetPermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetPermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetPermissionRqst* Arena::CreateMaybeMessage< ::ressource::SetPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetPermissionRsp* Arena::CreateMaybeMessage< ::ressource::SetPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeletePermissionsRqst* Arena::CreateMaybeMessage< ::ressource::DeletePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeletePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeletePermissionsRsp* Arena::CreateMaybeMessage< ::ressource::DeletePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeletePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllFilesInfoRqst* Arena::CreateMaybeMessage< ::ressource::GetAllFilesInfoRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllFilesInfoRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllFilesInfoRsp* Arena::CreateMaybeMessage< ::ressource::GetAllFilesInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllFilesInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllApplicationsInfoRqst* Arena::CreateMaybeMessage< ::ressource::GetAllApplicationsInfoRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllApplicationsInfoRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetAllApplicationsInfoRsp* Arena::CreateMaybeMessage< ::ressource::GetAllApplicationsInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetAllApplicationsInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::UserSyncInfos* Arena::CreateMaybeMessage< ::ressource::UserSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::UserSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GroupSyncInfos* Arena::CreateMaybeMessage< ::ressource::GroupSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GroupSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::LdapSyncInfos* Arena::CreateMaybeMessage< ::ressource::LdapSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::LdapSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SynchronizeLdapRqst* Arena::CreateMaybeMessage< ::ressource::SynchronizeLdapRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SynchronizeLdapRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SynchronizeLdapRsp* Arena::CreateMaybeMessage< ::ressource::SynchronizeLdapRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SynchronizeLdapRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetRessourceOwnerRqst* Arena::CreateMaybeMessage< ::ressource::SetRessourceOwnerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetRessourceOwnerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetRessourceOwnerRsp* Arena::CreateMaybeMessage< ::ressource::SetRessourceOwnerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetRessourceOwnerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetRessourceOwnersRqst* Arena::CreateMaybeMessage< ::ressource::GetRessourceOwnersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetRessourceOwnersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetRessourceOwnersRsp* Arena::CreateMaybeMessage< ::ressource::GetRessourceOwnersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetRessourceOwnersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRessourceOwnerRqst* Arena::CreateMaybeMessage< ::ressource::DeleteRessourceOwnerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRessourceOwnerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRessourceOwnerRsp* Arena::CreateMaybeMessage< ::ressource::DeleteRessourceOwnerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRessourceOwnerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRessourceOwnersRqst* Arena::CreateMaybeMessage< ::ressource::DeleteRessourceOwnersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRessourceOwnersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRessourceOwnersRsp* Arena::CreateMaybeMessage< ::ressource::DeleteRessourceOwnersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRessourceOwnersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateTokenRqst* Arena::CreateMaybeMessage< ::ressource::ValidateTokenRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateTokenRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateTokenRsp* Arena::CreateMaybeMessage< ::ressource::ValidateTokenRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateTokenRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateApplicationAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidateApplicationAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateApplicationAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateApplicationAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidateApplicationAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateApplicationAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidatePeerAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidatePeerAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidatePeerAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidatePeerAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidatePeerAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidatePeerAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidatePeerRessourceAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidatePeerRessourceAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidatePeerRessourceAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidatePeerRessourceAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidatePeerRessourceAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidatePeerRessourceAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateUserAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidateUserAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateUserAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateUserAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidateUserAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateUserAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateUserRessourceAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidateUserRessourceAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateUserRessourceAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateUserRessourceAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidateUserRessourceAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateUserRessourceAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateApplicationRessourceAccessRqst* Arena::CreateMaybeMessage< ::ressource::ValidateApplicationRessourceAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateApplicationRessourceAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ValidateApplicationRessourceAccessRsp* Arena::CreateMaybeMessage< ::ressource::ValidateApplicationRessourceAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ValidateApplicationRessourceAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AccountExistRqst* Arena::CreateMaybeMessage< ::ressource::AccountExistRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AccountExistRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AccountExistRsp* Arena::CreateMaybeMessage< ::ressource::AccountExistRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AccountExistRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteAccountPermissionsRqst* Arena::CreateMaybeMessage< ::ressource::DeleteAccountPermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteAccountPermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteAccountPermissionsRsp* Arena::CreateMaybeMessage< ::ressource::DeleteAccountPermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteAccountPermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRolePermissionsRqst* Arena::CreateMaybeMessage< ::ressource::DeleteRolePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRolePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteRolePermissionsRsp* Arena::CreateMaybeMessage< ::ressource::DeleteRolePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteRolePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::LogInfo* Arena::CreateMaybeMessage< ::ressource::LogInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::LogInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::LogRqst* Arena::CreateMaybeMessage< ::ressource::LogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::LogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::LogRsp* Arena::CreateMaybeMessage< ::ressource::LogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::LogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteLogRqst* Arena::CreateMaybeMessage< ::ressource::DeleteLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteLogRsp* Arena::CreateMaybeMessage< ::ressource::DeleteLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteLogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetLogMethodRqst* Arena::CreateMaybeMessage< ::ressource::SetLogMethodRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetLogMethodRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetLogMethodRsp* Arena::CreateMaybeMessage< ::ressource::SetLogMethodRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetLogMethodRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ResetLogMethodRqst* Arena::CreateMaybeMessage< ::ressource::ResetLogMethodRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ResetLogMethodRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ResetLogMethodRsp* Arena::CreateMaybeMessage< ::ressource::ResetLogMethodRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ResetLogMethodRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetLogMethodsRqst* Arena::CreateMaybeMessage< ::ressource::GetLogMethodsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetLogMethodsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetLogMethodsRsp* Arena::CreateMaybeMessage< ::ressource::GetLogMethodsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetLogMethodsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetLogRqst* Arena::CreateMaybeMessage< ::ressource::GetLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetLogRsp* Arena::CreateMaybeMessage< ::ressource::GetLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetLogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ClearAllLogRqst* Arena::CreateMaybeMessage< ::ressource::ClearAllLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ClearAllLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ClearAllLogRsp* Arena::CreateMaybeMessage< ::ressource::ClearAllLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ClearAllLogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::Peer* Arena::CreateMaybeMessage< ::ressource::Peer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::Peer >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::Ressource* Arena::CreateMaybeMessage< ::ressource::Ressource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::Ressource >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetRessourceRqst* Arena::CreateMaybeMessage< ::ressource::SetRessourceRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetRessourceRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetRessourceRsp* Arena::CreateMaybeMessage< ::ressource::SetRessourceRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetRessourceRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::ActionParameterRessourcePermission* Arena::CreateMaybeMessage< ::ressource::ActionParameterRessourcePermission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::ActionParameterRessourcePermission >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetActionPermissionRqst* Arena::CreateMaybeMessage< ::ressource::SetActionPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetActionPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::SetActionPermissionRsp* Arena::CreateMaybeMessage< ::ressource::SetActionPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::SetActionPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetActionPermissionRqst* Arena::CreateMaybeMessage< ::ressource::GetActionPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetActionPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetActionPermissionRsp* Arena::CreateMaybeMessage< ::ressource::GetActionPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetActionPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveRessourceRqst* Arena::CreateMaybeMessage< ::ressource::RemoveRessourceRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveRessourceRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveRessourceRsp* Arena::CreateMaybeMessage< ::ressource::RemoveRessourceRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveRessourceRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetRessourcesRqst* Arena::CreateMaybeMessage< ::ressource::GetRessourcesRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetRessourcesRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetRessourcesRsp* Arena::CreateMaybeMessage< ::ressource::GetRessourcesRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetRessourcesRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveActionPermissionRqst* Arena::CreateMaybeMessage< ::ressource::RemoveActionPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveActionPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemoveActionPermissionRsp* Arena::CreateMaybeMessage< ::ressource::RemoveActionPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemoveActionPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::CreateDirPermissionsRqst* Arena::CreateMaybeMessage< ::ressource::CreateDirPermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::CreateDirPermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::CreateDirPermissionsRsp* Arena::CreateMaybeMessage< ::ressource::CreateDirPermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::CreateDirPermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RenameFilePermissionRqst* Arena::CreateMaybeMessage< ::ressource::RenameFilePermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RenameFilePermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RenameFilePermissionRsp* Arena::CreateMaybeMessage< ::ressource::RenameFilePermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RenameFilePermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteDirPermissionsRqst* Arena::CreateMaybeMessage< ::ressource::DeleteDirPermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteDirPermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteDirPermissionsRsp* Arena::CreateMaybeMessage< ::ressource::DeleteDirPermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteDirPermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteFilePermissionsRqst* Arena::CreateMaybeMessage< ::ressource::DeleteFilePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteFilePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeleteFilePermissionsRsp* Arena::CreateMaybeMessage< ::ressource::DeleteFilePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeleteFilePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RegisterPeerRqst* Arena::CreateMaybeMessage< ::ressource::RegisterPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RegisterPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RegisterPeerRsp* Arena::CreateMaybeMessage< ::ressource::RegisterPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RegisterPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetPeersRqst* Arena::CreateMaybeMessage< ::ressource::GetPeersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetPeersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::GetPeersRsp* Arena::CreateMaybeMessage< ::ressource::GetPeersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::GetPeersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeletePeerRqst* Arena::CreateMaybeMessage< ::ressource::DeletePeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeletePeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::DeletePeerRsp* Arena::CreateMaybeMessage< ::ressource::DeletePeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::DeletePeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddPeerActionRqst* Arena::CreateMaybeMessage< ::ressource::AddPeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddPeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::AddPeerActionRsp* Arena::CreateMaybeMessage< ::ressource::AddPeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::AddPeerActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemovePeerActionRqst* Arena::CreateMaybeMessage< ::ressource::RemovePeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemovePeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::ressource::RemovePeerActionRsp* Arena::CreateMaybeMessage< ::ressource::RemovePeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ressource::RemovePeerActionRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

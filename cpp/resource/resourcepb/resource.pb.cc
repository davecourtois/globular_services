// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource.proto

#include "resource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionResourceParameterPermission_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Group_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GroupSyncInfos_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LdapSyncInfos_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogInfo_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Organization_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Permission_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Permissions_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_resource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_resource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserSyncInfos_resource_2eproto;
namespace resource {
class UserSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserSyncInfos> _instance;
} _UserSyncInfos_default_instance_;
class GroupSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GroupSyncInfos> _instance;
} _GroupSyncInfos_default_instance_;
class LdapSyncInfosDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LdapSyncInfos> _instance;
} _LdapSyncInfos_default_instance_;
class SynchronizeLdapRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SynchronizeLdapRqst> _instance;
} _SynchronizeLdapRqst_default_instance_;
class SynchronizeLdapRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SynchronizeLdapRsp> _instance;
} _SynchronizeLdapRsp_default_instance_;
class ValidateTokenRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateTokenRqst> _instance;
} _ValidateTokenRqst_default_instance_;
class ValidateTokenRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateTokenRsp> _instance;
} _ValidateTokenRsp_default_instance_;
class GetAllActionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllActionsRqst> _instance;
} _GetAllActionsRqst_default_instance_;
class GetAllActionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllActionsRsp> _instance;
} _GetAllActionsRsp_default_instance_;
class AccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Account> _instance;
} _Account_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Role> _instance;
} _Role_default_instance_;
class RegisterAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRqst> _instance;
} _RegisterAccountRqst_default_instance_;
class RegisterAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterAccountRsp> _instance;
} _RegisterAccountRsp_default_instance_;
class DeleteAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRqst> _instance;
} _DeleteAccountRqst_default_instance_;
class DeleteAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAccountRsp> _instance;
} _DeleteAccountRsp_default_instance_;
class AuthenticateRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticateRqst> _instance;
} _AuthenticateRqst_default_instance_;
class AuthenticateRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticateRsp> _instance;
} _AuthenticateRsp_default_instance_;
class RefreshTokenRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshTokenRqst> _instance;
} _RefreshTokenRqst_default_instance_;
class RefreshTokenRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshTokenRsp> _instance;
} _RefreshTokenRsp_default_instance_;
class AddAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRqst> _instance;
} _AddAccountRoleRqst_default_instance_;
class AddAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddAccountRoleRsp> _instance;
} _AddAccountRoleRsp_default_instance_;
class RemoveAccountRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRqst> _instance;
} _RemoveAccountRoleRqst_default_instance_;
class RemoveAccountRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveAccountRoleRsp> _instance;
} _RemoveAccountRoleRsp_default_instance_;
class CreateRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRqst> _instance;
} _CreateRoleRqst_default_instance_;
class CreateRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateRoleRsp> _instance;
} _CreateRoleRsp_default_instance_;
class DeleteRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRqst> _instance;
} _DeleteRoleRqst_default_instance_;
class DeleteRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRoleRsp> _instance;
} _DeleteRoleRsp_default_instance_;
class DeleteApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRqst> _instance;
} _DeleteApplicationRqst_default_instance_;
class DeleteApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteApplicationRsp> _instance;
} _DeleteApplicationRsp_default_instance_;
class GetAllApplicationsInfoRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllApplicationsInfoRqst> _instance;
} _GetAllApplicationsInfoRqst_default_instance_;
class GetAllApplicationsInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllApplicationsInfoRsp> _instance;
} _GetAllApplicationsInfoRsp_default_instance_;
class AccountExistRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRqst> _instance;
} _AccountExistRqst_default_instance_;
class AccountExistRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountExistRsp> _instance;
} _AccountExistRsp_default_instance_;
class GroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Group> _instance;
} _Group_default_instance_;
class CreateGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupRqst> _instance;
} _CreateGroupRqst_default_instance_;
class CreateGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupRsp> _instance;
} _CreateGroupRsp_default_instance_;
class GetGroupsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRqst> _instance;
} _GetGroupsRqst_default_instance_;
class GetGroupsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRsp> _instance;
} _GetGroupsRsp_default_instance_;
class DeleteGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupRqst> _instance;
} _DeleteGroupRqst_default_instance_;
class DeleteGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupRsp> _instance;
} _DeleteGroupRsp_default_instance_;
class AddGroupMemberAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberAccountRqst> _instance;
} _AddGroupMemberAccountRqst_default_instance_;
class AddGroupMemberAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberAccountRsp> _instance;
} _AddGroupMemberAccountRsp_default_instance_;
class RemoveGroupMemberAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberAccountRqst> _instance;
} _RemoveGroupMemberAccountRqst_default_instance_;
class RemoveGroupMemberAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberAccountRsp> _instance;
} _RemoveGroupMemberAccountRsp_default_instance_;
class OrganizationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Organization> _instance;
} _Organization_default_instance_;
class CreateOrganizationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationRqst> _instance;
} _CreateOrganizationRqst_default_instance_;
class CreateOrganizationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationRsp> _instance;
} _CreateOrganizationRsp_default_instance_;
class GetOrganizationsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationsRqst> _instance;
} _GetOrganizationsRqst_default_instance_;
class GetOrganizationsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationsRsp> _instance;
} _GetOrganizationsRsp_default_instance_;
class DeleteOrganizationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationRqst> _instance;
} _DeleteOrganizationRqst_default_instance_;
class DeleteOrganizationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationRsp> _instance;
} _DeleteOrganizationRsp_default_instance_;
class PeerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Peer> _instance;
} _Peer_default_instance_;
class RegisterPeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRqst> _instance;
} _RegisterPeerRqst_default_instance_;
class RegisterPeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPeerRsp> _instance;
} _RegisterPeerRsp_default_instance_;
class GetPeersRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRqst> _instance;
} _GetPeersRqst_default_instance_;
class GetPeersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPeersRsp> _instance;
} _GetPeersRsp_default_instance_;
class DeletePeerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRqst> _instance;
} _DeletePeerRqst_default_instance_;
class DeletePeerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePeerRsp> _instance;
} _DeletePeerRsp_default_instance_;
class AddRoleActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionRqst> _instance;
} _AddRoleActionRqst_default_instance_;
class AddRoleActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRoleActionRsp> _instance;
} _AddRoleActionRsp_default_instance_;
class RemoveRoleActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRqst> _instance;
} _RemoveRoleActionRqst_default_instance_;
class RemoveRoleActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveRoleActionRsp> _instance;
} _RemoveRoleActionRsp_default_instance_;
class AddApplicationActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionRqst> _instance;
} _AddApplicationActionRqst_default_instance_;
class AddApplicationActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddApplicationActionRsp> _instance;
} _AddApplicationActionRsp_default_instance_;
class RemoveApplicationActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRqst> _instance;
} _RemoveApplicationActionRqst_default_instance_;
class RemoveApplicationActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveApplicationActionRsp> _instance;
} _RemoveApplicationActionRsp_default_instance_;
class AddPeerActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionRqst> _instance;
} _AddPeerActionRqst_default_instance_;
class AddPeerActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPeerActionRsp> _instance;
} _AddPeerActionRsp_default_instance_;
class RemovePeerActionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRqst> _instance;
} _RemovePeerActionRqst_default_instance_;
class RemovePeerActionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePeerActionRsp> _instance;
} _RemovePeerActionRsp_default_instance_;
class AddOrganizationAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationAccountRqst> _instance;
} _AddOrganizationAccountRqst_default_instance_;
class AddOrganizationAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationAccountRsp> _instance;
} _AddOrganizationAccountRsp_default_instance_;
class AddOrganizationGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationGroupRqst> _instance;
} _AddOrganizationGroupRqst_default_instance_;
class AddOrganizationGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationGroupRsp> _instance;
} _AddOrganizationGroupRsp_default_instance_;
class AddOrganizationRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationRoleRqst> _instance;
} _AddOrganizationRoleRqst_default_instance_;
class AddOrganizationRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationRoleRsp> _instance;
} _AddOrganizationRoleRsp_default_instance_;
class AddOrganizationApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationApplicationRqst> _instance;
} _AddOrganizationApplicationRqst_default_instance_;
class AddOrganizationApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddOrganizationApplicationRsp> _instance;
} _AddOrganizationApplicationRsp_default_instance_;
class RemoveOrganizationGroupRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationGroupRqst> _instance;
} _RemoveOrganizationGroupRqst_default_instance_;
class RemoveOrganizationGroupRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationGroupRsp> _instance;
} _RemoveOrganizationGroupRsp_default_instance_;
class RemoveOrganizationRoleRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationRoleRqst> _instance;
} _RemoveOrganizationRoleRqst_default_instance_;
class RemoveOrganizationRoleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationRoleRsp> _instance;
} _RemoveOrganizationRoleRsp_default_instance_;
class RemoveOrganizationApplicationRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationApplicationRqst> _instance;
} _RemoveOrganizationApplicationRqst_default_instance_;
class RemoveOrganizationApplicationRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationApplicationRsp> _instance;
} _RemoveOrganizationApplicationRsp_default_instance_;
class RemoveOrganizationAccountRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationAccountRqst> _instance;
} _RemoveOrganizationAccountRqst_default_instance_;
class RemoveOrganizationAccountRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOrganizationAccountRsp> _instance;
} _RemoveOrganizationAccountRsp_default_instance_;
class PermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Permission> _instance;
} _Permission_default_instance_;
class PermissionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Permissions> _instance;
} _Permissions_default_instance_;
class ActionResourceParameterPermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionResourceParameterPermission> _instance;
} _ActionResourceParameterPermission_default_instance_;
class SetActionResourcesPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetActionResourcesPermissionRqst> _instance;
} _SetActionResourcesPermissionRqst_default_instance_;
class SetActionResourcesPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetActionResourcesPermissionRsp> _instance;
} _SetActionResourcesPermissionRsp_default_instance_;
class GetActionResourcesPermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActionResourcesPermissionRqst> _instance;
} _GetActionResourcesPermissionRqst_default_instance_;
class GetActionResourcesPermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActionResourcesPermissionRsp> _instance;
} _GetActionResourcesPermissionRsp_default_instance_;
class GetResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResourcePermissionsRqst> _instance;
} _GetResourcePermissionsRqst_default_instance_;
class GetResourcePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResourcePermissionsRsp> _instance;
} _GetResourcePermissionsRsp_default_instance_;
class DeleteResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResourcePermissionsRqst> _instance;
} _DeleteResourcePermissionsRqst_default_instance_;
class DeleteResourcePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResourcePermissionsRsp> _instance;
} _DeleteResourcePermissionsRsp_default_instance_;
class GetResourcePermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResourcePermissionRqst> _instance;
} _GetResourcePermissionRqst_default_instance_;
class GetResourcePermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResourcePermissionRsp> _instance;
} _GetResourcePermissionRsp_default_instance_;
class DeleteResourcePermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResourcePermissionRqst> _instance;
} _DeleteResourcePermissionRqst_default_instance_;
class DeleteResourcePermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResourcePermissionRsp> _instance;
} _DeleteResourcePermissionRsp_default_instance_;
class SetResourcePermissionsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResourcePermissionsRqst> _instance;
} _SetResourcePermissionsRqst_default_instance_;
class SetResourcePermissionsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResourcePermissionsRsp> _instance;
} _SetResourcePermissionsRsp_default_instance_;
class SetResourcePermissionRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResourcePermissionRqst> _instance;
} _SetResourcePermissionRqst_default_instance_;
class SetResourcePermissionRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResourcePermissionRsp> _instance;
} _SetResourcePermissionRsp_default_instance_;
class AddResourceOwnerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResourceOwnerRqst> _instance;
} _AddResourceOwnerRqst_default_instance_;
class AddResourceOwnerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResourceOwnerRsp> _instance;
} _AddResourceOwnerRsp_default_instance_;
class removeResourceOwnerRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<removeResourceOwnerRqst> _instance;
} _removeResourceOwnerRqst_default_instance_;
class removeResourceOwnerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<removeResourceOwnerRsp> _instance;
} _removeResourceOwnerRsp_default_instance_;
class DeleteAllAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAllAccessRqst> _instance;
} _DeleteAllAccessRqst_default_instance_;
class DeleteAllAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteAllAccessRsp> _instance;
} _DeleteAllAccessRsp_default_instance_;
class ValidateAccessRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateAccessRqst> _instance;
} _ValidateAccessRqst_default_instance_;
class ValidateAccessRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValidateAccessRsp> _instance;
} _ValidateAccessRsp_default_instance_;
class GetAccessesRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccessesRqst> _instance;
} _GetAccessesRqst_default_instance_;
class GetAccessesRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAccessesRsp> _instance;
} _GetAccessesRsp_default_instance_;
class LogInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogInfo> _instance;
} _LogInfo_default_instance_;
class LogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogRqst> _instance;
} _LogRqst_default_instance_;
class LogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogRsp> _instance;
} _LogRsp_default_instance_;
class DeleteLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogRqst> _instance;
} _DeleteLogRqst_default_instance_;
class DeleteLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogRsp> _instance;
} _DeleteLogRsp_default_instance_;
class SetLogMethodRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLogMethodRqst> _instance;
} _SetLogMethodRqst_default_instance_;
class SetLogMethodRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLogMethodRsp> _instance;
} _SetLogMethodRsp_default_instance_;
class ResetLogMethodRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetLogMethodRqst> _instance;
} _ResetLogMethodRqst_default_instance_;
class ResetLogMethodRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetLogMethodRsp> _instance;
} _ResetLogMethodRsp_default_instance_;
class GetLogMethodsRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogMethodsRqst> _instance;
} _GetLogMethodsRqst_default_instance_;
class GetLogMethodsRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogMethodsRsp> _instance;
} _GetLogMethodsRsp_default_instance_;
class GetLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogRqst> _instance;
} _GetLogRqst_default_instance_;
class GetLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogRsp> _instance;
} _GetLogRsp_default_instance_;
class ClearAllLogRqstDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllLogRqst> _instance;
} _ClearAllLogRqst_default_instance_;
class ClearAllLogRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearAllLogRsp> _instance;
} _ClearAllLogRsp_default_instance_;
}  // namespace resource
static void InitDefaultsscc_info_Account_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Account_default_instance_;
    new (ptr) ::resource::Account();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Account::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Account_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Account_resource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AccountExistRqst_default_instance_;
    new (ptr) ::resource::AccountExistRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AccountExistRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AccountExistRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AccountExistRsp_default_instance_;
    new (ptr) ::resource::AccountExistRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AccountExistRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountExistRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountExistRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_ActionResourceParameterPermission_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ActionResourceParameterPermission_default_instance_;
    new (ptr) ::resource::ActionResourceParameterPermission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ActionResourceParameterPermission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionResourceParameterPermission_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionResourceParameterPermission_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddAccountRoleRqst_default_instance_;
    new (ptr) ::resource::AddAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddAccountRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddAccountRoleRsp_default_instance_;
    new (ptr) ::resource::AddAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddAccountRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddAccountRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddApplicationActionRqst_default_instance_;
    new (ptr) ::resource::AddApplicationActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddApplicationActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddApplicationActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddApplicationActionRsp_default_instance_;
    new (ptr) ::resource::AddApplicationActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddApplicationActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddApplicationActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddApplicationActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddGroupMemberAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddGroupMemberAccountRqst_default_instance_;
    new (ptr) ::resource::AddGroupMemberAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddGroupMemberAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGroupMemberAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddGroupMemberAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddGroupMemberAccountRsp_default_instance_;
    new (ptr) ::resource::AddGroupMemberAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddGroupMemberAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddGroupMemberAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationAccountRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationAccountRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationApplicationRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationApplicationRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationGroupRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationGroupRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationRoleRqst_default_instance_;
    new (ptr) ::resource::AddOrganizationRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddOrganizationRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddOrganizationRoleRsp_default_instance_;
    new (ptr) ::resource::AddOrganizationRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddOrganizationRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddOrganizationRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddOrganizationRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddPeerActionRqst_default_instance_;
    new (ptr) ::resource::AddPeerActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddPeerActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddPeerActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddPeerActionRsp_default_instance_;
    new (ptr) ::resource::AddPeerActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddPeerActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPeerActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPeerActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddResourceOwnerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddResourceOwnerRqst_default_instance_;
    new (ptr) ::resource::AddResourceOwnerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddResourceOwnerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResourceOwnerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResourceOwnerRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddResourceOwnerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddResourceOwnerRsp_default_instance_;
    new (ptr) ::resource::AddResourceOwnerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddResourceOwnerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResourceOwnerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResourceOwnerRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddRoleActionRqst_default_instance_;
    new (ptr) ::resource::AddRoleActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddRoleActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AddRoleActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AddRoleActionRsp_default_instance_;
    new (ptr) ::resource::AddRoleActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AddRoleActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRoleActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRoleActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticateRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AuthenticateRqst_default_instance_;
    new (ptr) ::resource::AuthenticateRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AuthenticateRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticateRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticateRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticateRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_AuthenticateRsp_default_instance_;
    new (ptr) ::resource::AuthenticateRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::AuthenticateRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticateRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticateRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllLogRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearAllLogRqst_default_instance_;
    new (ptr) ::resource::ClearAllLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearAllLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllLogRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllLogRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ClearAllLogRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ClearAllLogRsp_default_instance_;
    new (ptr) ::resource::ClearAllLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ClearAllLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearAllLogRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearAllLogRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateGroupRqst_default_instance_;
    new (ptr) ::resource::CreateGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateGroupRqst_resource_2eproto}, {
      &scc_info_Group_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateGroupRsp_default_instance_;
    new (ptr) ::resource::CreateGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateOrganizationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateOrganizationRqst_default_instance_;
    new (ptr) ::resource::CreateOrganizationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateOrganizationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateOrganizationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateOrganizationRqst_resource_2eproto}, {
      &scc_info_Organization_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateOrganizationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateOrganizationRsp_default_instance_;
    new (ptr) ::resource::CreateOrganizationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateOrganizationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateOrganizationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateOrganizationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_CreateRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateRoleRqst_default_instance_;
    new (ptr) ::resource::CreateRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateRoleRqst_resource_2eproto}, {
      &scc_info_Role_resource_2eproto.base,}};

static void InitDefaultsscc_info_CreateRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_CreateRoleRsp_default_instance_;
    new (ptr) ::resource::CreateRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::CreateRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAccountRqst_default_instance_;
    new (ptr) ::resource::DeleteAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAccountRsp_default_instance_;
    new (ptr) ::resource::DeleteAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAllAccessRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAllAccessRqst_default_instance_;
    new (ptr) ::resource::DeleteAllAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAllAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAllAccessRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAllAccessRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteAllAccessRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteAllAccessRsp_default_instance_;
    new (ptr) ::resource::DeleteAllAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteAllAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteAllAccessRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteAllAccessRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteApplicationRqst_default_instance_;
    new (ptr) ::resource::DeleteApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteApplicationRsp_default_instance_;
    new (ptr) ::resource::DeleteApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteGroupRqst_default_instance_;
    new (ptr) ::resource::DeleteGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteGroupRsp_default_instance_;
    new (ptr) ::resource::DeleteGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteLogRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteLogRqst_default_instance_;
    new (ptr) ::resource::DeleteLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteLogRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteLogRqst_resource_2eproto}, {
      &scc_info_LogInfo_resource_2eproto.base,}};

static void InitDefaultsscc_info_DeleteLogRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteLogRsp_default_instance_;
    new (ptr) ::resource::DeleteLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteLogRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteLogRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteOrganizationRqst_default_instance_;
    new (ptr) ::resource::DeleteOrganizationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteOrganizationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteOrganizationRsp_default_instance_;
    new (ptr) ::resource::DeleteOrganizationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteOrganizationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeletePeerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeletePeerRqst_default_instance_;
    new (ptr) ::resource::DeletePeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeletePeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeletePeerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeletePeerRqst_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_DeletePeerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeletePeerRsp_default_instance_;
    new (ptr) ::resource::DeletePeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeletePeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePeerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePeerRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResourcePermissionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteResourcePermissionRqst_default_instance_;
    new (ptr) ::resource::DeleteResourcePermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteResourcePermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResourcePermissionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResourcePermissionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResourcePermissionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteResourcePermissionRsp_default_instance_;
    new (ptr) ::resource::DeleteResourcePermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteResourcePermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResourcePermissionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResourcePermissionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResourcePermissionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteResourcePermissionsRqst_default_instance_;
    new (ptr) ::resource::DeleteResourcePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteResourcePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResourcePermissionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResourcePermissionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResourcePermissionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteResourcePermissionsRsp_default_instance_;
    new (ptr) ::resource::DeleteResourcePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteResourcePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResourcePermissionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteResourcePermissionsRsp_resource_2eproto}, {
      &scc_info_Permissions_resource_2eproto.base,}};

static void InitDefaultsscc_info_DeleteRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteRoleRqst_default_instance_;
    new (ptr) ::resource::DeleteRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_DeleteRoleRsp_default_instance_;
    new (ptr) ::resource::DeleteRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::DeleteRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAccessesRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccessesRqst_default_instance_;
    new (ptr) ::resource::GetAccessesRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccessesRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAccessesRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAccessesRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAccessesRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAccessesRsp_default_instance_;
    new (ptr) ::resource::GetAccessesRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAccessesRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAccessesRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAccessesRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetActionResourcesPermissionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetActionResourcesPermissionRqst_default_instance_;
    new (ptr) ::resource::GetActionResourcesPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetActionResourcesPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActionResourcesPermissionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActionResourcesPermissionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetActionResourcesPermissionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetActionResourcesPermissionRsp_default_instance_;
    new (ptr) ::resource::GetActionResourcesPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetActionResourcesPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetActionResourcesPermissionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetActionResourcesPermissionRsp_resource_2eproto}, {
      &scc_info_ActionResourceParameterPermission_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetAllActionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAllActionsRqst_default_instance_;
    new (ptr) ::resource::GetAllActionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAllActionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllActionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllActionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllActionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAllActionsRsp_default_instance_;
    new (ptr) ::resource::GetAllActionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAllActionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllActionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllActionsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllApplicationsInfoRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAllApplicationsInfoRqst_default_instance_;
    new (ptr) ::resource::GetAllApplicationsInfoRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAllApplicationsInfoRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllApplicationsInfoRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllApplicationsInfoRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetAllApplicationsInfoRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetAllApplicationsInfoRsp_default_instance_;
    new (ptr) ::resource::GetAllApplicationsInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetAllApplicationsInfoRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllApplicationsInfoRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllApplicationsInfoRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetGroupsRqst_default_instance_;
    new (ptr) ::resource::GetGroupsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetGroupsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetGroupsRsp_default_instance_;
    new (ptr) ::resource::GetGroupsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetGroupsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGroupsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGroupsRsp_resource_2eproto}, {
      &scc_info_Group_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetLogMethodsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetLogMethodsRqst_default_instance_;
    new (ptr) ::resource::GetLogMethodsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetLogMethodsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogMethodsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogMethodsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogMethodsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetLogMethodsRsp_default_instance_;
    new (ptr) ::resource::GetLogMethodsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetLogMethodsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogMethodsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogMethodsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetLogRqst_default_instance_;
    new (ptr) ::resource::GetLogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetLogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetLogRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetLogRsp_default_instance_;
    new (ptr) ::resource::GetLogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetLogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLogRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLogRsp_resource_2eproto}, {
      &scc_info_LogInfo_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetOrganizationsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetOrganizationsRqst_default_instance_;
    new (ptr) ::resource::GetOrganizationsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetOrganizationsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOrganizationsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOrganizationsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetOrganizationsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetOrganizationsRsp_default_instance_;
    new (ptr) ::resource::GetOrganizationsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetOrganizationsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOrganizationsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOrganizationsRsp_resource_2eproto}, {
      &scc_info_Organization_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetPeersRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPeersRqst_default_instance_;
    new (ptr) ::resource::GetPeersRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPeersRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPeersRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPeersRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetPeersRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetPeersRsp_default_instance_;
    new (ptr) ::resource::GetPeersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetPeersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPeersRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPeersRsp_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetResourcePermissionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetResourcePermissionRqst_default_instance_;
    new (ptr) ::resource::GetResourcePermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetResourcePermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResourcePermissionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResourcePermissionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetResourcePermissionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetResourcePermissionRsp_default_instance_;
    new (ptr) ::resource::GetResourcePermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetResourcePermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResourcePermissionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResourcePermissionRsp_resource_2eproto}, {
      &scc_info_Permission_resource_2eproto.base,}};

static void InitDefaultsscc_info_GetResourcePermissionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetResourcePermissionsRqst_default_instance_;
    new (ptr) ::resource::GetResourcePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetResourcePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResourcePermissionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResourcePermissionsRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_GetResourcePermissionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GetResourcePermissionsRsp_default_instance_;
    new (ptr) ::resource::GetResourcePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GetResourcePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResourcePermissionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResourcePermissionsRsp_resource_2eproto}, {
      &scc_info_Permissions_resource_2eproto.base,}};

static void InitDefaultsscc_info_Group_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Group_default_instance_;
    new (ptr) ::resource::Group();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Group::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Group_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Group_resource_2eproto}, {}};

static void InitDefaultsscc_info_GroupSyncInfos_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_GroupSyncInfos_default_instance_;
    new (ptr) ::resource::GroupSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::GroupSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GroupSyncInfos_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GroupSyncInfos_resource_2eproto}, {}};

static void InitDefaultsscc_info_LdapSyncInfos_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_LdapSyncInfos_default_instance_;
    new (ptr) ::resource::LdapSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::LdapSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LdapSyncInfos_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LdapSyncInfos_resource_2eproto}, {
      &scc_info_UserSyncInfos_resource_2eproto.base,
      &scc_info_GroupSyncInfos_resource_2eproto.base,}};

static void InitDefaultsscc_info_LogInfo_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_LogInfo_default_instance_;
    new (ptr) ::resource::LogInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::LogInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogInfo_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogInfo_resource_2eproto}, {}};

static void InitDefaultsscc_info_LogRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_LogRqst_default_instance_;
    new (ptr) ::resource::LogRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::LogRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LogRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LogRqst_resource_2eproto}, {
      &scc_info_LogInfo_resource_2eproto.base,}};

static void InitDefaultsscc_info_LogRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_LogRsp_default_instance_;
    new (ptr) ::resource::LogRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::LogRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_Organization_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Organization_default_instance_;
    new (ptr) ::resource::Organization();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Organization::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Organization_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Organization_resource_2eproto}, {}};

static void InitDefaultsscc_info_Peer_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Peer_default_instance_;
    new (ptr) ::resource::Peer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Peer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Peer_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Peer_resource_2eproto}, {}};

static void InitDefaultsscc_info_Permission_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Permission_default_instance_;
    new (ptr) ::resource::Permission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Permission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Permission_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Permission_resource_2eproto}, {}};

static void InitDefaultsscc_info_Permissions_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Permissions_default_instance_;
    new (ptr) ::resource::Permissions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Permissions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Permissions_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Permissions_resource_2eproto}, {
      &scc_info_Permission_resource_2eproto.base,}};

static void InitDefaultsscc_info_RefreshTokenRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RefreshTokenRqst_default_instance_;
    new (ptr) ::resource::RefreshTokenRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RefreshTokenRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RefreshTokenRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RefreshTokenRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RefreshTokenRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RefreshTokenRsp_default_instance_;
    new (ptr) ::resource::RefreshTokenRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RefreshTokenRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RefreshTokenRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RefreshTokenRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterAccountRqst_default_instance_;
    new (ptr) ::resource::RegisterAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterAccountRqst_resource_2eproto}, {
      &scc_info_Account_resource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterAccountRsp_default_instance_;
    new (ptr) ::resource::RegisterAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RegisterPeerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterPeerRqst_default_instance_;
    new (ptr) ::resource::RegisterPeerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterPeerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterPeerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterPeerRqst_resource_2eproto}, {
      &scc_info_Peer_resource_2eproto.base,}};

static void InitDefaultsscc_info_RegisterPeerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RegisterPeerRsp_default_instance_;
    new (ptr) ::resource::RegisterPeerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RegisterPeerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterPeerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterPeerRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAccountRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveAccountRoleRqst_default_instance_;
    new (ptr) ::resource::RemoveAccountRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveAccountRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveAccountRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveAccountRoleRsp_default_instance_;
    new (ptr) ::resource::RemoveAccountRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveAccountRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveAccountRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveAccountRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationActionRqst_default_instance_;
    new (ptr) ::resource::RemoveApplicationActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveApplicationActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveApplicationActionRsp_default_instance_;
    new (ptr) ::resource::RemoveApplicationActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveApplicationActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveApplicationActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveApplicationActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGroupMemberAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveGroupMemberAccountRqst_default_instance_;
    new (ptr) ::resource::RemoveGroupMemberAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveGroupMemberAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGroupMemberAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGroupMemberAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveGroupMemberAccountRsp_default_instance_;
    new (ptr) ::resource::RemoveGroupMemberAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveGroupMemberAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveGroupMemberAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationAccountRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationAccountRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationAccountRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationAccountRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationAccountRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationAccountRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationAccountRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationAccountRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationAccountRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationAccountRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationAccountRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationAccountRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationApplicationRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationApplicationRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationApplicationRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationApplicationRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationApplicationRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationApplicationRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationApplicationRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationApplicationRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationApplicationRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationApplicationRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationApplicationRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationApplicationRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationGroupRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationGroupRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationGroupRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationGroupRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationGroupRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationGroupRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationGroupRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationGroupRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationGroupRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationGroupRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationGroupRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationGroupRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationRoleRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationRoleRqst_default_instance_;
    new (ptr) ::resource::RemoveOrganizationRoleRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationRoleRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationRoleRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationRoleRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOrganizationRoleRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveOrganizationRoleRsp_default_instance_;
    new (ptr) ::resource::RemoveOrganizationRoleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveOrganizationRoleRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOrganizationRoleRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOrganizationRoleRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeerActionRqst_default_instance_;
    new (ptr) ::resource::RemovePeerActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeerActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemovePeerActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemovePeerActionRsp_default_instance_;
    new (ptr) ::resource::RemovePeerActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemovePeerActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePeerActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePeerActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRoleActionRqst_default_instance_;
    new (ptr) ::resource::RemoveRoleActionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRoleActionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_RemoveRoleActionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_RemoveRoleActionRsp_default_instance_;
    new (ptr) ::resource::RemoveRoleActionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::RemoveRoleActionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveRoleActionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveRoleActionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_ResetLogMethodRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ResetLogMethodRqst_default_instance_;
    new (ptr) ::resource::ResetLogMethodRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ResetLogMethodRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetLogMethodRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetLogMethodRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ResetLogMethodRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ResetLogMethodRsp_default_instance_;
    new (ptr) ::resource::ResetLogMethodRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ResetLogMethodRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetLogMethodRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetLogMethodRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_Role_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_Role_default_instance_;
    new (ptr) ::resource::Role();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::Role::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Role_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Role_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetActionResourcesPermissionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetActionResourcesPermissionRqst_default_instance_;
    new (ptr) ::resource::SetActionResourcesPermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetActionResourcesPermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetActionResourcesPermissionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetActionResourcesPermissionRqst_resource_2eproto}, {
      &scc_info_ActionResourceParameterPermission_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetActionResourcesPermissionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetActionResourcesPermissionRsp_default_instance_;
    new (ptr) ::resource::SetActionResourcesPermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetActionResourcesPermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetActionResourcesPermissionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetActionResourcesPermissionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetLogMethodRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetLogMethodRqst_default_instance_;
    new (ptr) ::resource::SetLogMethodRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetLogMethodRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLogMethodRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLogMethodRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetLogMethodRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetLogMethodRsp_default_instance_;
    new (ptr) ::resource::SetLogMethodRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetLogMethodRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLogMethodRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLogMethodRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetResourcePermissionRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetResourcePermissionRqst_default_instance_;
    new (ptr) ::resource::SetResourcePermissionRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetResourcePermissionRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResourcePermissionRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResourcePermissionRqst_resource_2eproto}, {
      &scc_info_Permission_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetResourcePermissionRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetResourcePermissionRsp_default_instance_;
    new (ptr) ::resource::SetResourcePermissionRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetResourcePermissionRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResourcePermissionRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetResourcePermissionRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SetResourcePermissionsRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetResourcePermissionsRqst_default_instance_;
    new (ptr) ::resource::SetResourcePermissionsRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetResourcePermissionsRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResourcePermissionsRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResourcePermissionsRqst_resource_2eproto}, {
      &scc_info_Permissions_resource_2eproto.base,}};

static void InitDefaultsscc_info_SetResourcePermissionsRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SetResourcePermissionsRsp_default_instance_;
    new (ptr) ::resource::SetResourcePermissionsRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SetResourcePermissionsRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResourcePermissionsRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetResourcePermissionsRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_SynchronizeLdapRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SynchronizeLdapRqst_default_instance_;
    new (ptr) ::resource::SynchronizeLdapRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SynchronizeLdapRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SynchronizeLdapRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SynchronizeLdapRqst_resource_2eproto}, {
      &scc_info_LdapSyncInfos_resource_2eproto.base,}};

static void InitDefaultsscc_info_SynchronizeLdapRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_SynchronizeLdapRsp_default_instance_;
    new (ptr) ::resource::SynchronizeLdapRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::SynchronizeLdapRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SynchronizeLdapRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SynchronizeLdapRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_UserSyncInfos_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_UserSyncInfos_default_instance_;
    new (ptr) ::resource::UserSyncInfos();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::UserSyncInfos::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserSyncInfos_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UserSyncInfos_resource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateAccessRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ValidateAccessRqst_default_instance_;
    new (ptr) ::resource::ValidateAccessRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ValidateAccessRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateAccessRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateAccessRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateAccessRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ValidateAccessRsp_default_instance_;
    new (ptr) ::resource::ValidateAccessRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ValidateAccessRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateAccessRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateAccessRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateTokenRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ValidateTokenRqst_default_instance_;
    new (ptr) ::resource::ValidateTokenRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ValidateTokenRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateTokenRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateTokenRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_ValidateTokenRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_ValidateTokenRsp_default_instance_;
    new (ptr) ::resource::ValidateTokenRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::ValidateTokenRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValidateTokenRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ValidateTokenRsp_resource_2eproto}, {}};

static void InitDefaultsscc_info_removeResourceOwnerRqst_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_removeResourceOwnerRqst_default_instance_;
    new (ptr) ::resource::removeResourceOwnerRqst();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::removeResourceOwnerRqst::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_removeResourceOwnerRqst_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_removeResourceOwnerRqst_resource_2eproto}, {}};

static void InitDefaultsscc_info_removeResourceOwnerRsp_resource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::resource::_removeResourceOwnerRsp_default_instance_;
    new (ptr) ::resource::removeResourceOwnerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::resource::removeResourceOwnerRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_removeResourceOwnerRsp_resource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_removeResourceOwnerRsp_resource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_resource_2eproto[130];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_resource_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_resource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_resource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UserSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::UserSyncInfos, base_),
  PROTOBUF_FIELD_OFFSET(::resource::UserSyncInfos, query_),
  PROTOBUF_FIELD_OFFSET(::resource::UserSyncInfos, id_),
  PROTOBUF_FIELD_OFFSET(::resource::UserSyncInfos, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GroupSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GroupSyncInfos, base_),
  PROTOBUF_FIELD_OFFSET(::resource::GroupSyncInfos, query_),
  PROTOBUF_FIELD_OFFSET(::resource::GroupSyncInfos, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, ldapseriveid_),
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, connectionid_),
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, refresh_),
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, usersyncinfos_),
  PROTOBUF_FIELD_OFFSET(::resource::LdapSyncInfos, groupsyncinfos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SynchronizeLdapRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SynchronizeLdapRqst, syncinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SynchronizeLdapRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SynchronizeLdapRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateTokenRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateTokenRqst, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateTokenRsp, clientid_),
  PROTOBUF_FIELD_OFFSET(::resource::ValidateTokenRsp, expired_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllActionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllActionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllActionsRsp, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Account, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, email_),
  PROTOBUF_FIELD_OFFSET(::resource::Account, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Role, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Role, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, account_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, password_),
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRqst, confirm_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AuthenticateRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AuthenticateRqst, name_),
  PROTOBUF_FIELD_OFFSET(::resource::AuthenticateRqst, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AuthenticateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AuthenticateRsp, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RefreshTokenRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RefreshTokenRqst, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RefreshTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RefreshTokenRsp, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, accountid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveAccountRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRqst, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllApplicationsInfoRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllApplicationsInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAllApplicationsInfoRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRqst, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AccountExistRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Group, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Group, members_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetGroupsRsp, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRqst, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, groupid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveGroupMemberAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, accounts_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, groups_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::Organization, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::CreateOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetOrganizationsRsp, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRqst, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteOrganizationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Peer, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::Peer, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RegisterPeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetPeersRsp, peers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRqst, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeletePeerRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, roleid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveRoleActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, applicationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveApplicationActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddPeerActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, domain_),
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemovePeerActionRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRqst, groupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationGroupRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRqst, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationRoleRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRqst, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationApplicationRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, organizationid_),
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRqst, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::RemoveOrganizationAccountRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Permission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Permission, name_),
  PROTOBUF_FIELD_OFFSET(::resource::Permission, accounts_),
  PROTOBUF_FIELD_OFFSET(::resource::Permission, roles_),
  PROTOBUF_FIELD_OFFSET(::resource::Permission, peers_),
  PROTOBUF_FIELD_OFFSET(::resource::Permission, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::Permissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::Permissions, allowed_),
  PROTOBUF_FIELD_OFFSET(::resource::Permissions, denied_),
  PROTOBUF_FIELD_OFFSET(::resource::Permissions, owners_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ActionResourceParameterPermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ActionResourceParameterPermission, index_),
  PROTOBUF_FIELD_OFFSET(::resource::ActionResourceParameterPermission, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetActionResourcesPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetActionResourcesPermissionRqst, action_),
  PROTOBUF_FIELD_OFFSET(::resource::SetActionResourcesPermissionRqst, resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetActionResourcesPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetActionResourcesPermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetActionResourcesPermissionRqst, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetActionResourcesPermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetActionResourcesPermissionRsp, resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionsRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionsRsp, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionsRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionsRsp, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionRqst, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetResourcePermissionRsp, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionRqst, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionsRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionsRqst, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetResourcePermissionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddResourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::AddResourceOwnerRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::AddResourceOwnerRqst, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::AddResourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::removeResourceOwnerRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::removeResourceOwnerRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::removeResourceOwnerRqst, owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::removeResourceOwnerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAllAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAllAccessRqst, subject_),
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAllAccessRqst, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteAllAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRqst, subject_),
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRqst, type_),
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRqst, path_),
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRqst, permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ValidateAccessRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRqst, subject_),
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRqst, type_),
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRqst, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetAccessesRsp, accesses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, date_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, type_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, application_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, userid_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, username_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, method_),
  PROTOBUF_FIELD_OFFSET(::resource::LogInfo, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::LogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::LogRqst, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::LogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::LogRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteLogRqst, log_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::DeleteLogRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetLogMethodRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetLogMethodRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::SetLogMethodRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::SetLogMethodRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ResetLogMethodRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ResetLogMethodRqst, method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ResetLogMethodRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ResetLogMethodRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogMethodsRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogMethodsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogMethodsRsp, methods_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogRqst, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::GetLogRsp, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllLogRqst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllLogRqst, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllLogRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::resource::ClearAllLogRsp, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::resource::UserSyncInfos)},
  { 9, -1, sizeof(::resource::GroupSyncInfos)},
  { 17, -1, sizeof(::resource::LdapSyncInfos)},
  { 27, -1, sizeof(::resource::SynchronizeLdapRqst)},
  { 33, -1, sizeof(::resource::SynchronizeLdapRsp)},
  { 39, -1, sizeof(::resource::ValidateTokenRqst)},
  { 45, -1, sizeof(::resource::ValidateTokenRsp)},
  { 52, -1, sizeof(::resource::GetAllActionsRqst)},
  { 57, -1, sizeof(::resource::GetAllActionsRsp)},
  { 63, -1, sizeof(::resource::Account)},
  { 72, -1, sizeof(::resource::Role)},
  { 80, -1, sizeof(::resource::RegisterAccountRqst)},
  { 88, -1, sizeof(::resource::RegisterAccountRsp)},
  { 94, -1, sizeof(::resource::DeleteAccountRqst)},
  { 100, -1, sizeof(::resource::DeleteAccountRsp)},
  { 106, -1, sizeof(::resource::AuthenticateRqst)},
  { 113, -1, sizeof(::resource::AuthenticateRsp)},
  { 119, -1, sizeof(::resource::RefreshTokenRqst)},
  { 125, -1, sizeof(::resource::RefreshTokenRsp)},
  { 131, -1, sizeof(::resource::AddAccountRoleRqst)},
  { 138, -1, sizeof(::resource::AddAccountRoleRsp)},
  { 144, -1, sizeof(::resource::RemoveAccountRoleRqst)},
  { 151, -1, sizeof(::resource::RemoveAccountRoleRsp)},
  { 157, -1, sizeof(::resource::CreateRoleRqst)},
  { 163, -1, sizeof(::resource::CreateRoleRsp)},
  { 169, -1, sizeof(::resource::DeleteRoleRqst)},
  { 175, -1, sizeof(::resource::DeleteRoleRsp)},
  { 181, -1, sizeof(::resource::DeleteApplicationRqst)},
  { 187, -1, sizeof(::resource::DeleteApplicationRsp)},
  { 193, -1, sizeof(::resource::GetAllApplicationsInfoRqst)},
  { 198, -1, sizeof(::resource::GetAllApplicationsInfoRsp)},
  { 204, -1, sizeof(::resource::AccountExistRqst)},
  { 210, -1, sizeof(::resource::AccountExistRsp)},
  { 216, -1, sizeof(::resource::Group)},
  { 224, -1, sizeof(::resource::CreateGroupRqst)},
  { 230, -1, sizeof(::resource::CreateGroupRsp)},
  { 236, -1, sizeof(::resource::GetGroupsRqst)},
  { 242, -1, sizeof(::resource::GetGroupsRsp)},
  { 248, -1, sizeof(::resource::DeleteGroupRqst)},
  { 254, -1, sizeof(::resource::DeleteGroupRsp)},
  { 260, -1, sizeof(::resource::AddGroupMemberAccountRqst)},
  { 267, -1, sizeof(::resource::AddGroupMemberAccountRsp)},
  { 273, -1, sizeof(::resource::RemoveGroupMemberAccountRqst)},
  { 280, -1, sizeof(::resource::RemoveGroupMemberAccountRsp)},
  { 286, -1, sizeof(::resource::Organization)},
  { 297, -1, sizeof(::resource::CreateOrganizationRqst)},
  { 303, -1, sizeof(::resource::CreateOrganizationRsp)},
  { 309, -1, sizeof(::resource::GetOrganizationsRqst)},
  { 315, -1, sizeof(::resource::GetOrganizationsRsp)},
  { 321, -1, sizeof(::resource::DeleteOrganizationRqst)},
  { 327, -1, sizeof(::resource::DeleteOrganizationRsp)},
  { 333, -1, sizeof(::resource::Peer)},
  { 340, -1, sizeof(::resource::RegisterPeerRqst)},
  { 346, -1, sizeof(::resource::RegisterPeerRsp)},
  { 352, -1, sizeof(::resource::GetPeersRqst)},
  { 358, -1, sizeof(::resource::GetPeersRsp)},
  { 364, -1, sizeof(::resource::DeletePeerRqst)},
  { 370, -1, sizeof(::resource::DeletePeerRsp)},
  { 376, -1, sizeof(::resource::AddRoleActionRqst)},
  { 383, -1, sizeof(::resource::AddRoleActionRsp)},
  { 389, -1, sizeof(::resource::RemoveRoleActionRqst)},
  { 396, -1, sizeof(::resource::RemoveRoleActionRsp)},
  { 402, -1, sizeof(::resource::AddApplicationActionRqst)},
  { 409, -1, sizeof(::resource::AddApplicationActionRsp)},
  { 415, -1, sizeof(::resource::RemoveApplicationActionRqst)},
  { 422, -1, sizeof(::resource::RemoveApplicationActionRsp)},
  { 428, -1, sizeof(::resource::AddPeerActionRqst)},
  { 435, -1, sizeof(::resource::AddPeerActionRsp)},
  { 441, -1, sizeof(::resource::RemovePeerActionRqst)},
  { 448, -1, sizeof(::resource::RemovePeerActionRsp)},
  { 454, -1, sizeof(::resource::AddOrganizationAccountRqst)},
  { 461, -1, sizeof(::resource::AddOrganizationAccountRsp)},
  { 467, -1, sizeof(::resource::AddOrganizationGroupRqst)},
  { 474, -1, sizeof(::resource::AddOrganizationGroupRsp)},
  { 480, -1, sizeof(::resource::AddOrganizationRoleRqst)},
  { 487, -1, sizeof(::resource::AddOrganizationRoleRsp)},
  { 493, -1, sizeof(::resource::AddOrganizationApplicationRqst)},
  { 500, -1, sizeof(::resource::AddOrganizationApplicationRsp)},
  { 506, -1, sizeof(::resource::RemoveOrganizationGroupRqst)},
  { 513, -1, sizeof(::resource::RemoveOrganizationGroupRsp)},
  { 519, -1, sizeof(::resource::RemoveOrganizationRoleRqst)},
  { 526, -1, sizeof(::resource::RemoveOrganizationRoleRsp)},
  { 532, -1, sizeof(::resource::RemoveOrganizationApplicationRqst)},
  { 539, -1, sizeof(::resource::RemoveOrganizationApplicationRsp)},
  { 545, -1, sizeof(::resource::RemoveOrganizationAccountRqst)},
  { 552, -1, sizeof(::resource::RemoveOrganizationAccountRsp)},
  { 558, -1, sizeof(::resource::Permission)},
  { 568, -1, sizeof(::resource::Permissions)},
  { 576, -1, sizeof(::resource::ActionResourceParameterPermission)},
  { 583, -1, sizeof(::resource::SetActionResourcesPermissionRqst)},
  { 590, -1, sizeof(::resource::SetActionResourcesPermissionRsp)},
  { 595, -1, sizeof(::resource::GetActionResourcesPermissionRqst)},
  { 601, -1, sizeof(::resource::GetActionResourcesPermissionRsp)},
  { 607, -1, sizeof(::resource::GetResourcePermissionsRqst)},
  { 613, -1, sizeof(::resource::GetResourcePermissionsRsp)},
  { 619, -1, sizeof(::resource::DeleteResourcePermissionsRqst)},
  { 625, -1, sizeof(::resource::DeleteResourcePermissionsRsp)},
  { 631, -1, sizeof(::resource::GetResourcePermissionRqst)},
  { 638, -1, sizeof(::resource::GetResourcePermissionRsp)},
  { 644, -1, sizeof(::resource::DeleteResourcePermissionRqst)},
  { 651, -1, sizeof(::resource::DeleteResourcePermissionRsp)},
  { 656, -1, sizeof(::resource::SetResourcePermissionsRqst)},
  { 663, -1, sizeof(::resource::SetResourcePermissionsRsp)},
  { 668, -1, sizeof(::resource::SetResourcePermissionRqst)},
  { 675, -1, sizeof(::resource::SetResourcePermissionRsp)},
  { 680, -1, sizeof(::resource::AddResourceOwnerRqst)},
  { 687, -1, sizeof(::resource::AddResourceOwnerRsp)},
  { 692, -1, sizeof(::resource::removeResourceOwnerRqst)},
  { 699, -1, sizeof(::resource::removeResourceOwnerRsp)},
  { 704, -1, sizeof(::resource::DeleteAllAccessRqst)},
  { 711, -1, sizeof(::resource::DeleteAllAccessRsp)},
  { 716, -1, sizeof(::resource::ValidateAccessRqst)},
  { 725, -1, sizeof(::resource::ValidateAccessRsp)},
  { 731, -1, sizeof(::resource::GetAccessesRqst)},
  { 739, -1, sizeof(::resource::GetAccessesRsp)},
  { 745, -1, sizeof(::resource::LogInfo)},
  { 757, -1, sizeof(::resource::LogRqst)},
  { 763, -1, sizeof(::resource::LogRsp)},
  { 769, -1, sizeof(::resource::DeleteLogRqst)},
  { 775, -1, sizeof(::resource::DeleteLogRsp)},
  { 781, -1, sizeof(::resource::SetLogMethodRqst)},
  { 787, -1, sizeof(::resource::SetLogMethodRsp)},
  { 793, -1, sizeof(::resource::ResetLogMethodRqst)},
  { 799, -1, sizeof(::resource::ResetLogMethodRsp)},
  { 805, -1, sizeof(::resource::GetLogMethodsRqst)},
  { 810, -1, sizeof(::resource::GetLogMethodsRsp)},
  { 816, -1, sizeof(::resource::GetLogRqst)},
  { 822, -1, sizeof(::resource::GetLogRsp)},
  { 828, -1, sizeof(::resource::ClearAllLogRqst)},
  { 834, -1, sizeof(::resource::ClearAllLogRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UserSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GroupSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_LdapSyncInfos_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SynchronizeLdapRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SynchronizeLdapRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ValidateTokenRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ValidateTokenRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAllActionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAllActionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Account_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Role_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AuthenticateRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AuthenticateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RefreshTokenRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RefreshTokenRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveAccountRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAllApplicationsInfoRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAllApplicationsInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AccountExistRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Group_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetGroupsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveGroupMemberAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Organization_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_CreateOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetOrganizationsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteOrganizationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Peer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RegisterPeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetPeersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeletePeerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveRoleActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveApplicationActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddPeerActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemovePeerActionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationGroupRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationRoleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationApplicationRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_RemoveOrganizationAccountRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Permission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_Permissions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ActionResourceParameterPermission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetActionResourcesPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetActionResourcesPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetActionResourcesPermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetActionResourcesPermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetResourcePermissionsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetResourcePermissionsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetResourcePermissionRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetResourcePermissionRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddResourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_AddResourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_removeResourceOwnerRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_removeResourceOwnerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAllAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteAllAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ValidateAccessRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ValidateAccessRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccessesRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetAccessesRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_LogInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_LogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_LogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_DeleteLogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetLogMethodRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_SetLogMethodRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ResetLogMethodRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ResetLogMethodRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetLogMethodsRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetLogMethodsRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_GetLogRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllLogRqst_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_ClearAllLogRsp_default_instance_),
};

const char descriptor_table_protodef_resource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016resource.proto\022\010resource\"G\n\rUserSyncIn"
  "fos\022\014\n\004base\030\001 \001(\t\022\r\n\005query\030\002 \001(\t\022\n\n\002id\030\003"
  " \001(\t\022\r\n\005email\030\004 \001(\t\"9\n\016GroupSyncInfos\022\014\n"
  "\004base\030\001 \001(\t\022\r\n\005query\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\"\256"
  "\001\n\rLdapSyncInfos\022\024\n\014ldapSeriveId\030\001 \001(\t\022\024"
  "\n\014connectionId\030\002 \001(\t\022\017\n\007refresh\030\003 \001(\005\022.\n"
  "\ruserSyncInfos\030\004 \001(\0132\027.resource.UserSync"
  "Infos\0220\n\016groupSyncInfos\030\005 \001(\0132\030.resource"
  ".GroupSyncInfos\"@\n\023SynchronizeLdapRqst\022)"
  "\n\010syncInfo\030\001 \001(\0132\027.resource.LdapSyncInfo"
  "s\"$\n\022SynchronizeLdapRsp\022\016\n\006result\030\001 \001(\010\""
  "\"\n\021ValidateTokenRqst\022\r\n\005token\030\001 \001(\t\"5\n\020V"
  "alidateTokenRsp\022\020\n\010clientId\030\001 \001(\t\022\017\n\007exp"
  "ired\030\002 \001(\003\"\023\n\021GetAllActionsRqst\"#\n\020GetAl"
  "lActionsRsp\022\017\n\007actions\030\001 \003(\t\"D\n\007Account\022"
  "\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005email\030\003 \001(\t"
  "\022\020\n\010password\030\004 \001(\t\"1\n\004Role\022\n\n\002id\030\001 \001(\t\022\014"
  "\n\004name\030\002 \001(\t\022\017\n\007actions\030\003 \003(\t\"e\n\023Registe"
  "rAccountRqst\022\"\n\007account\030\001 \001(\0132\021.resource"
  ".Account\022\020\n\010password\030\002 \001(\t\022\030\n\020confirm_pa"
  "ssword\030\003 \001(\t\"$\n\022RegisterAccountRsp\022\016\n\006re"
  "sult\030\001 \001(\t\"\037\n\021DeleteAccountRqst\022\n\n\002id\030\001 "
  "\001(\t\"\"\n\020DeleteAccountRsp\022\016\n\006result\030\001 \001(\t\""
  "2\n\020AuthenticateRqst\022\014\n\004name\030\001 \001(\t\022\020\n\010pas"
  "sword\030\002 \001(\t\" \n\017AuthenticateRsp\022\r\n\005token\030"
  "\001 \001(\t\"!\n\020RefreshTokenRqst\022\r\n\005token\030\001 \001(\t"
  "\" \n\017RefreshTokenRsp\022\r\n\005token\030\001 \001(\t\"7\n\022Ad"
  "dAccountRoleRqst\022\021\n\taccountId\030\001 \001(\t\022\016\n\006r"
  "oleId\030\002 \001(\t\"#\n\021AddAccountRoleRsp\022\016\n\006resu"
  "lt\030\001 \001(\010\":\n\025RemoveAccountRoleRqst\022\021\n\tacc"
  "ountId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"&\n\024RemoveAc"
  "countRoleRsp\022\016\n\006result\030\001 \001(\010\".\n\016CreateRo"
  "leRqst\022\034\n\004role\030\001 \001(\0132\016.resource.Role\"\037\n\r"
  "CreateRoleRsp\022\016\n\006result\030\001 \001(\010\" \n\016DeleteR"
  "oleRqst\022\016\n\006roleId\030\001 \001(\t\"\037\n\rDeleteRoleRsp"
  "\022\016\n\006result\030\001 \001(\010\".\n\025DeleteApplicationRqs"
  "t\022\025\n\rapplicationId\030\001 \001(\t\"&\n\024DeleteApplic"
  "ationRsp\022\016\n\006result\030\001 \001(\010\"\034\n\032GetAllApplic"
  "ationsInfoRqst\"+\n\031GetAllApplicationsInfo"
  "Rsp\022\016\n\006result\030\001 \001(\t\"\036\n\020AccountExistRqst\022"
  "\n\n\002id\030\001 \001(\t\"!\n\017AccountExistRsp\022\016\n\006result"
  "\030\001 \001(\010\"2\n\005Group\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001("
  "\t\022\017\n\007members\030\003 \003(\t\"1\n\017CreateGroupRqst\022\036\n"
  "\005group\030\001 \001(\0132\017.resource.Group\" \n\016CreateG"
  "roupRsp\022\016\n\006result\030\001 \001(\010\"\036\n\rGetGroupsRqst"
  "\022\r\n\005query\030\001 \001(\t\"/\n\014GetGroupsRsp\022\037\n\006group"
  "s\030\001 \003(\0132\017.resource.Group\" \n\017DeleteGroupR"
  "qst\022\r\n\005group\030\001 \001(\t\" \n\016DeleteGroupRsp\022\016\n\006"
  "result\030\001 \001(\010\"\?\n\031AddGroupMemberAccountRqs"
  "t\022\017\n\007groupId\030\001 \001(\t\022\021\n\taccountId\030\002 \001(\t\"*\n"
  "\030AddGroupMemberAccountRsp\022\016\n\006result\030\001 \001("
  "\010\"B\n\034RemoveGroupMemberAccountRqst\022\017\n\007gro"
  "upId\030\001 \001(\t\022\021\n\taccountId\030\002 \001(\t\"-\n\033RemoveG"
  "roupMemberAccountRsp\022\016\n\006result\030\001 \001(\010\"o\n\014"
  "Organization\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\020"
  "\n\010accounts\030\003 \003(\t\022\016\n\006groups\030\004 \003(\t\022\r\n\005role"
  "s\030\005 \003(\t\022\024\n\014applications\030\006 \003(\t\"F\n\026CreateO"
  "rganizationRqst\022,\n\014organization\030\001 \001(\0132\026."
  "resource.Organization\"\'\n\025CreateOrganizat"
  "ionRsp\022\016\n\006result\030\001 \001(\010\"%\n\024GetOrganizatio"
  "nsRqst\022\r\n\005query\030\001 \001(\t\"D\n\023GetOrganization"
  "sRsp\022-\n\rorganizations\030\001 \003(\0132\026.resource.O"
  "rganization\".\n\026DeleteOrganizationRqst\022\024\n"
  "\014organization\030\001 \001(\t\"\'\n\025DeleteOrganizatio"
  "nRsp\022\016\n\006result\030\001 \001(\010\"\'\n\004Peer\022\016\n\006domain\030\001"
  " \001(\t\022\017\n\007actions\030\002 \003(\t\"0\n\020RegisterPeerRqs"
  "t\022\034\n\004peer\030\001 \001(\0132\016.resource.Peer\"!\n\017Regis"
  "terPeerRsp\022\016\n\006result\030\001 \001(\010\"\035\n\014GetPeersRq"
  "st\022\r\n\005query\030\001 \001(\t\",\n\013GetPeersRsp\022\035\n\005peer"
  "s\030\001 \003(\0132\016.resource.Peer\".\n\016DeletePeerRqs"
  "t\022\034\n\004peer\030\001 \001(\0132\016.resource.Peer\"\037\n\rDelet"
  "ePeerRsp\022\016\n\006result\030\001 \001(\010\"3\n\021AddRoleActio"
  "nRqst\022\016\n\006roleId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\"\"\n"
  "\020AddRoleActionRsp\022\016\n\006result\030\001 \001(\010\"6\n\024Rem"
  "oveRoleActionRqst\022\016\n\006roleId\030\001 \001(\t\022\016\n\006act"
  "ion\030\002 \001(\t\"%\n\023RemoveRoleActionRsp\022\016\n\006resu"
  "lt\030\001 \001(\010\"A\n\030AddApplicationActionRqst\022\025\n\r"
  "applicationId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\")\n\027A"
  "ddApplicationActionRsp\022\016\n\006result\030\001 \001(\010\"D"
  "\n\033RemoveApplicationActionRqst\022\025\n\rapplica"
  "tionId\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\",\n\032RemoveAp"
  "plicationActionRsp\022\016\n\006result\030\001 \001(\010\"3\n\021Ad"
  "dPeerActionRqst\022\016\n\006domain\030\001 \001(\t\022\016\n\006actio"
  "n\030\002 \001(\t\"\"\n\020AddPeerActionRsp\022\016\n\006result\030\001 "
  "\001(\010\"6\n\024RemovePeerActionRqst\022\016\n\006domain\030\001 "
  "\001(\t\022\016\n\006action\030\002 \001(\t\"%\n\023RemovePeerActionR"
  "sp\022\016\n\006result\030\001 \001(\010\"G\n\032AddOrganizationAcc"
  "ountRqst\022\026\n\016organizationId\030\001 \001(\t\022\021\n\tacco"
  "untId\030\002 \001(\t\"+\n\031AddOrganizationAccountRsp"
  "\022\016\n\006result\030\001 \001(\010\"C\n\030AddOrganizationGroup"
  "Rqst\022\026\n\016organizationId\030\001 \001(\t\022\017\n\007groupId\030"
  "\002 \001(\t\")\n\027AddOrganizationGroupRsp\022\016\n\006resu"
  "lt\030\001 \001(\010\"A\n\027AddOrganizationRoleRqst\022\026\n\016o"
  "rganizationId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"(\n\026A"
  "ddOrganizationRoleRsp\022\016\n\006result\030\001 \001(\010\"O\n"
  "\036AddOrganizationApplicationRqst\022\026\n\016organ"
  "izationId\030\001 \001(\t\022\025\n\rapplicationId\030\002 \001(\t\"/"
  "\n\035AddOrganizationApplicationRsp\022\016\n\006resul"
  "t\030\001 \001(\010\"F\n\033RemoveOrganizationGroupRqst\022\026"
  "\n\016organizationId\030\001 \001(\t\022\017\n\007groupId\030\002 \001(\t\""
  ",\n\032RemoveOrganizationGroupRsp\022\016\n\006result\030"
  "\001 \001(\010\"D\n\032RemoveOrganizationRoleRqst\022\026\n\016o"
  "rganizationId\030\001 \001(\t\022\016\n\006roleId\030\002 \001(\t\"+\n\031R"
  "emoveOrganizationRoleRsp\022\016\n\006result\030\001 \001(\010"
  "\"R\n!RemoveOrganizationApplicationRqst\022\026\n"
  "\016organizationId\030\001 \001(\t\022\025\n\rapplicationId\030\002"
  " \001(\t\"2\n RemoveOrganizationApplicationRsp"
  "\022\016\n\006result\030\001 \001(\010\"J\n\035RemoveOrganizationAc"
  "countRqst\022\026\n\016organizationId\030\001 \001(\t\022\021\n\tacc"
  "ountId\030\002 \001(\t\".\n\034RemoveOrganizationAccoun"
  "tRsp\022\016\n\006result\030\001 \001(\010\"`\n\nPermission\022\014\n\004na"
  "me\030\001 \001(\t\022\020\n\010accounts\030\002 \003(\t\022\r\n\005roles\030\003 \003("
  "\t\022\r\n\005peers\030\004 \003(\t\022\024\n\014organization\030\005 \003(\t\"\200"
  "\001\n\013Permissions\022%\n\007allowed\030\001 \003(\0132\024.resour"
  "ce.Permission\022$\n\006denied\030\002 \003(\0132\024.resource"
  ".Permission\022$\n\006owners\030\003 \001(\0132\024.resource.P"
  "ermission\"F\n!ActionResourceParameterPerm"
  "ission\022\r\n\005index\030\001 \001(\005\022\022\n\npermission\030\002 \001("
  "\t\"r\n SetActionResourcesPermissionRqst\022\016\n"
  "\006action\030\001 \001(\t\022>\n\tresources\030\002 \003(\0132+.resou"
  "rce.ActionResourceParameterPermission\"!\n"
  "\037SetActionResourcesPermissionRsp\"2\n GetA"
  "ctionResourcesPermissionRqst\022\016\n\006action\030\001"
  " \001(\t\"a\n\037GetActionResourcesPermissionRsp\022"
  ">\n\tresources\030\001 \003(\0132+.resource.ActionReso"
  "urceParameterPermission\"*\n\032GetResourcePe"
  "rmissionsRqst\022\014\n\004path\030\001 \001(\t\"G\n\031GetResour"
  "cePermissionsRsp\022*\n\013permissions\030\001 \001(\0132\025."
  "resource.Permissions\"-\n\035DeleteResourcePe"
  "rmissionsRqst\022\014\n\004path\030\001 \001(\t\"J\n\034DeleteRes"
  "ourcePermissionsRsp\022*\n\013permissions\030\001 \001(\013"
  "2\025.resource.Permissions\"7\n\031GetResourcePe"
  "rmissionRqst\022\014\n\004path\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
  "\"D\n\030GetResourcePermissionRsp\022(\n\npermissi"
  "on\030\001 \001(\0132\024.resource.Permission\":\n\034Delete"
  "ResourcePermissionRqst\022\014\n\004path\030\001 \001(\t\022\014\n\004"
  "name\030\002 \001(\t\"\035\n\033DeleteResourcePermissionRs"
  "p\"V\n\032SetResourcePermissionsRqst\022\014\n\004path\030"
  "\001 \001(\t\022*\n\013permissions\030\002 \001(\0132\025.resource.Pe"
  "rmissions\"\033\n\031SetResourcePermissionsRsp\"S"
  "\n\031SetResourcePermissionRqst\022\014\n\004path\030\001 \001("
  "\t\022(\n\npermission\030\002 \001(\0132\024.resource.Permiss"
  "ion\"\032\n\030SetResourcePermissionRsp\"3\n\024AddRe"
  "sourceOwnerRqst\022\014\n\004path\030\001 \001(\t\022\r\n\005owner\030\002"
  " \001(\t\"\025\n\023AddResourceOwnerRsp\"6\n\027removeRes"
  "ourceOwnerRqst\022\014\n\004path\030\001 \001(\t\022\r\n\005owner\030\002 "
  "\001(\t\"\030\n\026removeResourceOwnerRsp\"K\n\023DeleteA"
  "llAccessRqst\022\017\n\007subject\030\001 \001(\t\022#\n\004type\030\002 "
  "\001(\0162\025.resource.SubjectType\"\024\n\022DeleteAllA"
  "ccessRsp\"l\n\022ValidateAccessRqst\022\017\n\007subjec"
  "t\030\001 \001(\t\022#\n\004type\030\002 \001(\0162\025.resource.Subject"
  "Type\022\014\n\004path\030\003 \001(\t\022\022\n\npermission\030\004 \001(\t\"#"
  "\n\021ValidateAccessRsp\022\016\n\006result\030\001 \001(\010\"U\n\017G"
  "etAccessesRqst\022\017\n\007subject\030\001 \001(\t\022#\n\004type\030"
  "\002 \001(\0162\025.resource.SubjectType\022\014\n\004path\030\003 \001"
  "(\t\"\"\n\016GetAccessesRsp\022\020\n\010accesses\030\001 \003(\t\"\220"
  "\001\n\007LogInfo\022\014\n\004date\030\001 \001(\003\022\037\n\004type\030\002 \001(\0162\021"
  ".resource.LogType\022\023\n\013application\030\003 \001(\t\022\016"
  "\n\006userId\030\004 \001(\t\022\020\n\010userName\030\005 \001(\t\022\016\n\006meth"
  "od\030\006 \001(\t\022\017\n\007message\030\007 \001(\t\"*\n\007LogRqst\022\037\n\004"
  "info\030\001 \001(\0132\021.resource.LogInfo\"\030\n\006LogRsp\022"
  "\016\n\006result\030\001 \001(\010\"/\n\rDeleteLogRqst\022\036\n\003log\030"
  "\001 \001(\0132\021.resource.LogInfo\"\036\n\014DeleteLogRsp"
  "\022\016\n\006result\030\001 \001(\010\"\"\n\020SetLogMethodRqst\022\016\n\006"
  "method\030\001 \001(\t\"!\n\017SetLogMethodRsp\022\016\n\006resul"
  "t\030\001 \001(\010\"$\n\022ResetLogMethodRqst\022\016\n\006method\030"
  "\001 \001(\t\"#\n\021ResetLogMethodRsp\022\016\n\006result\030\001 \001"
  "(\010\"\023\n\021GetLogMethodsRqst\"#\n\020GetLogMethods"
  "Rsp\022\017\n\007methods\030\001 \003(\t\"\033\n\nGetLogRqst\022\r\n\005qu"
  "ery\030\001 \001(\t\",\n\tGetLogRsp\022\037\n\004info\030\001 \003(\0132\021.r"
  "esource.LogInfo\"2\n\017ClearAllLogRqst\022\037\n\004ty"
  "pe\030\001 \001(\0162\021.resource.LogType\" \n\016ClearAllL"
  "ogRsp\022\016\n\006result\030\001 \001(\010*K\n\013SubjectType\022\013\n\007"
  "ACCOUNT\020\000\022\010\n\004ROLE\020\001\022\010\n\004PEER\020\002\022\t\n\005GROUP\020\003"
  "\022\020\n\014ORGANIZATION\020\004*.\n\007LogType\022\020\n\014INFO_ME"
  "SSAGE\020\000\022\021\n\rERROR_MESSAGE\020\0012\245\031\n\017ResourceS"
  "ervice\022H\n\rGetAllActions\022\033.resource.GetAl"
  "lActionsRqst\032\032.resource.GetAllActionsRsp"
  "\022H\n\rValidateToken\022\033.resource.ValidateTok"
  "enRqst\032\032.resource.ValidateTokenRsp\022E\n\014Re"
  "freshToken\022\032.resource.RefreshTokenRqst\032\031"
  ".resource.RefreshTokenRsp\022E\n\014Authenticat"
  "e\022\032.resource.AuthenticateRqst\032\031.resource"
  ".AuthenticateRsp\022N\n\017SynchronizeLdap\022\035.re"
  "source.SynchronizeLdapRqst\032\034.resource.Sy"
  "nchronizeLdapRsp\022W\n\022CreateOrganization\022 "
  ".resource.CreateOrganizationRqst\032\037.resou"
  "rce.CreateOrganizationRsp\022S\n\020GetOrganiza"
  "tions\022\036.resource.GetOrganizationsRqst\032\035."
  "resource.GetOrganizationsRsp0\001\022W\n\022Delete"
  "Organization\022 .resource.DeleteOrganizati"
  "onRqst\032\037.resource.DeleteOrganizationRsp\022"
  "c\n\026AddOrganizationAccount\022$.resource.Add"
  "OrganizationAccountRqst\032#.resource.AddOr"
  "ganizationAccountRsp\022]\n\024AddOrganizationG"
  "roup\022\".resource.AddOrganizationGroupRqst"
  "\032!.resource.AddOrganizationGroupRsp\022Z\n\023A"
  "ddOrganizationRole\022!.resource.AddOrganiz"
  "ationRoleRqst\032 .resource.AddOrganization"
  "RoleRsp\022o\n\032AddOrganizationApplication\022(."
  "resource.AddOrganizationApplicationRqst\032"
  "\'.resource.AddOrganizationApplicationRsp"
  "\022l\n\031RemoveOrganizationAccount\022\'.resource"
  ".RemoveOrganizationAccountRqst\032&.resourc"
  "e.RemoveOrganizationAccountRsp\022f\n\027Remove"
  "OrganizationGroup\022%.resource.RemoveOrgan"
  "izationGroupRqst\032$.resource.RemoveOrgani"
  "zationGroupRsp\022c\n\026RemoveOrganizationRole"
  "\022$.resource.RemoveOrganizationRoleRqst\032#"
  ".resource.RemoveOrganizationRoleRsp\022x\n\035R"
  "emoveOrganizationApplication\022+.resource."
  "RemoveOrganizationApplicationRqst\032*.reso"
  "urce.RemoveOrganizationApplicationRsp\022B\n"
  "\013CreateGroup\022\031.resource.CreateGroupRqst\032"
  "\030.resource.CreateGroupRsp\022>\n\tGetGroups\022\027"
  ".resource.GetGroupsRqst\032\026.resource.GetGr"
  "oupsRsp0\001\022B\n\013DeleteGroup\022\031.resource.Dele"
  "teGroupRqst\032\030.resource.DeleteGroupRsp\022`\n"
  "\025AddGroupMemberAccount\022#.resource.AddGro"
  "upMemberAccountRqst\032\".resource.AddGroupM"
  "emberAccountRsp\022i\n\030RemoveGroupMemberAcco"
  "unt\022&.resource.RemoveGroupMemberAccountR"
  "qst\032%.resource.RemoveGroupMemberAccountR"
  "sp\022N\n\017RegisterAccount\022\035.resource.Registe"
  "rAccountRqst\032\034.resource.RegisterAccountR"
  "sp\022H\n\rDeleteAccount\022\033.resource.DeleteAcc"
  "ountRqst\032\032.resource.DeleteAccountRsp\022K\n\016"
  "AddAccountRole\022\034.resource.AddAccountRole"
  "Rqst\032\033.resource.AddAccountRoleRsp\022T\n\021Rem"
  "oveAccountRole\022\037.resource.RemoveAccountR"
  "oleRqst\032\036.resource.RemoveAccountRoleRsp\022"
  "\?\n\nCreateRole\022\030.resource.CreateRoleRqst\032"
  "\027.resource.CreateRoleRsp\022\?\n\nDeleteRole\022\030"
  ".resource.DeleteRoleRqst\032\027.resource.Dele"
  "teRoleRsp\022H\n\rAddRoleAction\022\033.resource.Ad"
  "dRoleActionRqst\032\032.resource.AddRoleAction"
  "Rsp\022Q\n\020RemoveRoleAction\022\036.resource.Remov"
  "eRoleActionRqst\032\035.resource.RemoveRoleAct"
  "ionRsp\022c\n\026GetAllApplicationsInfo\022$.resou"
  "rce.GetAllApplicationsInfoRqst\032#.resourc"
  "e.GetAllApplicationsInfoRsp\022T\n\021DeleteApp"
  "lication\022\037.resource.DeleteApplicationRqs"
  "t\032\036.resource.DeleteApplicationRsp\022]\n\024Add"
  "ApplicationAction\022\".resource.AddApplicat"
  "ionActionRqst\032!.resource.AddApplicationA"
  "ctionRsp\022f\n\027RemoveApplicationAction\022%.re"
  "source.RemoveApplicationActionRqst\032$.res"
  "ource.RemoveApplicationActionRsp\022E\n\014Regi"
  "sterPeer\022\032.resource.RegisterPeerRqst\032\031.r"
  "esource.RegisterPeerRsp\022;\n\010GetPeers\022\026.re"
  "source.GetPeersRqst\032\025.resource.GetPeersR"
  "sp0\001\022\?\n\nDeletePeer\022\030.resource.DeletePeer"
  "Rqst\032\027.resource.DeletePeerRsp\022H\n\rAddPeer"
  "Action\022\033.resource.AddPeerActionRqst\032\032.re"
  "source.AddPeerActionRsp\022Q\n\020RemovePeerAct"
  "ion\022\036.resource.RemovePeerActionRqst\032\035.re"
  "source.RemovePeerActionRsp2\357\t\n\013RbacServi"
  "ce\022u\n\034SetActionResourcesPermission\022*.res"
  "ource.SetActionResourcesPermissionRqst\032)"
  ".resource.SetActionResourcesPermissionRs"
  "p\022u\n\034GetActionResourcesPermission\022*.reso"
  "urce.GetActionResourcesPermissionRqst\032)."
  "resource.GetActionResourcesPermissionRsp"
  "\022d\n\026SetResourcePermissions\022$.resource.Se"
  "tResourcePermissionsRqst\032$.resource.SetR"
  "esourcePermissionsRqst\022m\n\031DeleteResource"
  "Permissions\022\'.resource.DeleteResourcePer"
  "missionsRqst\032\'.resource.DeleteResourcePe"
  "rmissionsRqst\022j\n\030DeleteResourcePermissio"
  "n\022&.resource.DeleteResourcePermissionRqs"
  "t\032&.resource.DeleteResourcePermissionRqs"
  "t\022`\n\025SetResourcePermission\022#.resource.Se"
  "tResourcePermissionRqst\032\".resource.SetRe"
  "sourcePermissionRsp\022`\n\025GetResourcePermis"
  "sion\022#.resource.GetResourcePermissionRqs"
  "t\032\".resource.GetResourcePermissionRsp\022c\n"
  "\026GetResourcePermissions\022$.resource.GetRe"
  "sourcePermissionsRqst\032#.resource.GetReso"
  "urcePermissionsRsp\022Q\n\020AddResourceOwner\022\036"
  ".resource.AddResourceOwnerRqst\032\035.resourc"
  "e.AddResourceOwnerRsp\022T\n\023RemoveResourceO"
  "wner\022\036.resource.AddResourceOwnerRqst\032\035.r"
  "esource.AddResourceOwnerRsp\022N\n\017DeleteAll"
  "Access\022\035.resource.DeleteAllAccessRqst\032\034."
  "resource.DeleteAllAccessRsp\022K\n\016ValidateA"
  "ccess\022\034.resource.ValidateAccessRqst\032\033.re"
  "source.ValidateAccessRsp\022B\n\013GetAccesses\022"
  "\031.resource.GetAccessesRqst\032\030.resource.Ge"
  "tAccessesRsp2\361\001\n\nLogService\022*\n\003Log\022\021.res"
  "ource.LogRqst\032\020.resource.LogRsp\0225\n\006GetLo"
  "g\022\024.resource.GetLogRqst\032\023.resource.GetLo"
  "gRsp0\001\022<\n\tDeleteLog\022\027.resource.DeleteLog"
  "Rqst\032\026.resource.DeleteLogRsp\022B\n\013ClearAll"
  "Log\022\031.resource.ClearAllLogRqst\032\030.resourc"
  "e.ClearAllLogRspB\025Z\023resource/resourcepbb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_resource_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_resource_2eproto_sccs[130] = {
  &scc_info_Account_resource_2eproto.base,
  &scc_info_AccountExistRqst_resource_2eproto.base,
  &scc_info_AccountExistRsp_resource_2eproto.base,
  &scc_info_ActionResourceParameterPermission_resource_2eproto.base,
  &scc_info_AddAccountRoleRqst_resource_2eproto.base,
  &scc_info_AddAccountRoleRsp_resource_2eproto.base,
  &scc_info_AddApplicationActionRqst_resource_2eproto.base,
  &scc_info_AddApplicationActionRsp_resource_2eproto.base,
  &scc_info_AddGroupMemberAccountRqst_resource_2eproto.base,
  &scc_info_AddGroupMemberAccountRsp_resource_2eproto.base,
  &scc_info_AddOrganizationAccountRqst_resource_2eproto.base,
  &scc_info_AddOrganizationAccountRsp_resource_2eproto.base,
  &scc_info_AddOrganizationApplicationRqst_resource_2eproto.base,
  &scc_info_AddOrganizationApplicationRsp_resource_2eproto.base,
  &scc_info_AddOrganizationGroupRqst_resource_2eproto.base,
  &scc_info_AddOrganizationGroupRsp_resource_2eproto.base,
  &scc_info_AddOrganizationRoleRqst_resource_2eproto.base,
  &scc_info_AddOrganizationRoleRsp_resource_2eproto.base,
  &scc_info_AddPeerActionRqst_resource_2eproto.base,
  &scc_info_AddPeerActionRsp_resource_2eproto.base,
  &scc_info_AddResourceOwnerRqst_resource_2eproto.base,
  &scc_info_AddResourceOwnerRsp_resource_2eproto.base,
  &scc_info_AddRoleActionRqst_resource_2eproto.base,
  &scc_info_AddRoleActionRsp_resource_2eproto.base,
  &scc_info_AuthenticateRqst_resource_2eproto.base,
  &scc_info_AuthenticateRsp_resource_2eproto.base,
  &scc_info_ClearAllLogRqst_resource_2eproto.base,
  &scc_info_ClearAllLogRsp_resource_2eproto.base,
  &scc_info_CreateGroupRqst_resource_2eproto.base,
  &scc_info_CreateGroupRsp_resource_2eproto.base,
  &scc_info_CreateOrganizationRqst_resource_2eproto.base,
  &scc_info_CreateOrganizationRsp_resource_2eproto.base,
  &scc_info_CreateRoleRqst_resource_2eproto.base,
  &scc_info_CreateRoleRsp_resource_2eproto.base,
  &scc_info_DeleteAccountRqst_resource_2eproto.base,
  &scc_info_DeleteAccountRsp_resource_2eproto.base,
  &scc_info_DeleteAllAccessRqst_resource_2eproto.base,
  &scc_info_DeleteAllAccessRsp_resource_2eproto.base,
  &scc_info_DeleteApplicationRqst_resource_2eproto.base,
  &scc_info_DeleteApplicationRsp_resource_2eproto.base,
  &scc_info_DeleteGroupRqst_resource_2eproto.base,
  &scc_info_DeleteGroupRsp_resource_2eproto.base,
  &scc_info_DeleteLogRqst_resource_2eproto.base,
  &scc_info_DeleteLogRsp_resource_2eproto.base,
  &scc_info_DeleteOrganizationRqst_resource_2eproto.base,
  &scc_info_DeleteOrganizationRsp_resource_2eproto.base,
  &scc_info_DeletePeerRqst_resource_2eproto.base,
  &scc_info_DeletePeerRsp_resource_2eproto.base,
  &scc_info_DeleteResourcePermissionRqst_resource_2eproto.base,
  &scc_info_DeleteResourcePermissionRsp_resource_2eproto.base,
  &scc_info_DeleteResourcePermissionsRqst_resource_2eproto.base,
  &scc_info_DeleteResourcePermissionsRsp_resource_2eproto.base,
  &scc_info_DeleteRoleRqst_resource_2eproto.base,
  &scc_info_DeleteRoleRsp_resource_2eproto.base,
  &scc_info_GetAccessesRqst_resource_2eproto.base,
  &scc_info_GetAccessesRsp_resource_2eproto.base,
  &scc_info_GetActionResourcesPermissionRqst_resource_2eproto.base,
  &scc_info_GetActionResourcesPermissionRsp_resource_2eproto.base,
  &scc_info_GetAllActionsRqst_resource_2eproto.base,
  &scc_info_GetAllActionsRsp_resource_2eproto.base,
  &scc_info_GetAllApplicationsInfoRqst_resource_2eproto.base,
  &scc_info_GetAllApplicationsInfoRsp_resource_2eproto.base,
  &scc_info_GetGroupsRqst_resource_2eproto.base,
  &scc_info_GetGroupsRsp_resource_2eproto.base,
  &scc_info_GetLogMethodsRqst_resource_2eproto.base,
  &scc_info_GetLogMethodsRsp_resource_2eproto.base,
  &scc_info_GetLogRqst_resource_2eproto.base,
  &scc_info_GetLogRsp_resource_2eproto.base,
  &scc_info_GetOrganizationsRqst_resource_2eproto.base,
  &scc_info_GetOrganizationsRsp_resource_2eproto.base,
  &scc_info_GetPeersRqst_resource_2eproto.base,
  &scc_info_GetPeersRsp_resource_2eproto.base,
  &scc_info_GetResourcePermissionRqst_resource_2eproto.base,
  &scc_info_GetResourcePermissionRsp_resource_2eproto.base,
  &scc_info_GetResourcePermissionsRqst_resource_2eproto.base,
  &scc_info_GetResourcePermissionsRsp_resource_2eproto.base,
  &scc_info_Group_resource_2eproto.base,
  &scc_info_GroupSyncInfos_resource_2eproto.base,
  &scc_info_LdapSyncInfos_resource_2eproto.base,
  &scc_info_LogInfo_resource_2eproto.base,
  &scc_info_LogRqst_resource_2eproto.base,
  &scc_info_LogRsp_resource_2eproto.base,
  &scc_info_Organization_resource_2eproto.base,
  &scc_info_Peer_resource_2eproto.base,
  &scc_info_Permission_resource_2eproto.base,
  &scc_info_Permissions_resource_2eproto.base,
  &scc_info_RefreshTokenRqst_resource_2eproto.base,
  &scc_info_RefreshTokenRsp_resource_2eproto.base,
  &scc_info_RegisterAccountRqst_resource_2eproto.base,
  &scc_info_RegisterAccountRsp_resource_2eproto.base,
  &scc_info_RegisterPeerRqst_resource_2eproto.base,
  &scc_info_RegisterPeerRsp_resource_2eproto.base,
  &scc_info_RemoveAccountRoleRqst_resource_2eproto.base,
  &scc_info_RemoveAccountRoleRsp_resource_2eproto.base,
  &scc_info_RemoveApplicationActionRqst_resource_2eproto.base,
  &scc_info_RemoveApplicationActionRsp_resource_2eproto.base,
  &scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base,
  &scc_info_RemoveGroupMemberAccountRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationAccountRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationApplicationRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationGroupRsp_resource_2eproto.base,
  &scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base,
  &scc_info_RemoveOrganizationRoleRsp_resource_2eproto.base,
  &scc_info_RemovePeerActionRqst_resource_2eproto.base,
  &scc_info_RemovePeerActionRsp_resource_2eproto.base,
  &scc_info_RemoveRoleActionRqst_resource_2eproto.base,
  &scc_info_RemoveRoleActionRsp_resource_2eproto.base,
  &scc_info_ResetLogMethodRqst_resource_2eproto.base,
  &scc_info_ResetLogMethodRsp_resource_2eproto.base,
  &scc_info_Role_resource_2eproto.base,
  &scc_info_SetActionResourcesPermissionRqst_resource_2eproto.base,
  &scc_info_SetActionResourcesPermissionRsp_resource_2eproto.base,
  &scc_info_SetLogMethodRqst_resource_2eproto.base,
  &scc_info_SetLogMethodRsp_resource_2eproto.base,
  &scc_info_SetResourcePermissionRqst_resource_2eproto.base,
  &scc_info_SetResourcePermissionRsp_resource_2eproto.base,
  &scc_info_SetResourcePermissionsRqst_resource_2eproto.base,
  &scc_info_SetResourcePermissionsRsp_resource_2eproto.base,
  &scc_info_SynchronizeLdapRqst_resource_2eproto.base,
  &scc_info_SynchronizeLdapRsp_resource_2eproto.base,
  &scc_info_UserSyncInfos_resource_2eproto.base,
  &scc_info_ValidateAccessRqst_resource_2eproto.base,
  &scc_info_ValidateAccessRsp_resource_2eproto.base,
  &scc_info_ValidateTokenRqst_resource_2eproto.base,
  &scc_info_ValidateTokenRsp_resource_2eproto.base,
  &scc_info_removeResourceOwnerRqst_resource_2eproto.base,
  &scc_info_removeResourceOwnerRsp_resource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_resource_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_resource_2eproto = {
  false, false, descriptor_table_protodef_resource_2eproto, "resource.proto", 11807,
  &descriptor_table_resource_2eproto_once, descriptor_table_resource_2eproto_sccs, descriptor_table_resource_2eproto_deps, 130, 0,
  schemas, file_default_instances, TableStruct_resource_2eproto::offsets,
  file_level_metadata_resource_2eproto, 130, file_level_enum_descriptors_resource_2eproto, file_level_service_descriptors_resource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_resource_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_resource_2eproto)), true);
namespace resource {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[0];
}
bool SubjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_resource_2eproto);
  return file_level_enum_descriptors_resource_2eproto[1];
}
bool LogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UserSyncInfos::InitAsDefaultInstance() {
}
class UserSyncInfos::_Internal {
 public:
};

UserSyncInfos::UserSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.UserSyncInfos)
}
UserSyncInfos::UserSyncInfos(const UserSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base().empty()) {
    base_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.UserSyncInfos)
}

void UserSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserSyncInfos_resource_2eproto.base);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UserSyncInfos::~UserSyncInfos() {
  // @@protoc_insertion_point(destructor:resource.UserSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UserSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserSyncInfos::ArenaDtor(void* object) {
  UserSyncInfos* _this = reinterpret_cast< UserSyncInfos* >(object);
  (void)_this;
}
void UserSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserSyncInfos& UserSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserSyncInfos_resource_2eproto.base);
  return *internal_default_instance();
}


void UserSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UserSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_base();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UserSyncInfos.base"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UserSyncInfos.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UserSyncInfos.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UserSyncInfos.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UserSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base().data(), static_cast<int>(this->_internal_base().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UserSyncInfos.base");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UserSyncInfos.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UserSyncInfos.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string email = 4;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UserSyncInfos.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UserSyncInfos)
  return target;
}

size_t UserSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UserSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string email = 4;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.UserSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.UserSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.UserSyncInfos)
    MergeFrom(*source);
  }
}

void UserSyncInfos::MergeFrom(const UserSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UserSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base().size() > 0) {
    _internal_set_base(from._internal_base());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
}

void UserSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.UserSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSyncInfos::CopyFrom(const UserSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UserSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSyncInfos::IsInitialized() const {
  return true;
}

void UserSyncInfos::InternalSwap(UserSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  base_.Swap(&other->base_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GroupSyncInfos::InitAsDefaultInstance() {
}
class GroupSyncInfos::_Internal {
 public:
};

GroupSyncInfos::GroupSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GroupSyncInfos)
}
GroupSyncInfos::GroupSyncInfos(const GroupSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base().empty()) {
    base_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GroupSyncInfos)
}

void GroupSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GroupSyncInfos_resource_2eproto.base);
  base_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GroupSyncInfos::~GroupSyncInfos() {
  // @@protoc_insertion_point(destructor:resource.GroupSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GroupSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GroupSyncInfos::ArenaDtor(void* object) {
  GroupSyncInfos* _this = reinterpret_cast< GroupSyncInfos* >(object);
  (void)_this;
}
void GroupSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GroupSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupSyncInfos& GroupSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GroupSyncInfos_resource_2eproto.base);
  return *internal_default_instance();
}


void GroupSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GroupSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_base();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GroupSyncInfos.base"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GroupSyncInfos.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GroupSyncInfos.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GroupSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GroupSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base().data(), static_cast<int>(this->_internal_base().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GroupSyncInfos.base");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GroupSyncInfos.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GroupSyncInfos.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GroupSyncInfos)
  return target;
}

size_t GroupSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GroupSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string base = 1;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GroupSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GroupSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GroupSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GroupSyncInfos)
    MergeFrom(*source);
  }
}

void GroupSyncInfos::MergeFrom(const GroupSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GroupSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base().size() > 0) {
    _internal_set_base(from._internal_base());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GroupSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GroupSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupSyncInfos::CopyFrom(const GroupSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GroupSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupSyncInfos::IsInitialized() const {
  return true;
}

void GroupSyncInfos::InternalSwap(GroupSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  base_.Swap(&other->base_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LdapSyncInfos::InitAsDefaultInstance() {
  ::resource::_LdapSyncInfos_default_instance_._instance.get_mutable()->usersyncinfos_ = const_cast< ::resource::UserSyncInfos*>(
      ::resource::UserSyncInfos::internal_default_instance());
  ::resource::_LdapSyncInfos_default_instance_._instance.get_mutable()->groupsyncinfos_ = const_cast< ::resource::GroupSyncInfos*>(
      ::resource::GroupSyncInfos::internal_default_instance());
}
class LdapSyncInfos::_Internal {
 public:
  static const ::resource::UserSyncInfos& usersyncinfos(const LdapSyncInfos* msg);
  static const ::resource::GroupSyncInfos& groupsyncinfos(const LdapSyncInfos* msg);
};

const ::resource::UserSyncInfos&
LdapSyncInfos::_Internal::usersyncinfos(const LdapSyncInfos* msg) {
  return *msg->usersyncinfos_;
}
const ::resource::GroupSyncInfos&
LdapSyncInfos::_Internal::groupsyncinfos(const LdapSyncInfos* msg) {
  return *msg->groupsyncinfos_;
}
LdapSyncInfos::LdapSyncInfos(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.LdapSyncInfos)
}
LdapSyncInfos::LdapSyncInfos(const LdapSyncInfos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ldapseriveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ldapseriveid().empty()) {
    ldapseriveid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ldapseriveid(),
      GetArena());
  }
  connectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connectionid().empty()) {
    connectionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connectionid(),
      GetArena());
  }
  if (from._internal_has_usersyncinfos()) {
    usersyncinfos_ = new ::resource::UserSyncInfos(*from.usersyncinfos_);
  } else {
    usersyncinfos_ = nullptr;
  }
  if (from._internal_has_groupsyncinfos()) {
    groupsyncinfos_ = new ::resource::GroupSyncInfos(*from.groupsyncinfos_);
  } else {
    groupsyncinfos_ = nullptr;
  }
  refresh_ = from.refresh_;
  // @@protoc_insertion_point(copy_constructor:resource.LdapSyncInfos)
}

void LdapSyncInfos::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LdapSyncInfos_resource_2eproto.base);
  ldapseriveid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&usersyncinfos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_) -
      reinterpret_cast<char*>(&usersyncinfos_)) + sizeof(refresh_));
}

LdapSyncInfos::~LdapSyncInfos() {
  // @@protoc_insertion_point(destructor:resource.LdapSyncInfos)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LdapSyncInfos::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ldapseriveid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connectionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete usersyncinfos_;
  if (this != internal_default_instance()) delete groupsyncinfos_;
}

void LdapSyncInfos::ArenaDtor(void* object) {
  LdapSyncInfos* _this = reinterpret_cast< LdapSyncInfos* >(object);
  (void)_this;
}
void LdapSyncInfos::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LdapSyncInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LdapSyncInfos& LdapSyncInfos::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LdapSyncInfos_resource_2eproto.base);
  return *internal_default_instance();
}


void LdapSyncInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.LdapSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ldapseriveid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connectionid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && usersyncinfos_ != nullptr) {
    delete usersyncinfos_;
  }
  usersyncinfos_ = nullptr;
  if (GetArena() == nullptr && groupsyncinfos_ != nullptr) {
    delete groupsyncinfos_;
  }
  groupsyncinfos_ = nullptr;
  refresh_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LdapSyncInfos::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ldapSeriveId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ldapseriveid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LdapSyncInfos.ldapSeriveId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connectionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connectionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LdapSyncInfos.connectionId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 refresh = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          refresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.UserSyncInfos userSyncInfos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_usersyncinfos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.GroupSyncInfos groupSyncInfos = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_groupsyncinfos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LdapSyncInfos::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.LdapSyncInfos)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ldapSeriveId = 1;
  if (this->ldapseriveid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ldapseriveid().data(), static_cast<int>(this->_internal_ldapseriveid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LdapSyncInfos.ldapSeriveId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ldapseriveid(), target);
  }

  // string connectionId = 2;
  if (this->connectionid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connectionid().data(), static_cast<int>(this->_internal_connectionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LdapSyncInfos.connectionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connectionid(), target);
  }

  // int32 refresh = 3;
  if (this->refresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_refresh(), target);
  }

  // .resource.UserSyncInfos userSyncInfos = 4;
  if (this->has_usersyncinfos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::usersyncinfos(this), target, stream);
  }

  // .resource.GroupSyncInfos groupSyncInfos = 5;
  if (this->has_groupsyncinfos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::groupsyncinfos(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.LdapSyncInfos)
  return target;
}

size_t LdapSyncInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.LdapSyncInfos)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ldapSeriveId = 1;
  if (this->ldapseriveid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ldapseriveid());
  }

  // string connectionId = 2;
  if (this->connectionid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connectionid());
  }

  // .resource.UserSyncInfos userSyncInfos = 4;
  if (this->has_usersyncinfos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *usersyncinfos_);
  }

  // .resource.GroupSyncInfos groupSyncInfos = 5;
  if (this->has_groupsyncinfos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *groupsyncinfos_);
  }

  // int32 refresh = 3;
  if (this->refresh() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_refresh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LdapSyncInfos::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.LdapSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const LdapSyncInfos* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LdapSyncInfos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.LdapSyncInfos)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.LdapSyncInfos)
    MergeFrom(*source);
  }
}

void LdapSyncInfos::MergeFrom(const LdapSyncInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.LdapSyncInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ldapseriveid().size() > 0) {
    _internal_set_ldapseriveid(from._internal_ldapseriveid());
  }
  if (from.connectionid().size() > 0) {
    _internal_set_connectionid(from._internal_connectionid());
  }
  if (from.has_usersyncinfos()) {
    _internal_mutable_usersyncinfos()->::resource::UserSyncInfos::MergeFrom(from._internal_usersyncinfos());
  }
  if (from.has_groupsyncinfos()) {
    _internal_mutable_groupsyncinfos()->::resource::GroupSyncInfos::MergeFrom(from._internal_groupsyncinfos());
  }
  if (from.refresh() != 0) {
    _internal_set_refresh(from._internal_refresh());
  }
}

void LdapSyncInfos::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.LdapSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LdapSyncInfos::CopyFrom(const LdapSyncInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.LdapSyncInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LdapSyncInfos::IsInitialized() const {
  return true;
}

void LdapSyncInfos::InternalSwap(LdapSyncInfos* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ldapseriveid_.Swap(&other->ldapseriveid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connectionid_.Swap(&other->connectionid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LdapSyncInfos, refresh_)
      + sizeof(LdapSyncInfos::refresh_)
      - PROTOBUF_FIELD_OFFSET(LdapSyncInfos, usersyncinfos_)>(
          reinterpret_cast<char*>(&usersyncinfos_),
          reinterpret_cast<char*>(&other->usersyncinfos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LdapSyncInfos::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SynchronizeLdapRqst::InitAsDefaultInstance() {
  ::resource::_SynchronizeLdapRqst_default_instance_._instance.get_mutable()->syncinfo_ = const_cast< ::resource::LdapSyncInfos*>(
      ::resource::LdapSyncInfos::internal_default_instance());
}
class SynchronizeLdapRqst::_Internal {
 public:
  static const ::resource::LdapSyncInfos& syncinfo(const SynchronizeLdapRqst* msg);
};

const ::resource::LdapSyncInfos&
SynchronizeLdapRqst::_Internal::syncinfo(const SynchronizeLdapRqst* msg) {
  return *msg->syncinfo_;
}
SynchronizeLdapRqst::SynchronizeLdapRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SynchronizeLdapRqst)
}
SynchronizeLdapRqst::SynchronizeLdapRqst(const SynchronizeLdapRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_syncinfo()) {
    syncinfo_ = new ::resource::LdapSyncInfos(*from.syncinfo_);
  } else {
    syncinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SynchronizeLdapRqst)
}

void SynchronizeLdapRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SynchronizeLdapRqst_resource_2eproto.base);
  syncinfo_ = nullptr;
}

SynchronizeLdapRqst::~SynchronizeLdapRqst() {
  // @@protoc_insertion_point(destructor:resource.SynchronizeLdapRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SynchronizeLdapRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete syncinfo_;
}

void SynchronizeLdapRqst::ArenaDtor(void* object) {
  SynchronizeLdapRqst* _this = reinterpret_cast< SynchronizeLdapRqst* >(object);
  (void)_this;
}
void SynchronizeLdapRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SynchronizeLdapRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SynchronizeLdapRqst& SynchronizeLdapRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SynchronizeLdapRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SynchronizeLdapRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SynchronizeLdapRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && syncinfo_ != nullptr) {
    delete syncinfo_;
  }
  syncinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynchronizeLdapRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.LdapSyncInfos syncInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_syncinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SynchronizeLdapRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SynchronizeLdapRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.LdapSyncInfos syncInfo = 1;
  if (this->has_syncinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::syncinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SynchronizeLdapRqst)
  return target;
}

size_t SynchronizeLdapRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SynchronizeLdapRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.LdapSyncInfos syncInfo = 1;
  if (this->has_syncinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *syncinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynchronizeLdapRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SynchronizeLdapRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SynchronizeLdapRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SynchronizeLdapRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SynchronizeLdapRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SynchronizeLdapRqst)
    MergeFrom(*source);
  }
}

void SynchronizeLdapRqst::MergeFrom(const SynchronizeLdapRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SynchronizeLdapRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_syncinfo()) {
    _internal_mutable_syncinfo()->::resource::LdapSyncInfos::MergeFrom(from._internal_syncinfo());
  }
}

void SynchronizeLdapRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SynchronizeLdapRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeLdapRqst::CopyFrom(const SynchronizeLdapRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SynchronizeLdapRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeLdapRqst::IsInitialized() const {
  return true;
}

void SynchronizeLdapRqst::InternalSwap(SynchronizeLdapRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(syncinfo_, other->syncinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynchronizeLdapRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SynchronizeLdapRsp::InitAsDefaultInstance() {
}
class SynchronizeLdapRsp::_Internal {
 public:
};

SynchronizeLdapRsp::SynchronizeLdapRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SynchronizeLdapRsp)
}
SynchronizeLdapRsp::SynchronizeLdapRsp(const SynchronizeLdapRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SynchronizeLdapRsp)
}

void SynchronizeLdapRsp::SharedCtor() {
  result_ = false;
}

SynchronizeLdapRsp::~SynchronizeLdapRsp() {
  // @@protoc_insertion_point(destructor:resource.SynchronizeLdapRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SynchronizeLdapRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SynchronizeLdapRsp::ArenaDtor(void* object) {
  SynchronizeLdapRsp* _this = reinterpret_cast< SynchronizeLdapRsp* >(object);
  (void)_this;
}
void SynchronizeLdapRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SynchronizeLdapRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SynchronizeLdapRsp& SynchronizeLdapRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SynchronizeLdapRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SynchronizeLdapRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SynchronizeLdapRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynchronizeLdapRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SynchronizeLdapRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SynchronizeLdapRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SynchronizeLdapRsp)
  return target;
}

size_t SynchronizeLdapRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SynchronizeLdapRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynchronizeLdapRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SynchronizeLdapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SynchronizeLdapRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SynchronizeLdapRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SynchronizeLdapRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SynchronizeLdapRsp)
    MergeFrom(*source);
  }
}

void SynchronizeLdapRsp::MergeFrom(const SynchronizeLdapRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SynchronizeLdapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SynchronizeLdapRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SynchronizeLdapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeLdapRsp::CopyFrom(const SynchronizeLdapRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SynchronizeLdapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeLdapRsp::IsInitialized() const {
  return true;
}

void SynchronizeLdapRsp::InternalSwap(SynchronizeLdapRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynchronizeLdapRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateTokenRqst::InitAsDefaultInstance() {
}
class ValidateTokenRqst::_Internal {
 public:
};

ValidateTokenRqst::ValidateTokenRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ValidateTokenRqst)
}
ValidateTokenRqst::ValidateTokenRqst(const ValidateTokenRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.ValidateTokenRqst)
}

void ValidateTokenRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateTokenRqst_resource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ValidateTokenRqst::~ValidateTokenRqst() {
  // @@protoc_insertion_point(destructor:resource.ValidateTokenRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateTokenRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateTokenRqst::ArenaDtor(void* object) {
  ValidateTokenRqst* _this = reinterpret_cast< ValidateTokenRqst* >(object);
  (void)_this;
}
void ValidateTokenRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateTokenRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateTokenRqst& ValidateTokenRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateTokenRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ValidateTokenRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ValidateTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateTokenRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ValidateTokenRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateTokenRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ValidateTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ValidateTokenRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ValidateTokenRqst)
  return target;
}

size_t ValidateTokenRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ValidateTokenRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateTokenRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ValidateTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateTokenRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateTokenRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ValidateTokenRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ValidateTokenRqst)
    MergeFrom(*source);
  }
}

void ValidateTokenRqst::MergeFrom(const ValidateTokenRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ValidateTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void ValidateTokenRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ValidateTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateTokenRqst::CopyFrom(const ValidateTokenRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ValidateTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateTokenRqst::IsInitialized() const {
  return true;
}

void ValidateTokenRqst::InternalSwap(ValidateTokenRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateTokenRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateTokenRsp::InitAsDefaultInstance() {
}
class ValidateTokenRsp::_Internal {
 public:
};

ValidateTokenRsp::ValidateTokenRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ValidateTokenRsp)
}
ValidateTokenRsp::ValidateTokenRsp(const ValidateTokenRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_clientid().empty()) {
    clientid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_clientid(),
      GetArena());
  }
  expired_ = from.expired_;
  // @@protoc_insertion_point(copy_constructor:resource.ValidateTokenRsp)
}

void ValidateTokenRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateTokenRsp_resource_2eproto.base);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expired_ = PROTOBUF_LONGLONG(0);
}

ValidateTokenRsp::~ValidateTokenRsp() {
  // @@protoc_insertion_point(destructor:resource.ValidateTokenRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateTokenRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  clientid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateTokenRsp::ArenaDtor(void* object) {
  ValidateTokenRsp* _this = reinterpret_cast< ValidateTokenRsp* >(object);
  (void)_this;
}
void ValidateTokenRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateTokenRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateTokenRsp& ValidateTokenRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateTokenRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ValidateTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ValidateTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expired_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateTokenRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string clientId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_clientid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ValidateTokenRsp.clientId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expired = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          expired_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateTokenRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ValidateTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ValidateTokenRsp.clientId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_clientid(), target);
  }

  // int64 expired = 2;
  if (this->expired() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_expired(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ValidateTokenRsp)
  return target;
}

size_t ValidateTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ValidateTokenRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  // int64 expired = 2;
  if (this->expired() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expired());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateTokenRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ValidateTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateTokenRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateTokenRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ValidateTokenRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ValidateTokenRsp)
    MergeFrom(*source);
  }
}

void ValidateTokenRsp::MergeFrom(const ValidateTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ValidateTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid().size() > 0) {
    _internal_set_clientid(from._internal_clientid());
  }
  if (from.expired() != 0) {
    _internal_set_expired(from._internal_expired());
  }
}

void ValidateTokenRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ValidateTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateTokenRsp::CopyFrom(const ValidateTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ValidateTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateTokenRsp::IsInitialized() const {
  return true;
}

void ValidateTokenRsp::InternalSwap(ValidateTokenRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  clientid_.Swap(&other->clientid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expired_, other->expired_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateTokenRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllActionsRqst::InitAsDefaultInstance() {
}
class GetAllActionsRqst::_Internal {
 public:
};

GetAllActionsRqst::GetAllActionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAllActionsRqst)
}
GetAllActionsRqst::GetAllActionsRqst(const GetAllActionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAllActionsRqst)
}

void GetAllActionsRqst::SharedCtor() {
}

GetAllActionsRqst::~GetAllActionsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAllActionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllActionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllActionsRqst::ArenaDtor(void* object) {
  GetAllActionsRqst* _this = reinterpret_cast< GetAllActionsRqst* >(object);
  (void)_this;
}
void GetAllActionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllActionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllActionsRqst& GetAllActionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllActionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAllActionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAllActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllActionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllActionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAllActionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAllActionsRqst)
  return target;
}

size_t GetAllActionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAllActionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllActionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAllActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllActionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAllActionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAllActionsRqst)
    MergeFrom(*source);
  }
}

void GetAllActionsRqst::MergeFrom(const GetAllActionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAllActionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllActionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAllActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActionsRqst::CopyFrom(const GetAllActionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAllActionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActionsRqst::IsInitialized() const {
  return true;
}

void GetAllActionsRqst::InternalSwap(GetAllActionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllActionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllActionsRsp::InitAsDefaultInstance() {
}
class GetAllActionsRsp::_Internal {
 public:
};

GetAllActionsRsp::GetAllActionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAllActionsRsp)
}
GetAllActionsRsp::GetAllActionsRsp(const GetAllActionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAllActionsRsp)
}

void GetAllActionsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllActionsRsp_resource_2eproto.base);
}

GetAllActionsRsp::~GetAllActionsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAllActionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllActionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllActionsRsp::ArenaDtor(void* object) {
  GetAllActionsRsp* _this = reinterpret_cast< GetAllActionsRsp* >(object);
  (void)_this;
}
void GetAllActionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllActionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllActionsRsp& GetAllActionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllActionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAllActionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAllActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllActionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAllActionsRsp.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllActionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAllActionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAllActionsRsp.actions");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAllActionsRsp)
  return target;
}

size_t GetAllActionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAllActionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllActionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAllActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllActionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAllActionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAllActionsRsp)
    MergeFrom(*source);
  }
}

void GetAllActionsRsp::MergeFrom(const GetAllActionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAllActionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void GetAllActionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAllActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActionsRsp::CopyFrom(const GetAllActionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAllActionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActionsRsp::IsInitialized() const {
  return true;
}

void GetAllActionsRsp::InternalSwap(GetAllActionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllActionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Account::InitAsDefaultInstance() {
}
class Account::_Internal {
 public:
};

Account::Account(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Account)
}
Account::Account(const Account& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Account)
}

void Account::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Account_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:resource.Account)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Account::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Account::ArenaDtor(void* object) {
  Account* _this = reinterpret_cast< Account* >(object);
  (void)_this;
}
void Account::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Account& Account::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Account_resource_2eproto.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Account::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Account.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Account::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Account)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Account.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Account)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Account)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void Account::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Account::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Role::InitAsDefaultInstance() {
}
class Role::_Internal {
 public:
};

Role::Role(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Role)
}
Role::Role(const Role& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Role)
}

void Role::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Role_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:resource.Role)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Role::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Role::ArenaDtor(void* object) {
  Role* _this = reinterpret_cast< Role* >(object);
  (void)_this;
}
void Role::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Role& Role::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Role_resource_2eproto.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Role::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Role.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Role::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string actions = 3;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Role.actions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Role)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Role>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Role)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Role::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::InternalSwap(Role* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Role::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRqst::InitAsDefaultInstance() {
  ::resource::_RegisterAccountRqst_default_instance_._instance.get_mutable()->account_ = const_cast< ::resource::Account*>(
      ::resource::Account::internal_default_instance());
}
class RegisterAccountRqst::_Internal {
 public:
  static const ::resource::Account& account(const RegisterAccountRqst* msg);
};

const ::resource::Account&
RegisterAccountRqst::_Internal::account(const RegisterAccountRqst* msg) {
  return *msg->account_;
}
RegisterAccountRqst::RegisterAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRqst)
}
RegisterAccountRqst::RegisterAccountRqst(const RegisterAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_confirm_password().empty()) {
    confirm_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_confirm_password(),
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new ::resource::Account(*from.account_);
  } else {
    account_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRqst)
}

void RegisterAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRqst_resource_2eproto.base);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confirm_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  account_ = nullptr;
}

RegisterAccountRqst::~RegisterAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  confirm_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void RegisterAccountRqst::ArenaDtor(void* object) {
  RegisterAccountRqst* _this = reinterpret_cast< RegisterAccountRqst* >(object);
  (void)_this;
}
void RegisterAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRqst& RegisterAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  confirm_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Account account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRqst.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string confirm_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_confirm_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRqst.confirm_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Account account = 1;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::account(this), target, stream);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRqst.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_confirm_password().data(), static_cast<int>(this->_internal_confirm_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRqst.confirm_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_confirm_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRqst)
  return target;
}

size_t RegisterAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string confirm_password = 3;
  if (this->confirm_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_confirm_password());
  }

  // .resource.Account account = 1;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRqst)
    MergeFrom(*source);
  }
}

void RegisterAccountRqst::MergeFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.confirm_password().size() > 0) {
    _internal_set_confirm_password(from._internal_confirm_password());
  }
  if (from.has_account()) {
    _internal_mutable_account()->::resource::Account::MergeFrom(from._internal_account());
  }
}

void RegisterAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRqst::CopyFrom(const RegisterAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRqst::IsInitialized() const {
  return true;
}

void RegisterAccountRqst::InternalSwap(RegisterAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  confirm_password_.Swap(&other->confirm_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(account_, other->account_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterAccountRsp::InitAsDefaultInstance() {
}
class RegisterAccountRsp::_Internal {
 public:
};

RegisterAccountRsp::RegisterAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterAccountRsp)
}
RegisterAccountRsp::RegisterAccountRsp(const RegisterAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterAccountRsp)
}

void RegisterAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterAccountRsp_resource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterAccountRsp::~RegisterAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterAccountRsp::ArenaDtor(void* object) {
  RegisterAccountRsp* _this = reinterpret_cast< RegisterAccountRsp* >(object);
  (void)_this;
}
void RegisterAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterAccountRsp& RegisterAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RegisterAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RegisterAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterAccountRsp)
  return target;
}

size_t RegisterAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterAccountRsp)
    MergeFrom(*source);
  }
}

void RegisterAccountRsp::MergeFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRsp::CopyFrom(const RegisterAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRsp::IsInitialized() const {
  return true;
}

void RegisterAccountRsp::InternalSwap(RegisterAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRqst::InitAsDefaultInstance() {
}
class DeleteAccountRqst::_Internal {
 public:
};

DeleteAccountRqst::DeleteAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRqst)
}
DeleteAccountRqst::DeleteAccountRqst(const DeleteAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRqst)
}

void DeleteAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRqst::~DeleteAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRqst::ArenaDtor(void* object) {
  DeleteAccountRqst* _this = reinterpret_cast< DeleteAccountRqst* >(object);
  (void)_this;
}
void DeleteAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRqst& DeleteAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRqst)
  return target;
}

size_t DeleteAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRqst)
    MergeFrom(*source);
  }
}

void DeleteAccountRqst::MergeFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRqst::CopyFrom(const DeleteAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRqst::IsInitialized() const {
  return true;
}

void DeleteAccountRqst::InternalSwap(DeleteAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAccountRsp::InitAsDefaultInstance() {
}
class DeleteAccountRsp::_Internal {
 public:
};

DeleteAccountRsp::DeleteAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAccountRsp)
}
DeleteAccountRsp::DeleteAccountRsp(const DeleteAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAccountRsp)
}

void DeleteAccountRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAccountRsp_resource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteAccountRsp::~DeleteAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAccountRsp::ArenaDtor(void* object) {
  DeleteAccountRsp* _this = reinterpret_cast< DeleteAccountRsp* >(object);
  (void)_this;
}
void DeleteAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAccountRsp& DeleteAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAccountRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAccountRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAccountRsp)
  return target;
}

size_t DeleteAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAccountRsp)
    MergeFrom(*source);
  }
}

void DeleteAccountRsp::MergeFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAccountRsp::CopyFrom(const DeleteAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAccountRsp::IsInitialized() const {
  return true;
}

void DeleteAccountRsp::InternalSwap(DeleteAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticateRqst::InitAsDefaultInstance() {
}
class AuthenticateRqst::_Internal {
 public:
};

AuthenticateRqst::AuthenticateRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AuthenticateRqst)
}
AuthenticateRqst::AuthenticateRqst(const AuthenticateRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AuthenticateRqst)
}

void AuthenticateRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticateRqst_resource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticateRqst::~AuthenticateRqst() {
  // @@protoc_insertion_point(destructor:resource.AuthenticateRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticateRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateRqst::ArenaDtor(void* object) {
  AuthenticateRqst* _this = reinterpret_cast< AuthenticateRqst* >(object);
  (void)_this;
}
void AuthenticateRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticateRqst& AuthenticateRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticateRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AuthenticateRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AuthenticateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AuthenticateRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AuthenticateRqst.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticateRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AuthenticateRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AuthenticateRqst.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AuthenticateRqst.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AuthenticateRqst)
  return target;
}

size_t AuthenticateRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AuthenticateRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AuthenticateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticateRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AuthenticateRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AuthenticateRqst)
    MergeFrom(*source);
  }
}

void AuthenticateRqst::MergeFrom(const AuthenticateRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AuthenticateRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void AuthenticateRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AuthenticateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateRqst::CopyFrom(const AuthenticateRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AuthenticateRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRqst::IsInitialized() const {
  return true;
}

void AuthenticateRqst::InternalSwap(AuthenticateRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticateRsp::InitAsDefaultInstance() {
}
class AuthenticateRsp::_Internal {
 public:
};

AuthenticateRsp::AuthenticateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AuthenticateRsp)
}
AuthenticateRsp::AuthenticateRsp(const AuthenticateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AuthenticateRsp)
}

void AuthenticateRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticateRsp_resource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticateRsp::~AuthenticateRsp() {
  // @@protoc_insertion_point(destructor:resource.AuthenticateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateRsp::ArenaDtor(void* object) {
  AuthenticateRsp* _this = reinterpret_cast< AuthenticateRsp* >(object);
  (void)_this;
}
void AuthenticateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticateRsp& AuthenticateRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticateRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AuthenticateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AuthenticateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AuthenticateRsp.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AuthenticateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AuthenticateRsp.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AuthenticateRsp)
  return target;
}

size_t AuthenticateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AuthenticateRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AuthenticateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AuthenticateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AuthenticateRsp)
    MergeFrom(*source);
  }
}

void AuthenticateRsp::MergeFrom(const AuthenticateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AuthenticateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void AuthenticateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AuthenticateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateRsp::CopyFrom(const AuthenticateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AuthenticateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRsp::IsInitialized() const {
  return true;
}

void AuthenticateRsp::InternalSwap(AuthenticateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RefreshTokenRqst::InitAsDefaultInstance() {
}
class RefreshTokenRqst::_Internal {
 public:
};

RefreshTokenRqst::RefreshTokenRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RefreshTokenRqst)
}
RefreshTokenRqst::RefreshTokenRqst(const RefreshTokenRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RefreshTokenRqst)
}

void RefreshTokenRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefreshTokenRqst_resource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RefreshTokenRqst::~RefreshTokenRqst() {
  // @@protoc_insertion_point(destructor:resource.RefreshTokenRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshTokenRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RefreshTokenRqst::ArenaDtor(void* object) {
  RefreshTokenRqst* _this = reinterpret_cast< RefreshTokenRqst* >(object);
  (void)_this;
}
void RefreshTokenRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshTokenRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshTokenRqst& RefreshTokenRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshTokenRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RefreshTokenRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RefreshTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTokenRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RefreshTokenRqst.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshTokenRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RefreshTokenRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RefreshTokenRqst.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RefreshTokenRqst)
  return target;
}

size_t RefreshTokenRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RefreshTokenRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshTokenRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RefreshTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTokenRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshTokenRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RefreshTokenRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RefreshTokenRqst)
    MergeFrom(*source);
  }
}

void RefreshTokenRqst::MergeFrom(const RefreshTokenRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RefreshTokenRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void RefreshTokenRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RefreshTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTokenRqst::CopyFrom(const RefreshTokenRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RefreshTokenRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTokenRqst::IsInitialized() const {
  return true;
}

void RefreshTokenRqst::InternalSwap(RefreshTokenRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTokenRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RefreshTokenRsp::InitAsDefaultInstance() {
}
class RefreshTokenRsp::_Internal {
 public:
};

RefreshTokenRsp::RefreshTokenRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RefreshTokenRsp)
}
RefreshTokenRsp::RefreshTokenRsp(const RefreshTokenRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RefreshTokenRsp)
}

void RefreshTokenRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefreshTokenRsp_resource_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RefreshTokenRsp::~RefreshTokenRsp() {
  // @@protoc_insertion_point(destructor:resource.RefreshTokenRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshTokenRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RefreshTokenRsp::ArenaDtor(void* object) {
  RefreshTokenRsp* _this = reinterpret_cast< RefreshTokenRsp* >(object);
  (void)_this;
}
void RefreshTokenRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshTokenRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshTokenRsp& RefreshTokenRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshTokenRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RefreshTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RefreshTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTokenRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RefreshTokenRsp.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshTokenRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RefreshTokenRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RefreshTokenRsp.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RefreshTokenRsp)
  return target;
}

size_t RefreshTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RefreshTokenRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshTokenRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RefreshTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshTokenRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshTokenRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RefreshTokenRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RefreshTokenRsp)
    MergeFrom(*source);
  }
}

void RefreshTokenRsp::MergeFrom(const RefreshTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RefreshTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void RefreshTokenRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RefreshTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshTokenRsp::CopyFrom(const RefreshTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RefreshTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTokenRsp::IsInitialized() const {
  return true;
}

void RefreshTokenRsp::InternalSwap(RefreshTokenRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTokenRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRqst::InitAsDefaultInstance() {
}
class AddAccountRoleRqst::_Internal {
 public:
};

AddAccountRoleRqst::AddAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRqst)
}
AddAccountRoleRqst::AddAccountRoleRqst(const AddAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRqst)
}

void AddAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddAccountRoleRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddAccountRoleRqst::~AddAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddAccountRoleRqst::ArenaDtor(void* object) {
  AddAccountRoleRqst* _this = reinterpret_cast< AddAccountRoleRqst* >(object);
  (void)_this;
}
void AddAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRqst& AddAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRqst)
  return target;
}

size_t AddAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRqst)
    MergeFrom(*source);
  }
}

void AddAccountRoleRqst::MergeFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRqst::CopyFrom(const AddAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRqst::IsInitialized() const {
  return true;
}

void AddAccountRoleRqst::InternalSwap(AddAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddAccountRoleRsp::InitAsDefaultInstance() {
}
class AddAccountRoleRsp::_Internal {
 public:
};

AddAccountRoleRsp::AddAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddAccountRoleRsp)
}
AddAccountRoleRsp::AddAccountRoleRsp(const AddAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddAccountRoleRsp)
}

void AddAccountRoleRsp::SharedCtor() {
  result_ = false;
}

AddAccountRoleRsp::~AddAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddAccountRoleRsp::ArenaDtor(void* object) {
  AddAccountRoleRsp* _this = reinterpret_cast< AddAccountRoleRsp* >(object);
  (void)_this;
}
void AddAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddAccountRoleRsp& AddAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddAccountRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddAccountRoleRsp)
  return target;
}

size_t AddAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddAccountRoleRsp)
    MergeFrom(*source);
  }
}

void AddAccountRoleRsp::MergeFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRoleRsp::CopyFrom(const AddAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRoleRsp::IsInitialized() const {
  return true;
}

void AddAccountRoleRsp::InternalSwap(AddAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRqst::InitAsDefaultInstance() {
}
class RemoveAccountRoleRqst::_Internal {
 public:
};

RemoveAccountRoleRqst::RemoveAccountRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRqst)
}
RemoveAccountRoleRqst::RemoveAccountRoleRqst(const RemoveAccountRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRqst)
}

void RemoveAccountRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveAccountRoleRqst_resource_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveAccountRoleRqst::~RemoveAccountRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveAccountRoleRqst::ArenaDtor(void* object) {
  RemoveAccountRoleRqst* _this = reinterpret_cast< RemoveAccountRoleRqst* >(object);
  (void)_this;
}
void RemoveAccountRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRqst& RemoveAccountRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string accountId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveAccountRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveAccountRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRqst)
  return target;
}

size_t RemoveAccountRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accountId = 1;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRqst::MergeFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveAccountRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRqst::CopyFrom(const RemoveAccountRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRqst::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRqst::InternalSwap(RemoveAccountRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveAccountRoleRsp::InitAsDefaultInstance() {
}
class RemoveAccountRoleRsp::_Internal {
 public:
};

RemoveAccountRoleRsp::RemoveAccountRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveAccountRoleRsp)
}
RemoveAccountRoleRsp::RemoveAccountRoleRsp(const RemoveAccountRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveAccountRoleRsp)
}

void RemoveAccountRoleRsp::SharedCtor() {
  result_ = false;
}

RemoveAccountRoleRsp::~RemoveAccountRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveAccountRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveAccountRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveAccountRoleRsp::ArenaDtor(void* object) {
  RemoveAccountRoleRsp* _this = reinterpret_cast< RemoveAccountRoleRsp* >(object);
  (void)_this;
}
void RemoveAccountRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveAccountRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveAccountRoleRsp& RemoveAccountRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveAccountRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveAccountRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAccountRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveAccountRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveAccountRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveAccountRoleRsp)
  return target;
}

size_t RemoveAccountRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveAccountRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveAccountRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveAccountRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveAccountRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveAccountRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveAccountRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveAccountRoleRsp::MergeFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveAccountRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveAccountRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveAccountRoleRsp::CopyFrom(const RemoveAccountRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveAccountRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAccountRoleRsp::IsInitialized() const {
  return true;
}

void RemoveAccountRoleRsp::InternalSwap(RemoveAccountRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAccountRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRqst::InitAsDefaultInstance() {
  ::resource::_CreateRoleRqst_default_instance_._instance.get_mutable()->role_ = const_cast< ::resource::Role*>(
      ::resource::Role::internal_default_instance());
}
class CreateRoleRqst::_Internal {
 public:
  static const ::resource::Role& role(const CreateRoleRqst* msg);
};

const ::resource::Role&
CreateRoleRqst::_Internal::role(const CreateRoleRqst* msg) {
  return *msg->role_;
}
CreateRoleRqst::CreateRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRqst)
}
CreateRoleRqst::CreateRoleRqst(const CreateRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::resource::Role(*from.role_);
  } else {
    role_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRqst)
}

void CreateRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateRoleRqst_resource_2eproto.base);
  role_ = nullptr;
}

CreateRoleRqst::~CreateRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete role_;
}

void CreateRoleRqst::ArenaDtor(void* object) {
  CreateRoleRqst* _this = reinterpret_cast< CreateRoleRqst* >(object);
  (void)_this;
}
void CreateRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRqst& CreateRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Role role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::role(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRqst)
  return target;
}

size_t CreateRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Role role = 1;
  if (this->has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRqst)
    MergeFrom(*source);
  }
}

void CreateRoleRqst::MergeFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    _internal_mutable_role()->::resource::Role::MergeFrom(from._internal_role());
  }
}

void CreateRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRqst::CopyFrom(const CreateRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRqst::IsInitialized() const {
  return true;
}

void CreateRoleRqst::InternalSwap(CreateRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(role_, other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateRoleRsp::InitAsDefaultInstance() {
}
class CreateRoleRsp::_Internal {
 public:
};

CreateRoleRsp::CreateRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateRoleRsp)
}
CreateRoleRsp::CreateRoleRsp(const CreateRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateRoleRsp)
}

void CreateRoleRsp::SharedCtor() {
  result_ = false;
}

CreateRoleRsp::~CreateRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateRoleRsp::ArenaDtor(void* object) {
  CreateRoleRsp* _this = reinterpret_cast< CreateRoleRsp* >(object);
  (void)_this;
}
void CreateRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateRoleRsp& CreateRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateRoleRsp)
  return target;
}

size_t CreateRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateRoleRsp)
    MergeFrom(*source);
  }
}

void CreateRoleRsp::MergeFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRsp::CopyFrom(const CreateRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRsp::IsInitialized() const {
  return true;
}

void CreateRoleRsp::InternalSwap(CreateRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRqst::InitAsDefaultInstance() {
}
class DeleteRoleRqst::_Internal {
 public:
};

DeleteRoleRqst::DeleteRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRqst)
}
DeleteRoleRqst::DeleteRoleRqst(const DeleteRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRqst)
}

void DeleteRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRoleRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRoleRqst::~DeleteRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRoleRqst::ArenaDtor(void* object) {
  DeleteRoleRqst* _this = reinterpret_cast< DeleteRoleRqst* >(object);
  (void)_this;
}
void DeleteRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRqst& DeleteRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRqst)
  return target;
}

size_t DeleteRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRqst)
    MergeFrom(*source);
  }
}

void DeleteRoleRqst::MergeFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void DeleteRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRqst::CopyFrom(const DeleteRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRqst::IsInitialized() const {
  return true;
}

void DeleteRoleRqst::InternalSwap(DeleteRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRoleRsp::InitAsDefaultInstance() {
}
class DeleteRoleRsp::_Internal {
 public:
};

DeleteRoleRsp::DeleteRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteRoleRsp)
}
DeleteRoleRsp::DeleteRoleRsp(const DeleteRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteRoleRsp)
}

void DeleteRoleRsp::SharedCtor() {
  result_ = false;
}

DeleteRoleRsp::~DeleteRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRoleRsp::ArenaDtor(void* object) {
  DeleteRoleRsp* _this = reinterpret_cast< DeleteRoleRsp* >(object);
  (void)_this;
}
void DeleteRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRoleRsp& DeleteRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteRoleRsp)
  return target;
}

size_t DeleteRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteRoleRsp)
    MergeFrom(*source);
  }
}

void DeleteRoleRsp::MergeFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRoleRsp::CopyFrom(const DeleteRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRoleRsp::IsInitialized() const {
  return true;
}

void DeleteRoleRsp::InternalSwap(DeleteRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRqst::InitAsDefaultInstance() {
}
class DeleteApplicationRqst::_Internal {
 public:
};

DeleteApplicationRqst::DeleteApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRqst)
}
DeleteApplicationRqst::DeleteApplicationRqst(const DeleteApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRqst)
}

void DeleteApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteApplicationRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationRqst::~DeleteApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationRqst::ArenaDtor(void* object) {
  DeleteApplicationRqst* _this = reinterpret_cast< DeleteApplicationRqst* >(object);
  (void)_this;
}
void DeleteApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRqst& DeleteApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRqst)
  return target;
}

size_t DeleteApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRqst)
    MergeFrom(*source);
  }
}

void DeleteApplicationRqst::MergeFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void DeleteApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRqst::CopyFrom(const DeleteApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRqst::IsInitialized() const {
  return true;
}

void DeleteApplicationRqst::InternalSwap(DeleteApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteApplicationRsp::InitAsDefaultInstance() {
}
class DeleteApplicationRsp::_Internal {
 public:
};

DeleteApplicationRsp::DeleteApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteApplicationRsp)
}
DeleteApplicationRsp::DeleteApplicationRsp(const DeleteApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteApplicationRsp)
}

void DeleteApplicationRsp::SharedCtor() {
  result_ = false;
}

DeleteApplicationRsp::~DeleteApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteApplicationRsp::ArenaDtor(void* object) {
  DeleteApplicationRsp* _this = reinterpret_cast< DeleteApplicationRsp* >(object);
  (void)_this;
}
void DeleteApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteApplicationRsp& DeleteApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteApplicationRsp)
  return target;
}

size_t DeleteApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteApplicationRsp)
    MergeFrom(*source);
  }
}

void DeleteApplicationRsp::MergeFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteApplicationRsp::CopyFrom(const DeleteApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRsp::IsInitialized() const {
  return true;
}

void DeleteApplicationRsp::InternalSwap(DeleteApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllApplicationsInfoRqst::InitAsDefaultInstance() {
}
class GetAllApplicationsInfoRqst::_Internal {
 public:
};

GetAllApplicationsInfoRqst::GetAllApplicationsInfoRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAllApplicationsInfoRqst)
}
GetAllApplicationsInfoRqst::GetAllApplicationsInfoRqst(const GetAllApplicationsInfoRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAllApplicationsInfoRqst)
}

void GetAllApplicationsInfoRqst::SharedCtor() {
}

GetAllApplicationsInfoRqst::~GetAllApplicationsInfoRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAllApplicationsInfoRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllApplicationsInfoRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllApplicationsInfoRqst::ArenaDtor(void* object) {
  GetAllApplicationsInfoRqst* _this = reinterpret_cast< GetAllApplicationsInfoRqst* >(object);
  (void)_this;
}
void GetAllApplicationsInfoRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllApplicationsInfoRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllApplicationsInfoRqst& GetAllApplicationsInfoRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllApplicationsInfoRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAllApplicationsInfoRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAllApplicationsInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllApplicationsInfoRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllApplicationsInfoRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAllApplicationsInfoRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAllApplicationsInfoRqst)
  return target;
}

size_t GetAllApplicationsInfoRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAllApplicationsInfoRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllApplicationsInfoRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAllApplicationsInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllApplicationsInfoRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllApplicationsInfoRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAllApplicationsInfoRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAllApplicationsInfoRqst)
    MergeFrom(*source);
  }
}

void GetAllApplicationsInfoRqst::MergeFrom(const GetAllApplicationsInfoRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAllApplicationsInfoRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllApplicationsInfoRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAllApplicationsInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllApplicationsInfoRqst::CopyFrom(const GetAllApplicationsInfoRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAllApplicationsInfoRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllApplicationsInfoRqst::IsInitialized() const {
  return true;
}

void GetAllApplicationsInfoRqst::InternalSwap(GetAllApplicationsInfoRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllApplicationsInfoRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllApplicationsInfoRsp::InitAsDefaultInstance() {
}
class GetAllApplicationsInfoRsp::_Internal {
 public:
};

GetAllApplicationsInfoRsp::GetAllApplicationsInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAllApplicationsInfoRsp)
}
GetAllApplicationsInfoRsp::GetAllApplicationsInfoRsp(const GetAllApplicationsInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetAllApplicationsInfoRsp)
}

void GetAllApplicationsInfoRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllApplicationsInfoRsp_resource_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAllApplicationsInfoRsp::~GetAllApplicationsInfoRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAllApplicationsInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllApplicationsInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllApplicationsInfoRsp::ArenaDtor(void* object) {
  GetAllApplicationsInfoRsp* _this = reinterpret_cast< GetAllApplicationsInfoRsp* >(object);
  (void)_this;
}
void GetAllApplicationsInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllApplicationsInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllApplicationsInfoRsp& GetAllApplicationsInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllApplicationsInfoRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAllApplicationsInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAllApplicationsInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllApplicationsInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAllApplicationsInfoRsp.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllApplicationsInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAllApplicationsInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAllApplicationsInfoRsp.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAllApplicationsInfoRsp)
  return target;
}

size_t GetAllApplicationsInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAllApplicationsInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllApplicationsInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAllApplicationsInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllApplicationsInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllApplicationsInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAllApplicationsInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAllApplicationsInfoRsp)
    MergeFrom(*source);
  }
}

void GetAllApplicationsInfoRsp::MergeFrom(const GetAllApplicationsInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAllApplicationsInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetAllApplicationsInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAllApplicationsInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllApplicationsInfoRsp::CopyFrom(const GetAllApplicationsInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAllApplicationsInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllApplicationsInfoRsp::IsInitialized() const {
  return true;
}

void GetAllApplicationsInfoRsp::InternalSwap(GetAllApplicationsInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllApplicationsInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRqst::InitAsDefaultInstance() {
}
class AccountExistRqst::_Internal {
 public:
};

AccountExistRqst::AccountExistRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRqst)
}
AccountExistRqst::AccountExistRqst(const AccountExistRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRqst)
}

void AccountExistRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountExistRqst_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountExistRqst::~AccountExistRqst() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountExistRqst::ArenaDtor(void* object) {
  AccountExistRqst* _this = reinterpret_cast< AccountExistRqst* >(object);
  (void)_this;
}
void AccountExistRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRqst& AccountExistRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AccountExistRqst.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AccountExistRqst.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRqst)
  return target;
}

size_t AccountExistRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRqst)
    MergeFrom(*source);
  }
}

void AccountExistRqst::MergeFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void AccountExistRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRqst::CopyFrom(const AccountExistRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRqst::IsInitialized() const {
  return true;
}

void AccountExistRqst::InternalSwap(AccountExistRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountExistRsp::InitAsDefaultInstance() {
}
class AccountExistRsp::_Internal {
 public:
};

AccountExistRsp::AccountExistRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AccountExistRsp)
}
AccountExistRsp::AccountExistRsp(const AccountExistRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AccountExistRsp)
}

void AccountExistRsp::SharedCtor() {
  result_ = false;
}

AccountExistRsp::~AccountExistRsp() {
  // @@protoc_insertion_point(destructor:resource.AccountExistRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountExistRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccountExistRsp::ArenaDtor(void* object) {
  AccountExistRsp* _this = reinterpret_cast< AccountExistRsp* >(object);
  (void)_this;
}
void AccountExistRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountExistRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountExistRsp& AccountExistRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountExistRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AccountExistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountExistRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountExistRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AccountExistRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AccountExistRsp)
  return target;
}

size_t AccountExistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AccountExistRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountExistRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountExistRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountExistRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AccountExistRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AccountExistRsp)
    MergeFrom(*source);
  }
}

void AccountExistRsp::MergeFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AccountExistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AccountExistRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountExistRsp::CopyFrom(const AccountExistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AccountExistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountExistRsp::IsInitialized() const {
  return true;
}

void AccountExistRsp::InternalSwap(AccountExistRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountExistRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Group::InitAsDefaultInstance() {
}
class Group::_Internal {
 public:
};

Group::Group(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Group)
}
Group::Group(const Group& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Group)
}

void Group::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Group_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:resource.Group)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Group::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Group::ArenaDtor(void* object) {
  Group* _this = reinterpret_cast< Group* >(object);
  (void)_this;
}
void Group::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Group& Group::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Group_resource_2eproto.base);
  return *internal_default_instance();
}


void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Group::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string members = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_members();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Group.members"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Group::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string members = 3;
  for (int i = 0, n = this->_internal_members_size(); i < n; i++) {
    const auto& s = this->_internal_members(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Group.members");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Group)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string members = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(members_.size());
  for (int i = 0, n = members_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      members_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Group::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Group* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Group>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Group)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Group::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::InternalSwap(Group* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Group::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGroupRqst::InitAsDefaultInstance() {
  ::resource::_CreateGroupRqst_default_instance_._instance.get_mutable()->group_ = const_cast< ::resource::Group*>(
      ::resource::Group::internal_default_instance());
}
class CreateGroupRqst::_Internal {
 public:
  static const ::resource::Group& group(const CreateGroupRqst* msg);
};

const ::resource::Group&
CreateGroupRqst::_Internal::group(const CreateGroupRqst* msg) {
  return *msg->group_;
}
CreateGroupRqst::CreateGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRqst)
}
CreateGroupRqst::CreateGroupRqst(const CreateGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_group()) {
    group_ = new ::resource::Group(*from.group_);
  } else {
    group_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRqst)
}

void CreateGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateGroupRqst_resource_2eproto.base);
  group_ = nullptr;
}

CreateGroupRqst::~CreateGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete group_;
}

void CreateGroupRqst::ArenaDtor(void* object) {
  CreateGroupRqst* _this = reinterpret_cast< CreateGroupRqst* >(object);
  (void)_this;
}
void CreateGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupRqst& CreateGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && group_ != nullptr) {
    delete group_;
  }
  group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Group group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRqst)
  return target;
}

size_t CreateGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Group group = 1;
  if (this->has_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *group_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRqst)
    MergeFrom(*source);
  }
}

void CreateGroupRqst::MergeFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_group()) {
    _internal_mutable_group()->::resource::Group::MergeFrom(from._internal_group());
  }
}

void CreateGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRqst::CopyFrom(const CreateGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRqst::IsInitialized() const {
  return true;
}

void CreateGroupRqst::InternalSwap(CreateGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_, other->group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGroupRsp::InitAsDefaultInstance() {
}
class CreateGroupRsp::_Internal {
 public:
};

CreateGroupRsp::CreateGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateGroupRsp)
}
CreateGroupRsp::CreateGroupRsp(const CreateGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateGroupRsp)
}

void CreateGroupRsp::SharedCtor() {
  result_ = false;
}

CreateGroupRsp::~CreateGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateGroupRsp::ArenaDtor(void* object) {
  CreateGroupRsp* _this = reinterpret_cast< CreateGroupRsp* >(object);
  (void)_this;
}
void CreateGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupRsp& CreateGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateGroupRsp)
  return target;
}

size_t CreateGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateGroupRsp)
    MergeFrom(*source);
  }
}

void CreateGroupRsp::MergeFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRsp::CopyFrom(const CreateGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRsp::IsInitialized() const {
  return true;
}

void CreateGroupRsp::InternalSwap(CreateGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsRqst::InitAsDefaultInstance() {
}
class GetGroupsRqst::_Internal {
 public:
};

GetGroupsRqst::GetGroupsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRqst)
}
GetGroupsRqst::GetGroupsRqst(const GetGroupsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRqst)
}

void GetGroupsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetGroupsRqst::~GetGroupsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGroupsRqst::ArenaDtor(void* object) {
  GetGroupsRqst* _this = reinterpret_cast< GetGroupsRqst* >(object);
  (void)_this;
}
void GetGroupsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRqst& GetGroupsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetGroupsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetGroupsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRqst)
  return target;
}

size_t GetGroupsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRqst)
    MergeFrom(*source);
  }
}

void GetGroupsRqst::MergeFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetGroupsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRqst::CopyFrom(const GetGroupsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRqst::IsInitialized() const {
  return true;
}

void GetGroupsRqst::InternalSwap(GetGroupsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsRsp::InitAsDefaultInstance() {
}
class GetGroupsRsp::_Internal {
 public:
};

GetGroupsRsp::GetGroupsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetGroupsRsp)
}
GetGroupsRsp::GetGroupsRsp(const GetGroupsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetGroupsRsp)
}

void GetGroupsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsRsp_resource_2eproto.base);
}

GetGroupsRsp::~GetGroupsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetGroupsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupsRsp::ArenaDtor(void* object) {
  GetGroupsRsp* _this = reinterpret_cast< GetGroupsRsp* >(object);
  (void)_this;
}
void GetGroupsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRsp& GetGroupsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Group groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetGroupsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetGroupsRsp)
  return target;
}

size_t GetGroupsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetGroupsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Group groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetGroupsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetGroupsRsp)
    MergeFrom(*source);
  }
}

void GetGroupsRsp::MergeFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetGroupsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void GetGroupsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRsp::CopyFrom(const GetGroupsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetGroupsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRsp::IsInitialized() const {
  return true;
}

void GetGroupsRsp::InternalSwap(GetGroupsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupRqst::InitAsDefaultInstance() {
}
class DeleteGroupRqst::_Internal {
 public:
};

DeleteGroupRqst::DeleteGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRqst)
}
DeleteGroupRqst::DeleteGroupRqst(const DeleteGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group().empty()) {
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRqst)
}

void DeleteGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteGroupRqst_resource_2eproto.base);
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteGroupRqst::~DeleteGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteGroupRqst::ArenaDtor(void* object) {
  DeleteGroupRqst* _this = reinterpret_cast< DeleteGroupRqst* >(object);
  (void)_this;
}
void DeleteGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupRqst& DeleteGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteGroupRqst.group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteGroupRqst.group");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRqst)
  return target;
}

size_t DeleteGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group = 1;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRqst)
    MergeFrom(*source);
  }
}

void DeleteGroupRqst::MergeFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group().size() > 0) {
    _internal_set_group(from._internal_group());
  }
}

void DeleteGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRqst::CopyFrom(const DeleteGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRqst::IsInitialized() const {
  return true;
}

void DeleteGroupRqst::InternalSwap(DeleteGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupRsp::InitAsDefaultInstance() {
}
class DeleteGroupRsp::_Internal {
 public:
};

DeleteGroupRsp::DeleteGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteGroupRsp)
}
DeleteGroupRsp::DeleteGroupRsp(const DeleteGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteGroupRsp)
}

void DeleteGroupRsp::SharedCtor() {
  result_ = false;
}

DeleteGroupRsp::~DeleteGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGroupRsp::ArenaDtor(void* object) {
  DeleteGroupRsp* _this = reinterpret_cast< DeleteGroupRsp* >(object);
  (void)_this;
}
void DeleteGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupRsp& DeleteGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteGroupRsp)
  return target;
}

size_t DeleteGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteGroupRsp)
    MergeFrom(*source);
  }
}

void DeleteGroupRsp::MergeFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRsp::CopyFrom(const DeleteGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRsp::IsInitialized() const {
  return true;
}

void DeleteGroupRsp::InternalSwap(DeleteGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberAccountRqst::InitAsDefaultInstance() {
}
class AddGroupMemberAccountRqst::_Internal {
 public:
};

AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRqst)
}
AddGroupMemberAccountRqst::AddGroupMemberAccountRqst(const AddGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRqst)
}

void AddGroupMemberAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddGroupMemberAccountRqst_resource_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddGroupMemberAccountRqst::~AddGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddGroupMemberAccountRqst::ArenaDtor(void* object) {
  AddGroupMemberAccountRqst* _this = reinterpret_cast< AddGroupMemberAccountRqst* >(object);
  (void)_this;
}
void AddGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberAccountRqst& AddGroupMemberAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRqst)
  return target;
}

size_t AddGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRqst::MergeFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRqst::CopyFrom(const AddGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRqst::InternalSwap(AddGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberAccountRsp::InitAsDefaultInstance() {
}
class AddGroupMemberAccountRsp::_Internal {
 public:
};

AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddGroupMemberAccountRsp)
}
AddGroupMemberAccountRsp::AddGroupMemberAccountRsp(const AddGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddGroupMemberAccountRsp)
}

void AddGroupMemberAccountRsp::SharedCtor() {
  result_ = false;
}

AddGroupMemberAccountRsp::~AddGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddGroupMemberAccountRsp::ArenaDtor(void* object) {
  AddGroupMemberAccountRsp* _this = reinterpret_cast< AddGroupMemberAccountRsp* >(object);
  (void)_this;
}
void AddGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberAccountRsp& AddGroupMemberAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddGroupMemberAccountRsp)
  return target;
}

size_t AddGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void AddGroupMemberAccountRsp::MergeFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberAccountRsp::CopyFrom(const AddGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void AddGroupMemberAccountRsp::InternalSwap(AddGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberAccountRqst::InitAsDefaultInstance() {
}
class RemoveGroupMemberAccountRqst::_Internal {
 public:
};

RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRqst)
}
RemoveGroupMemberAccountRqst::RemoveGroupMemberAccountRqst(const RemoveGroupMemberAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRqst)
}

void RemoveGroupMemberAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base);
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveGroupMemberAccountRqst::~RemoveGroupMemberAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveGroupMemberAccountRqst::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRqst* _this = reinterpret_cast< RemoveGroupMemberAccountRqst* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberAccountRqst& RemoveGroupMemberAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string groupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveGroupMemberAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_groupid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveGroupMemberAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRqst)
  return target;
}

size_t RemoveGroupMemberAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string groupId = 1;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRqst::MergeFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveGroupMemberAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRqst::CopyFrom(const RemoveGroupMemberAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRqst::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRqst::InternalSwap(RemoveGroupMemberAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberAccountRsp::InitAsDefaultInstance() {
}
class RemoveGroupMemberAccountRsp::_Internal {
 public:
};

RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveGroupMemberAccountRsp)
}
RemoveGroupMemberAccountRsp::RemoveGroupMemberAccountRsp(const RemoveGroupMemberAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveGroupMemberAccountRsp)
}

void RemoveGroupMemberAccountRsp::SharedCtor() {
  result_ = false;
}

RemoveGroupMemberAccountRsp::~RemoveGroupMemberAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveGroupMemberAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveGroupMemberAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveGroupMemberAccountRsp::ArenaDtor(void* object) {
  RemoveGroupMemberAccountRsp* _this = reinterpret_cast< RemoveGroupMemberAccountRsp* >(object);
  (void)_this;
}
void RemoveGroupMemberAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveGroupMemberAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberAccountRsp& RemoveGroupMemberAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGroupMemberAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveGroupMemberAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveGroupMemberAccountRsp)
  return target;
}

size_t RemoveGroupMemberAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveGroupMemberAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveGroupMemberAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveGroupMemberAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberAccountRsp::MergeFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveGroupMemberAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveGroupMemberAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberAccountRsp::CopyFrom(const RemoveGroupMemberAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveGroupMemberAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberAccountRsp::IsInitialized() const {
  return true;
}

void RemoveGroupMemberAccountRsp::InternalSwap(RemoveGroupMemberAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Organization::InitAsDefaultInstance() {
}
class Organization::_Internal {
 public:
};

Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena),
  groups_(arena),
  roles_(arena),
  applications_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_),
      groups_(from.groups_),
      roles_(from.roles_),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Organization)
}

void Organization::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Organization_resource_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:resource.Organization)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Organization::ArenaDtor(void* object) {
  Organization* _this = reinterpret_cast< Organization* >(object);
  (void)_this;
}
void Organization::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Organization& Organization::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Organization_resource_2eproto.base);
  return *internal_default_instance();
}


void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  groups_.Clear();
  roles_.Clear();
  applications_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string accounts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_accounts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.accounts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string groups = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_groups();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.groups"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string applications = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_applications();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Organization.applications"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Organization::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Organization)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string accounts = 3;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; i++) {
    const auto& s = this->_internal_accounts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.accounts");
    target = stream->WriteString(3, s, target);
  }

  // repeated string groups = 4;
  for (int i = 0, n = this->_internal_groups_size(); i < n; i++) {
    const auto& s = this->_internal_groups(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.groups");
    target = stream->WriteString(4, s, target);
  }

  // repeated string roles = 5;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.roles");
    target = stream->WriteString(5, s, target);
  }

  // repeated string applications = 6;
  for (int i = 0, n = this->_internal_applications_size(); i < n; i++) {
    const auto& s = this->_internal_applications(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Organization.applications");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Organization)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(accounts_.size());
  for (int i = 0, n = accounts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      accounts_.Get(i));
  }

  // repeated string groups = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(groups_.size());
  for (int i = 0, n = groups_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      groups_.Get(i));
  }

  // repeated string roles = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // repeated string applications = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(applications_.size());
  for (int i = 0, n = applications_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      applications_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Organization::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  const Organization* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Organization>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Organization)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Organization)
    MergeFrom(*source);
  }
}

void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
  groups_.MergeFrom(from.groups_);
  roles_.MergeFrom(from.roles_);
  applications_.MergeFrom(from.applications_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Organization::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
  groups_.InternalSwap(&other->groups_);
  roles_.InternalSwap(&other->roles_);
  applications_.InternalSwap(&other->applications_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOrganizationRqst::InitAsDefaultInstance() {
  ::resource::_CreateOrganizationRqst_default_instance_._instance.get_mutable()->organization_ = const_cast< ::resource::Organization*>(
      ::resource::Organization::internal_default_instance());
}
class CreateOrganizationRqst::_Internal {
 public:
  static const ::resource::Organization& organization(const CreateOrganizationRqst* msg);
};

const ::resource::Organization&
CreateOrganizationRqst::_Internal::organization(const CreateOrganizationRqst* msg) {
  return *msg->organization_;
}
CreateOrganizationRqst::CreateOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRqst)
}
CreateOrganizationRqst::CreateOrganizationRqst(const CreateOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::resource::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRqst)
}

void CreateOrganizationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateOrganizationRqst_resource_2eproto.base);
  organization_ = nullptr;
}

CreateOrganizationRqst::~CreateOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void CreateOrganizationRqst::ArenaDtor(void* object) {
  CreateOrganizationRqst* _this = reinterpret_cast< CreateOrganizationRqst* >(object);
  (void)_this;
}
void CreateOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationRqst& CreateOrganizationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Organization organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::organization(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRqst)
  return target;
}

size_t CreateOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Organization organization = 1;
  if (this->has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRqst)
    MergeFrom(*source);
  }
}

void CreateOrganizationRqst::MergeFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_organization()) {
    _internal_mutable_organization()->::resource::Organization::MergeFrom(from._internal_organization());
  }
}

void CreateOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRqst::CopyFrom(const CreateOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRqst::IsInitialized() const {
  return true;
}

void CreateOrganizationRqst::InternalSwap(CreateOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOrganizationRsp::InitAsDefaultInstance() {
}
class CreateOrganizationRsp::_Internal {
 public:
};

CreateOrganizationRsp::CreateOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.CreateOrganizationRsp)
}
CreateOrganizationRsp::CreateOrganizationRsp(const CreateOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.CreateOrganizationRsp)
}

void CreateOrganizationRsp::SharedCtor() {
  result_ = false;
}

CreateOrganizationRsp::~CreateOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.CreateOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateOrganizationRsp::ArenaDtor(void* object) {
  CreateOrganizationRsp* _this = reinterpret_cast< CreateOrganizationRsp* >(object);
  (void)_this;
}
void CreateOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationRsp& CreateOrganizationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.CreateOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.CreateOrganizationRsp)
  return target;
}

size_t CreateOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.CreateOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.CreateOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.CreateOrganizationRsp)
    MergeFrom(*source);
  }
}

void CreateOrganizationRsp::MergeFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.CreateOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CreateOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRsp::CopyFrom(const CreateOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.CreateOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRsp::IsInitialized() const {
  return true;
}

void CreateOrganizationRsp::InternalSwap(CreateOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationsRqst::InitAsDefaultInstance() {
}
class GetOrganizationsRqst::_Internal {
 public:
};

GetOrganizationsRqst::GetOrganizationsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRqst)
}
GetOrganizationsRqst::GetOrganizationsRqst(const GetOrganizationsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRqst)
}

void GetOrganizationsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOrganizationsRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOrganizationsRqst::~GetOrganizationsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOrganizationsRqst::ArenaDtor(void* object) {
  GetOrganizationsRqst* _this = reinterpret_cast< GetOrganizationsRqst* >(object);
  (void)_this;
}
void GetOrganizationsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationsRqst& GetOrganizationsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetOrganizationsRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetOrganizationsRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRqst)
  return target;
}

size_t GetOrganizationsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRqst)
    MergeFrom(*source);
  }
}

void GetOrganizationsRqst::MergeFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetOrganizationsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRqst::CopyFrom(const GetOrganizationsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRqst::IsInitialized() const {
  return true;
}

void GetOrganizationsRqst::InternalSwap(GetOrganizationsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationsRsp::InitAsDefaultInstance() {
}
class GetOrganizationsRsp::_Internal {
 public:
};

GetOrganizationsRsp::GetOrganizationsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  organizations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetOrganizationsRsp)
}
GetOrganizationsRsp::GetOrganizationsRsp(const GetOrganizationsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetOrganizationsRsp)
}

void GetOrganizationsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOrganizationsRsp_resource_2eproto.base);
}

GetOrganizationsRsp::~GetOrganizationsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetOrganizationsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOrganizationsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOrganizationsRsp::ArenaDtor(void* object) {
  GetOrganizationsRsp* _this = reinterpret_cast< GetOrganizationsRsp* >(object);
  (void)_this;
}
void GetOrganizationsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationsRsp& GetOrganizationsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Organization organizations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetOrganizationsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_organizations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_organizations(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetOrganizationsRsp)
  return target;
}

size_t GetOrganizationsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetOrganizationsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Organization organizations = 1;
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetOrganizationsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetOrganizationsRsp)
    MergeFrom(*source);
  }
}

void GetOrganizationsRsp::MergeFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetOrganizationsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
}

void GetOrganizationsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationsRsp::CopyFrom(const GetOrganizationsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetOrganizationsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsRsp::IsInitialized() const {
  return true;
}

void GetOrganizationsRsp::InternalSwap(GetOrganizationsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationRqst::InitAsDefaultInstance() {
}
class DeleteOrganizationRqst::_Internal {
 public:
};

DeleteOrganizationRqst::DeleteOrganizationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRqst)
}
DeleteOrganizationRqst::DeleteOrganizationRqst(const DeleteOrganizationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization().empty()) {
    organization_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organization(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRqst)
}

void DeleteOrganizationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteOrganizationRqst_resource_2eproto.base);
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteOrganizationRqst::~DeleteOrganizationRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organization_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteOrganizationRqst::ArenaDtor(void* object) {
  DeleteOrganizationRqst* _this = reinterpret_cast< DeleteOrganizationRqst* >(object);
  (void)_this;
}
void DeleteOrganizationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationRqst& DeleteOrganizationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteOrganizationRqst.organization"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization().data(), static_cast<int>(this->_internal_organization().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteOrganizationRqst.organization");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRqst)
  return target;
}

size_t DeleteOrganizationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization = 1;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRqst)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRqst::MergeFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organization().size() > 0) {
    _internal_set_organization(from._internal_organization());
  }
}

void DeleteOrganizationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRqst::CopyFrom(const DeleteOrganizationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRqst::IsInitialized() const {
  return true;
}

void DeleteOrganizationRqst::InternalSwap(DeleteOrganizationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organization_.Swap(&other->organization_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationRsp::InitAsDefaultInstance() {
}
class DeleteOrganizationRsp::_Internal {
 public:
};

DeleteOrganizationRsp::DeleteOrganizationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteOrganizationRsp)
}
DeleteOrganizationRsp::DeleteOrganizationRsp(const DeleteOrganizationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteOrganizationRsp)
}

void DeleteOrganizationRsp::SharedCtor() {
  result_ = false;
}

DeleteOrganizationRsp::~DeleteOrganizationRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteOrganizationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOrganizationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteOrganizationRsp::ArenaDtor(void* object) {
  DeleteOrganizationRsp* _this = reinterpret_cast< DeleteOrganizationRsp* >(object);
  (void)_this;
}
void DeleteOrganizationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOrganizationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationRsp& DeleteOrganizationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteOrganizationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteOrganizationRsp)
  return target;
}

size_t DeleteOrganizationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteOrganizationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteOrganizationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteOrganizationRsp)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRsp::MergeFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteOrganizationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteOrganizationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRsp::CopyFrom(const DeleteOrganizationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteOrganizationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRsp::IsInitialized() const {
  return true;
}

void DeleteOrganizationRsp::InternalSwap(DeleteOrganizationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Peer::InitAsDefaultInstance() {
}
class Peer::_Internal {
 public:
};

Peer::Peer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Peer)
}
Peer::Peer(const Peer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Peer)
}

void Peer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Peer_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:resource.Peer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Peer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Peer::ArenaDtor(void* object) {
  Peer* _this = reinterpret_cast< Peer* >(object);
  (void)_this;
}
void Peer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Peer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Peer& Peer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Peer_resource_2eproto.base);
  return *internal_default_instance();
}


void Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Peer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string actions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Peer.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Peer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // repeated string actions = 2;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Peer.actions");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Peer)
  return target;
}

size_t Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Peer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Peer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  const Peer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Peer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Peer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Peer)
    MergeFrom(*source);
  }
}

void Peer::MergeFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
}

void Peer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Peer::CopyFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Peer::IsInitialized() const {
  return true;
}

void Peer::InternalSwap(Peer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Peer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRqst::InitAsDefaultInstance() {
  ::resource::_RegisterPeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::resource::Peer*>(
      ::resource::Peer::internal_default_instance());
}
class RegisterPeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const RegisterPeerRqst* msg);
};

const ::resource::Peer&
RegisterPeerRqst::_Internal::peer(const RegisterPeerRqst* msg) {
  return *msg->peer_;
}
RegisterPeerRqst::RegisterPeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRqst)
}
RegisterPeerRqst::RegisterPeerRqst(const RegisterPeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRqst)
}

void RegisterPeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPeerRqst_resource_2eproto.base);
  peer_ = nullptr;
}

RegisterPeerRqst::~RegisterPeerRqst() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void RegisterPeerRqst::ArenaDtor(void* object) {
  RegisterPeerRqst* _this = reinterpret_cast< RegisterPeerRqst* >(object);
  (void)_this;
}
void RegisterPeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRqst& RegisterPeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRqst)
  return target;
}

size_t RegisterPeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRqst)
    MergeFrom(*source);
  }
}

void RegisterPeerRqst::MergeFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void RegisterPeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRqst::CopyFrom(const RegisterPeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRqst::IsInitialized() const {
  return true;
}

void RegisterPeerRqst::InternalSwap(RegisterPeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPeerRsp::InitAsDefaultInstance() {
}
class RegisterPeerRsp::_Internal {
 public:
};

RegisterPeerRsp::RegisterPeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RegisterPeerRsp)
}
RegisterPeerRsp::RegisterPeerRsp(const RegisterPeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RegisterPeerRsp)
}

void RegisterPeerRsp::SharedCtor() {
  result_ = false;
}

RegisterPeerRsp::~RegisterPeerRsp() {
  // @@protoc_insertion_point(destructor:resource.RegisterPeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RegisterPeerRsp::ArenaDtor(void* object) {
  RegisterPeerRsp* _this = reinterpret_cast< RegisterPeerRsp* >(object);
  (void)_this;
}
void RegisterPeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPeerRsp& RegisterPeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPeerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RegisterPeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RegisterPeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RegisterPeerRsp)
  return target;
}

size_t RegisterPeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RegisterPeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RegisterPeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RegisterPeerRsp)
    MergeFrom(*source);
  }
}

void RegisterPeerRsp::MergeFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RegisterPeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RegisterPeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPeerRsp::CopyFrom(const RegisterPeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RegisterPeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPeerRsp::IsInitialized() const {
  return true;
}

void RegisterPeerRsp::InternalSwap(RegisterPeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRqst::InitAsDefaultInstance() {
}
class GetPeersRqst::_Internal {
 public:
};

GetPeersRqst::GetPeersRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRqst)
}
GetPeersRqst::GetPeersRqst(const GetPeersRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRqst)
}

void GetPeersRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPeersRqst::~GetPeersRqst() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeersRqst::ArenaDtor(void* object) {
  GetPeersRqst* _this = reinterpret_cast< GetPeersRqst* >(object);
  (void)_this;
}
void GetPeersRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRqst& GetPeersRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetPeersRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetPeersRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRqst)
  return target;
}

size_t GetPeersRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRqst)
    MergeFrom(*source);
  }
}

void GetPeersRqst::MergeFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetPeersRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRqst::CopyFrom(const GetPeersRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRqst::IsInitialized() const {
  return true;
}

void GetPeersRqst::InternalSwap(GetPeersRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPeersRsp::InitAsDefaultInstance() {
}
class GetPeersRsp::_Internal {
 public:
};

GetPeersRsp::GetPeersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  peers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetPeersRsp)
}
GetPeersRsp::GetPeersRsp(const GetPeersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetPeersRsp)
}

void GetPeersRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPeersRsp_resource_2eproto.base);
}

GetPeersRsp::~GetPeersRsp() {
  // @@protoc_insertion_point(destructor:resource.GetPeersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPeersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPeersRsp::ArenaDtor(void* object) {
  GetPeersRsp* _this = reinterpret_cast< GetPeersRsp* >(object);
  (void)_this;
}
void GetPeersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPeersRsp& GetPeersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPeersRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetPeersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Peer peers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_peers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPeersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetPeersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_peers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_peers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetPeersRsp)
  return target;
}

size_t GetPeersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetPeersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Peer peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->peers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPeersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetPeersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetPeersRsp)
    MergeFrom(*source);
  }
}

void GetPeersRsp::MergeFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetPeersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void GetPeersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeersRsp::CopyFrom(const GetPeersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetPeersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeersRsp::IsInitialized() const {
  return true;
}

void GetPeersRsp::InternalSwap(GetPeersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  peers_.InternalSwap(&other->peers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRqst::InitAsDefaultInstance() {
  ::resource::_DeletePeerRqst_default_instance_._instance.get_mutable()->peer_ = const_cast< ::resource::Peer*>(
      ::resource::Peer::internal_default_instance());
}
class DeletePeerRqst::_Internal {
 public:
  static const ::resource::Peer& peer(const DeletePeerRqst* msg);
};

const ::resource::Peer&
DeletePeerRqst::_Internal::peer(const DeletePeerRqst* msg) {
  return *msg->peer_;
}
DeletePeerRqst::DeletePeerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRqst)
}
DeletePeerRqst::DeletePeerRqst(const DeletePeerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_peer()) {
    peer_ = new ::resource::Peer(*from.peer_);
  } else {
    peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRqst)
}

void DeletePeerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeletePeerRqst_resource_2eproto.base);
  peer_ = nullptr;
}

DeletePeerRqst::~DeletePeerRqst() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete peer_;
}

void DeletePeerRqst::ArenaDtor(void* object) {
  DeletePeerRqst* _this = reinterpret_cast< DeletePeerRqst* >(object);
  (void)_this;
}
void DeletePeerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRqst& DeletePeerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && peer_ != nullptr) {
    delete peer_;
  }
  peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Peer peer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRqst)
  return target;
}

size_t DeletePeerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Peer peer = 1;
  if (this->has_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRqst)
    MergeFrom(*source);
  }
}

void DeletePeerRqst::MergeFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_peer()) {
    _internal_mutable_peer()->::resource::Peer::MergeFrom(from._internal_peer());
  }
}

void DeletePeerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRqst::CopyFrom(const DeletePeerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRqst::IsInitialized() const {
  return true;
}

void DeletePeerRqst::InternalSwap(DeletePeerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(peer_, other->peer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePeerRsp::InitAsDefaultInstance() {
}
class DeletePeerRsp::_Internal {
 public:
};

DeletePeerRsp::DeletePeerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeletePeerRsp)
}
DeletePeerRsp::DeletePeerRsp(const DeletePeerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeletePeerRsp)
}

void DeletePeerRsp::SharedCtor() {
  result_ = false;
}

DeletePeerRsp::~DeletePeerRsp() {
  // @@protoc_insertion_point(destructor:resource.DeletePeerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeletePeerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeletePeerRsp::ArenaDtor(void* object) {
  DeletePeerRsp* _this = reinterpret_cast< DeletePeerRsp* >(object);
  (void)_this;
}
void DeletePeerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePeerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePeerRsp& DeletePeerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePeerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeletePeerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePeerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePeerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeletePeerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeletePeerRsp)
  return target;
}

size_t DeletePeerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeletePeerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePeerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePeerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePeerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeletePeerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeletePeerRsp)
    MergeFrom(*source);
  }
}

void DeletePeerRsp::MergeFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeletePeerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeletePeerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePeerRsp::CopyFrom(const DeletePeerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeletePeerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePeerRsp::IsInitialized() const {
  return true;
}

void DeletePeerRsp::InternalSwap(DeletePeerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePeerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionRqst::InitAsDefaultInstance() {
}
class AddRoleActionRqst::_Internal {
 public:
};

AddRoleActionRqst::AddRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionRqst)
}
AddRoleActionRqst::AddRoleActionRqst(const AddRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionRqst)
}

void AddRoleActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRoleActionRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRoleActionRqst::~AddRoleActionRqst() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRoleActionRqst::ArenaDtor(void* object) {
  AddRoleActionRqst* _this = reinterpret_cast< AddRoleActionRqst* >(object);
  (void)_this;
}
void AddRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionRqst& AddRoleActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionRqst)
  return target;
}

size_t AddRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionRqst)
    MergeFrom(*source);
  }
}

void AddRoleActionRqst::MergeFrom(const AddRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionRqst::CopyFrom(const AddRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionRqst::IsInitialized() const {
  return true;
}

void AddRoleActionRqst::InternalSwap(AddRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRoleActionRsp::InitAsDefaultInstance() {
}
class AddRoleActionRsp::_Internal {
 public:
};

AddRoleActionRsp::AddRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddRoleActionRsp)
}
AddRoleActionRsp::AddRoleActionRsp(const AddRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddRoleActionRsp)
}

void AddRoleActionRsp::SharedCtor() {
  result_ = false;
}

AddRoleActionRsp::~AddRoleActionRsp() {
  // @@protoc_insertion_point(destructor:resource.AddRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddRoleActionRsp::ArenaDtor(void* object) {
  AddRoleActionRsp* _this = reinterpret_cast< AddRoleActionRsp* >(object);
  (void)_this;
}
void AddRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRoleActionRsp& AddRoleActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRoleActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddRoleActionRsp)
  return target;
}

size_t AddRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddRoleActionRsp)
    MergeFrom(*source);
  }
}

void AddRoleActionRsp::MergeFrom(const AddRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoleActionRsp::CopyFrom(const AddRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleActionRsp::IsInitialized() const {
  return true;
}

void AddRoleActionRsp::InternalSwap(AddRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRqst::InitAsDefaultInstance() {
}
class RemoveRoleActionRqst::_Internal {
 public:
};

RemoveRoleActionRqst::RemoveRoleActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRqst)
}
RemoveRoleActionRqst::RemoveRoleActionRqst(const RemoveRoleActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRqst)
}

void RemoveRoleActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveRoleActionRqst_resource_2eproto.base);
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveRoleActionRqst::~RemoveRoleActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveRoleActionRqst::ArenaDtor(void* object) {
  RemoveRoleActionRqst* _this = reinterpret_cast< RemoveRoleActionRqst* >(object);
  (void)_this;
}
void RemoveRoleActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRqst& RemoveRoleActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveRoleActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roleid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveRoleActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRqst)
  return target;
}

size_t RemoveRoleActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roleId = 1;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRqst)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRqst::MergeFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveRoleActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRqst::CopyFrom(const RemoveRoleActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRqst::IsInitialized() const {
  return true;
}

void RemoveRoleActionRqst::InternalSwap(RemoveRoleActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveRoleActionRsp::InitAsDefaultInstance() {
}
class RemoveRoleActionRsp::_Internal {
 public:
};

RemoveRoleActionRsp::RemoveRoleActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveRoleActionRsp)
}
RemoveRoleActionRsp::RemoveRoleActionRsp(const RemoveRoleActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveRoleActionRsp)
}

void RemoveRoleActionRsp::SharedCtor() {
  result_ = false;
}

RemoveRoleActionRsp::~RemoveRoleActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveRoleActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveRoleActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveRoleActionRsp::ArenaDtor(void* object) {
  RemoveRoleActionRsp* _this = reinterpret_cast< RemoveRoleActionRsp* >(object);
  (void)_this;
}
void RemoveRoleActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveRoleActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveRoleActionRsp& RemoveRoleActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveRoleActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveRoleActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveRoleActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveRoleActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveRoleActionRsp)
  return target;
}

size_t RemoveRoleActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveRoleActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRoleActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRoleActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveRoleActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveRoleActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveRoleActionRsp)
    MergeFrom(*source);
  }
}

void RemoveRoleActionRsp::MergeFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveRoleActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveRoleActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoleActionRsp::CopyFrom(const RemoveRoleActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveRoleActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleActionRsp::IsInitialized() const {
  return true;
}

void RemoveRoleActionRsp::InternalSwap(RemoveRoleActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionRqst::InitAsDefaultInstance() {
}
class AddApplicationActionRqst::_Internal {
 public:
};

AddApplicationActionRqst::AddApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionRqst)
}
AddApplicationActionRqst::AddApplicationActionRqst(const AddApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionRqst)
}

void AddApplicationActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddApplicationActionRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddApplicationActionRqst::~AddApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddApplicationActionRqst::ArenaDtor(void* object) {
  AddApplicationActionRqst* _this = reinterpret_cast< AddApplicationActionRqst* >(object);
  (void)_this;
}
void AddApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionRqst& AddApplicationActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionRqst)
  return target;
}

size_t AddApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionRqst)
    MergeFrom(*source);
  }
}

void AddApplicationActionRqst::MergeFrom(const AddApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionRqst::CopyFrom(const AddApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionRqst::IsInitialized() const {
  return true;
}

void AddApplicationActionRqst::InternalSwap(AddApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddApplicationActionRsp::InitAsDefaultInstance() {
}
class AddApplicationActionRsp::_Internal {
 public:
};

AddApplicationActionRsp::AddApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddApplicationActionRsp)
}
AddApplicationActionRsp::AddApplicationActionRsp(const AddApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddApplicationActionRsp)
}

void AddApplicationActionRsp::SharedCtor() {
  result_ = false;
}

AddApplicationActionRsp::~AddApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:resource.AddApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddApplicationActionRsp::ArenaDtor(void* object) {
  AddApplicationActionRsp* _this = reinterpret_cast< AddApplicationActionRsp* >(object);
  (void)_this;
}
void AddApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddApplicationActionRsp& AddApplicationActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddApplicationActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddApplicationActionRsp)
  return target;
}

size_t AddApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddApplicationActionRsp)
    MergeFrom(*source);
  }
}

void AddApplicationActionRsp::MergeFrom(const AddApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddApplicationActionRsp::CopyFrom(const AddApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddApplicationActionRsp::IsInitialized() const {
  return true;
}

void AddApplicationActionRsp::InternalSwap(AddApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddApplicationActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRqst::InitAsDefaultInstance() {
}
class RemoveApplicationActionRqst::_Internal {
 public:
};

RemoveApplicationActionRqst::RemoveApplicationActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRqst)
}
RemoveApplicationActionRqst::RemoveApplicationActionRqst(const RemoveApplicationActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRqst)
}

void RemoveApplicationActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveApplicationActionRqst_resource_2eproto.base);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveApplicationActionRqst::~RemoveApplicationActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveApplicationActionRqst::ArenaDtor(void* object) {
  RemoveApplicationActionRqst* _this = reinterpret_cast< RemoveApplicationActionRqst* >(object);
  (void)_this;
}
void RemoveApplicationActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRqst& RemoveApplicationActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveApplicationActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveApplicationActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRqst)
  return target;
}

size_t RemoveApplicationActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationId = 1;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRqst)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRqst::MergeFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemoveApplicationActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRqst::CopyFrom(const RemoveApplicationActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRqst::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRqst::InternalSwap(RemoveApplicationActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveApplicationActionRsp::InitAsDefaultInstance() {
}
class RemoveApplicationActionRsp::_Internal {
 public:
};

RemoveApplicationActionRsp::RemoveApplicationActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveApplicationActionRsp)
}
RemoveApplicationActionRsp::RemoveApplicationActionRsp(const RemoveApplicationActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveApplicationActionRsp)
}

void RemoveApplicationActionRsp::SharedCtor() {
  result_ = false;
}

RemoveApplicationActionRsp::~RemoveApplicationActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveApplicationActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveApplicationActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveApplicationActionRsp::ArenaDtor(void* object) {
  RemoveApplicationActionRsp* _this = reinterpret_cast< RemoveApplicationActionRsp* >(object);
  (void)_this;
}
void RemoveApplicationActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveApplicationActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveApplicationActionRsp& RemoveApplicationActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveApplicationActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveApplicationActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveApplicationActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveApplicationActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveApplicationActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveApplicationActionRsp)
  return target;
}

size_t RemoveApplicationActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveApplicationActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveApplicationActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveApplicationActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveApplicationActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveApplicationActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveApplicationActionRsp)
    MergeFrom(*source);
  }
}

void RemoveApplicationActionRsp::MergeFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveApplicationActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveApplicationActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveApplicationActionRsp::CopyFrom(const RemoveApplicationActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveApplicationActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveApplicationActionRsp::IsInitialized() const {
  return true;
}

void RemoveApplicationActionRsp::InternalSwap(RemoveApplicationActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveApplicationActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionRqst::InitAsDefaultInstance() {
}
class AddPeerActionRqst::_Internal {
 public:
};

AddPeerActionRqst::AddPeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionRqst)
}
AddPeerActionRqst::AddPeerActionRqst(const AddPeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionRqst)
}

void AddPeerActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPeerActionRqst_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddPeerActionRqst::~AddPeerActionRqst() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPeerActionRqst::ArenaDtor(void* object) {
  AddPeerActionRqst* _this = reinterpret_cast< AddPeerActionRqst* >(object);
  (void)_this;
}
void AddPeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionRqst& AddPeerActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddPeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddPeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionRqst)
  return target;
}

size_t AddPeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionRqst)
    MergeFrom(*source);
  }
}

void AddPeerActionRqst::MergeFrom(const AddPeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void AddPeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionRqst::CopyFrom(const AddPeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionRqst::IsInitialized() const {
  return true;
}

void AddPeerActionRqst::InternalSwap(AddPeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPeerActionRsp::InitAsDefaultInstance() {
}
class AddPeerActionRsp::_Internal {
 public:
};

AddPeerActionRsp::AddPeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddPeerActionRsp)
}
AddPeerActionRsp::AddPeerActionRsp(const AddPeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddPeerActionRsp)
}

void AddPeerActionRsp::SharedCtor() {
  result_ = false;
}

AddPeerActionRsp::~AddPeerActionRsp() {
  // @@protoc_insertion_point(destructor:resource.AddPeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPeerActionRsp::ArenaDtor(void* object) {
  AddPeerActionRsp* _this = reinterpret_cast< AddPeerActionRsp* >(object);
  (void)_this;
}
void AddPeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPeerActionRsp& AddPeerActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPeerActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddPeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddPeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddPeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddPeerActionRsp)
  return target;
}

size_t AddPeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddPeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddPeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddPeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddPeerActionRsp)
    MergeFrom(*source);
  }
}

void AddPeerActionRsp::MergeFrom(const AddPeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddPeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddPeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddPeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerActionRsp::CopyFrom(const AddPeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddPeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerActionRsp::IsInitialized() const {
  return true;
}

void AddPeerActionRsp::InternalSwap(AddPeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRqst::InitAsDefaultInstance() {
}
class RemovePeerActionRqst::_Internal {
 public:
};

RemovePeerActionRqst::RemovePeerActionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRqst)
}
RemovePeerActionRqst::RemovePeerActionRqst(const RemovePeerActionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain().empty()) {
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain(),
      GetArena());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRqst)
}

void RemovePeerActionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemovePeerActionRqst_resource_2eproto.base);
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemovePeerActionRqst::~RemovePeerActionRqst() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerActionRqst::ArenaDtor(void* object) {
  RemovePeerActionRqst* _this = reinterpret_cast< RemovePeerActionRqst* >(object);
  (void)_this;
}
void RemovePeerActionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRqst& RemovePeerActionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemovePeerActionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemovePeerActionRqst.action");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRqst)
  return target;
}

size_t RemovePeerActionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRqst)
    MergeFrom(*source);
  }
}

void RemovePeerActionRqst::MergeFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain().size() > 0) {
    _internal_set_domain(from._internal_domain());
  }
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void RemovePeerActionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRqst::CopyFrom(const RemovePeerActionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRqst::IsInitialized() const {
  return true;
}

void RemovePeerActionRqst::InternalSwap(RemovePeerActionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  domain_.Swap(&other->domain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePeerActionRsp::InitAsDefaultInstance() {
}
class RemovePeerActionRsp::_Internal {
 public:
};

RemovePeerActionRsp::RemovePeerActionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemovePeerActionRsp)
}
RemovePeerActionRsp::RemovePeerActionRsp(const RemovePeerActionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemovePeerActionRsp)
}

void RemovePeerActionRsp::SharedCtor() {
  result_ = false;
}

RemovePeerActionRsp::~RemovePeerActionRsp() {
  // @@protoc_insertion_point(destructor:resource.RemovePeerActionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePeerActionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePeerActionRsp::ArenaDtor(void* object) {
  RemovePeerActionRsp* _this = reinterpret_cast< RemovePeerActionRsp* >(object);
  (void)_this;
}
void RemovePeerActionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePeerActionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePeerActionRsp& RemovePeerActionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePeerActionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemovePeerActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePeerActionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePeerActionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemovePeerActionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemovePeerActionRsp)
  return target;
}

size_t RemovePeerActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemovePeerActionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerActionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerActionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePeerActionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemovePeerActionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemovePeerActionRsp)
    MergeFrom(*source);
  }
}

void RemovePeerActionRsp::MergeFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemovePeerActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemovePeerActionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerActionRsp::CopyFrom(const RemovePeerActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemovePeerActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerActionRsp::IsInitialized() const {
  return true;
}

void RemovePeerActionRsp::InternalSwap(RemovePeerActionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePeerActionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationAccountRqst::InitAsDefaultInstance() {
}
class AddOrganizationAccountRqst::_Internal {
 public:
};

AddOrganizationAccountRqst::AddOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRqst)
}
AddOrganizationAccountRqst::AddOrganizationAccountRqst(const AddOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRqst)
}

void AddOrganizationAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationAccountRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationAccountRqst::~AddOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationAccountRqst::ArenaDtor(void* object) {
  AddOrganizationAccountRqst* _this = reinterpret_cast< AddOrganizationAccountRqst* >(object);
  (void)_this;
}
void AddOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationAccountRqst& AddOrganizationAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRqst)
  return target;
}

size_t AddOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRqst::MergeFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void AddOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRqst::CopyFrom(const AddOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRqst::InternalSwap(AddOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationAccountRsp::InitAsDefaultInstance() {
}
class AddOrganizationAccountRsp::_Internal {
 public:
};

AddOrganizationAccountRsp::AddOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationAccountRsp)
}
AddOrganizationAccountRsp::AddOrganizationAccountRsp(const AddOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationAccountRsp)
}

void AddOrganizationAccountRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationAccountRsp::~AddOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationAccountRsp::ArenaDtor(void* object) {
  AddOrganizationAccountRsp* _this = reinterpret_cast< AddOrganizationAccountRsp* >(object);
  (void)_this;
}
void AddOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationAccountRsp& AddOrganizationAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationAccountRsp)
  return target;
}

size_t AddOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationAccountRsp::MergeFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationAccountRsp::CopyFrom(const AddOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void AddOrganizationAccountRsp::InternalSwap(AddOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationGroupRqst::InitAsDefaultInstance() {
}
class AddOrganizationGroupRqst::_Internal {
 public:
};

AddOrganizationGroupRqst::AddOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRqst)
}
AddOrganizationGroupRqst::AddOrganizationGroupRqst(const AddOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRqst)
}

void AddOrganizationGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationGroupRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationGroupRqst::~AddOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationGroupRqst::ArenaDtor(void* object) {
  AddOrganizationGroupRqst* _this = reinterpret_cast< AddOrganizationGroupRqst* >(object);
  (void)_this;
}
void AddOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationGroupRqst& AddOrganizationGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRqst)
  return target;
}

size_t AddOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRqst::MergeFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void AddOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRqst::CopyFrom(const AddOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRqst::InternalSwap(AddOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationGroupRsp::InitAsDefaultInstance() {
}
class AddOrganizationGroupRsp::_Internal {
 public:
};

AddOrganizationGroupRsp::AddOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationGroupRsp)
}
AddOrganizationGroupRsp::AddOrganizationGroupRsp(const AddOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationGroupRsp)
}

void AddOrganizationGroupRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationGroupRsp::~AddOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationGroupRsp::ArenaDtor(void* object) {
  AddOrganizationGroupRsp* _this = reinterpret_cast< AddOrganizationGroupRsp* >(object);
  (void)_this;
}
void AddOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationGroupRsp& AddOrganizationGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationGroupRsp)
  return target;
}

size_t AddOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationGroupRsp::MergeFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationGroupRsp::CopyFrom(const AddOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void AddOrganizationGroupRsp::InternalSwap(AddOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationRoleRqst::InitAsDefaultInstance() {
}
class AddOrganizationRoleRqst::_Internal {
 public:
};

AddOrganizationRoleRqst::AddOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRqst)
}
AddOrganizationRoleRqst::AddOrganizationRoleRqst(const AddOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRqst)
}

void AddOrganizationRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationRoleRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationRoleRqst::~AddOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationRoleRqst::ArenaDtor(void* object) {
  AddOrganizationRoleRqst* _this = reinterpret_cast< AddOrganizationRoleRqst* >(object);
  (void)_this;
}
void AddOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationRoleRqst& AddOrganizationRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRqst)
  return target;
}

size_t AddOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRqst::MergeFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void AddOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRqst::CopyFrom(const AddOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRqst::InternalSwap(AddOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationRoleRsp::InitAsDefaultInstance() {
}
class AddOrganizationRoleRsp::_Internal {
 public:
};

AddOrganizationRoleRsp::AddOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationRoleRsp)
}
AddOrganizationRoleRsp::AddOrganizationRoleRsp(const AddOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationRoleRsp)
}

void AddOrganizationRoleRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationRoleRsp::~AddOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationRoleRsp::ArenaDtor(void* object) {
  AddOrganizationRoleRsp* _this = reinterpret_cast< AddOrganizationRoleRsp* >(object);
  (void)_this;
}
void AddOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationRoleRsp& AddOrganizationRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationRoleRsp)
  return target;
}

size_t AddOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationRoleRsp::MergeFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationRoleRsp::CopyFrom(const AddOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void AddOrganizationRoleRsp::InternalSwap(AddOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationApplicationRqst::InitAsDefaultInstance() {
}
class AddOrganizationApplicationRqst::_Internal {
 public:
};

AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRqst)
}
AddOrganizationApplicationRqst::AddOrganizationApplicationRqst(const AddOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRqst)
}

void AddOrganizationApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddOrganizationApplicationRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddOrganizationApplicationRqst::~AddOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddOrganizationApplicationRqst::ArenaDtor(void* object) {
  AddOrganizationApplicationRqst* _this = reinterpret_cast< AddOrganizationApplicationRqst* >(object);
  (void)_this;
}
void AddOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationApplicationRqst& AddOrganizationApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRqst)
  return target;
}

size_t AddOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRqst::MergeFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void AddOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRqst::CopyFrom(const AddOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRqst::InternalSwap(AddOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddOrganizationApplicationRsp::InitAsDefaultInstance() {
}
class AddOrganizationApplicationRsp::_Internal {
 public:
};

AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddOrganizationApplicationRsp)
}
AddOrganizationApplicationRsp::AddOrganizationApplicationRsp(const AddOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.AddOrganizationApplicationRsp)
}

void AddOrganizationApplicationRsp::SharedCtor() {
  result_ = false;
}

AddOrganizationApplicationRsp::~AddOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.AddOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddOrganizationApplicationRsp::ArenaDtor(void* object) {
  AddOrganizationApplicationRsp* _this = reinterpret_cast< AddOrganizationApplicationRsp* >(object);
  (void)_this;
}
void AddOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddOrganizationApplicationRsp& AddOrganizationApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddOrganizationApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddOrganizationApplicationRsp)
  return target;
}

size_t AddOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void AddOrganizationApplicationRsp::MergeFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrganizationApplicationRsp::CopyFrom(const AddOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void AddOrganizationApplicationRsp::InternalSwap(AddOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrganizationApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationGroupRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationGroupRqst::_Internal {
 public:
};

RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRqst)
}
RemoveOrganizationGroupRqst::RemoveOrganizationGroupRqst(const RemoveOrganizationGroupRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupid().empty()) {
    groupid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_groupid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRqst)
}

void RemoveOrganizationGroupRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationGroupRqst::~RemoveOrganizationGroupRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationGroupRqst::ArenaDtor(void* object) {
  RemoveOrganizationGroupRqst* _this = reinterpret_cast< RemoveOrganizationGroupRqst* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationGroupRqst& RemoveOrganizationGroupRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationGroupRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationGroupRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string groupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationGroupRqst.groupId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_groupid().data(), static_cast<int>(this->_internal_groupid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationGroupRqst.groupId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRqst)
  return target;
}

size_t RemoveOrganizationGroupRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string groupId = 2;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRqst::MergeFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.groupid().size() > 0) {
    _internal_set_groupid(from._internal_groupid());
  }
}

void RemoveOrganizationGroupRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRqst::CopyFrom(const RemoveOrganizationGroupRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRqst::InternalSwap(RemoveOrganizationGroupRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  groupid_.Swap(&other->groupid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationGroupRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationGroupRsp::_Internal {
 public:
};

RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationGroupRsp)
}
RemoveOrganizationGroupRsp::RemoveOrganizationGroupRsp(const RemoveOrganizationGroupRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationGroupRsp)
}

void RemoveOrganizationGroupRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationGroupRsp::~RemoveOrganizationGroupRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationGroupRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationGroupRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationGroupRsp::ArenaDtor(void* object) {
  RemoveOrganizationGroupRsp* _this = reinterpret_cast< RemoveOrganizationGroupRsp* >(object);
  (void)_this;
}
void RemoveOrganizationGroupRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationGroupRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationGroupRsp& RemoveOrganizationGroupRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationGroupRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationGroupRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationGroupRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationGroupRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationGroupRsp)
  return target;
}

size_t RemoveOrganizationGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationGroupRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationGroupRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationGroupRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationGroupRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationGroupRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationGroupRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationGroupRsp::MergeFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationGroupRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationGroupRsp::CopyFrom(const RemoveOrganizationGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationGroupRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationGroupRsp::InternalSwap(RemoveOrganizationGroupRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationGroupRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationRoleRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationRoleRqst::_Internal {
 public:
};

RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRqst)
}
RemoveOrganizationRoleRqst::RemoveOrganizationRoleRqst(const RemoveOrganizationRoleRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roleid().empty()) {
    roleid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roleid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRqst)
}

void RemoveOrganizationRoleRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationRoleRqst::~RemoveOrganizationRoleRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationRoleRqst::ArenaDtor(void* object) {
  RemoveOrganizationRoleRqst* _this = reinterpret_cast< RemoveOrganizationRoleRqst* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationRoleRqst& RemoveOrganizationRoleRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationRoleRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationRoleRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string roleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_roleid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationRoleRqst.roleId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roleid().data(), static_cast<int>(this->_internal_roleid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationRoleRqst.roleId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRqst)
  return target;
}

size_t RemoveOrganizationRoleRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string roleId = 2;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRqst::MergeFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.roleid().size() > 0) {
    _internal_set_roleid(from._internal_roleid());
  }
}

void RemoveOrganizationRoleRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRqst::CopyFrom(const RemoveOrganizationRoleRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRqst::InternalSwap(RemoveOrganizationRoleRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roleid_.Swap(&other->roleid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationRoleRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationRoleRsp::_Internal {
 public:
};

RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationRoleRsp)
}
RemoveOrganizationRoleRsp::RemoveOrganizationRoleRsp(const RemoveOrganizationRoleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationRoleRsp)
}

void RemoveOrganizationRoleRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationRoleRsp::~RemoveOrganizationRoleRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationRoleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationRoleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationRoleRsp::ArenaDtor(void* object) {
  RemoveOrganizationRoleRsp* _this = reinterpret_cast< RemoveOrganizationRoleRsp* >(object);
  (void)_this;
}
void RemoveOrganizationRoleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationRoleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationRoleRsp& RemoveOrganizationRoleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationRoleRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationRoleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationRoleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationRoleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationRoleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationRoleRsp)
  return target;
}

size_t RemoveOrganizationRoleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationRoleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationRoleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationRoleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationRoleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationRoleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationRoleRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationRoleRsp::MergeFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationRoleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationRoleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationRoleRsp::CopyFrom(const RemoveOrganizationRoleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationRoleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationRoleRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationRoleRsp::InternalSwap(RemoveOrganizationRoleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationRoleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationApplicationRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationApplicationRqst::_Internal {
 public:
};

RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRqst)
}
RemoveOrganizationApplicationRqst::RemoveOrganizationApplicationRqst(const RemoveOrganizationApplicationRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_applicationid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRqst)
}

void RemoveOrganizationApplicationRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationApplicationRqst::~RemoveOrganizationApplicationRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationApplicationRqst::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRqst* _this = reinterpret_cast< RemoveOrganizationApplicationRqst* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationApplicationRqst& RemoveOrganizationApplicationRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationApplicationRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationApplicationRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string applicationId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationApplicationRqst.applicationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationApplicationRqst.applicationId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRqst)
  return target;
}

size_t RemoveOrganizationApplicationRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string applicationId = 2;
  if (this->applicationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRqst::MergeFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.applicationid().size() > 0) {
    _internal_set_applicationid(from._internal_applicationid());
  }
}

void RemoveOrganizationApplicationRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRqst::CopyFrom(const RemoveOrganizationApplicationRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRqst::InternalSwap(RemoveOrganizationApplicationRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  applicationid_.Swap(&other->applicationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationApplicationRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationApplicationRsp::_Internal {
 public:
};

RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationApplicationRsp)
}
RemoveOrganizationApplicationRsp::RemoveOrganizationApplicationRsp(const RemoveOrganizationApplicationRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationApplicationRsp)
}

void RemoveOrganizationApplicationRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationApplicationRsp::~RemoveOrganizationApplicationRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationApplicationRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationApplicationRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationApplicationRsp::ArenaDtor(void* object) {
  RemoveOrganizationApplicationRsp* _this = reinterpret_cast< RemoveOrganizationApplicationRsp* >(object);
  (void)_this;
}
void RemoveOrganizationApplicationRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationApplicationRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationApplicationRsp& RemoveOrganizationApplicationRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationApplicationRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationApplicationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationApplicationRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationApplicationRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationApplicationRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationApplicationRsp)
  return target;
}

size_t RemoveOrganizationApplicationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationApplicationRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationApplicationRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationApplicationRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationApplicationRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationApplicationRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationApplicationRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationApplicationRsp::MergeFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationApplicationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationApplicationRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationApplicationRsp::CopyFrom(const RemoveOrganizationApplicationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationApplicationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationApplicationRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationApplicationRsp::InternalSwap(RemoveOrganizationApplicationRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationApplicationRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationAccountRqst::InitAsDefaultInstance() {
}
class RemoveOrganizationAccountRqst::_Internal {
 public:
};

RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRqst)
}
RemoveOrganizationAccountRqst::RemoveOrganizationAccountRqst(const RemoveOrganizationAccountRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organizationid().empty()) {
    organizationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organizationid(),
      GetArena());
  }
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accountid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRqst)
}

void RemoveOrganizationAccountRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base);
  organizationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveOrganizationAccountRqst::~RemoveOrganizationAccountRqst() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  organizationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveOrganizationAccountRqst::ArenaDtor(void* object) {
  RemoveOrganizationAccountRqst* _this = reinterpret_cast< RemoveOrganizationAccountRqst* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationAccountRqst& RemoveOrganizationAccountRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationAccountRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationAccountRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizationid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string organizationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organizationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.organizationId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accountid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.RemoveOrganizationAccountRqst.accountId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organizationid().data(), static_cast<int>(this->_internal_organizationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.organizationId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organizationid(), target);
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.RemoveOrganizationAccountRqst.accountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRqst)
  return target;
}

size_t RemoveOrganizationAccountRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organizationId = 1;
  if (this->organizationid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organizationid());
  }

  // string accountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRqst)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRqst::MergeFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.organizationid().size() > 0) {
    _internal_set_organizationid(from._internal_organizationid());
  }
  if (from.accountid().size() > 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void RemoveOrganizationAccountRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRqst::CopyFrom(const RemoveOrganizationAccountRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRqst::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRqst::InternalSwap(RemoveOrganizationAccountRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  organizationid_.Swap(&other->organizationid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOrganizationAccountRsp::InitAsDefaultInstance() {
}
class RemoveOrganizationAccountRsp::_Internal {
 public:
};

RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.RemoveOrganizationAccountRsp)
}
RemoveOrganizationAccountRsp::RemoveOrganizationAccountRsp(const RemoveOrganizationAccountRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.RemoveOrganizationAccountRsp)
}

void RemoveOrganizationAccountRsp::SharedCtor() {
  result_ = false;
}

RemoveOrganizationAccountRsp::~RemoveOrganizationAccountRsp() {
  // @@protoc_insertion_point(destructor:resource.RemoveOrganizationAccountRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOrganizationAccountRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOrganizationAccountRsp::ArenaDtor(void* object) {
  RemoveOrganizationAccountRsp* _this = reinterpret_cast< RemoveOrganizationAccountRsp* >(object);
  (void)_this;
}
void RemoveOrganizationAccountRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOrganizationAccountRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOrganizationAccountRsp& RemoveOrganizationAccountRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOrganizationAccountRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void RemoveOrganizationAccountRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrganizationAccountRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOrganizationAccountRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.RemoveOrganizationAccountRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.RemoveOrganizationAccountRsp)
  return target;
}

size_t RemoveOrganizationAccountRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.RemoveOrganizationAccountRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOrganizationAccountRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOrganizationAccountRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOrganizationAccountRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.RemoveOrganizationAccountRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.RemoveOrganizationAccountRsp)
    MergeFrom(*source);
  }
}

void RemoveOrganizationAccountRsp::MergeFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.RemoveOrganizationAccountRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void RemoveOrganizationAccountRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOrganizationAccountRsp::CopyFrom(const RemoveOrganizationAccountRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.RemoveOrganizationAccountRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrganizationAccountRsp::IsInitialized() const {
  return true;
}

void RemoveOrganizationAccountRsp::InternalSwap(RemoveOrganizationAccountRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrganizationAccountRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Permission::InitAsDefaultInstance() {
}
class Permission::_Internal {
 public:
};

Permission::Permission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accounts_(arena),
  roles_(arena),
  peers_(arena),
  organization_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Permission)
}
Permission::Permission(const Permission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accounts_(from.accounts_),
      roles_(from.roles_),
      peers_(from.peers_),
      organization_(from.organization_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.Permission)
}

void Permission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Permission_resource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Permission::~Permission() {
  // @@protoc_insertion_point(destructor:resource.Permission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Permission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Permission::ArenaDtor(void* object) {
  Permission* _this = reinterpret_cast< Permission* >(object);
  (void)_this;
}
void Permission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Permission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Permission& Permission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Permission_resource_2eproto.base);
  return *internal_default_instance();
}


void Permission::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  roles_.Clear();
  peers_.Clear();
  organization_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Permission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Permission.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string accounts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_accounts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Permission.accounts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string roles = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Permission.roles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string peers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_peers();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Permission.peers"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string organization = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_organization();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.Permission.organization"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Permission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Permission.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string accounts = 2;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; i++) {
    const auto& s = this->_internal_accounts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Permission.accounts");
    target = stream->WriteString(2, s, target);
  }

  // repeated string roles = 3;
  for (int i = 0, n = this->_internal_roles_size(); i < n; i++) {
    const auto& s = this->_internal_roles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Permission.roles");
    target = stream->WriteString(3, s, target);
  }

  // repeated string peers = 4;
  for (int i = 0, n = this->_internal_peers_size(); i < n; i++) {
    const auto& s = this->_internal_peers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Permission.peers");
    target = stream->WriteString(4, s, target);
  }

  // repeated string organization = 5;
  for (int i = 0, n = this->_internal_organization_size(); i < n; i++) {
    const auto& s = this->_internal_organization(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.Permission.organization");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Permission)
  return target;
}

size_t Permission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Permission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(accounts_.size());
  for (int i = 0, n = accounts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      accounts_.Get(i));
  }

  // repeated string roles = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_.size());
  for (int i = 0, n = roles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_.Get(i));
  }

  // repeated string peers = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(peers_.size());
  for (int i = 0, n = peers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      peers_.Get(i));
  }

  // repeated string organization = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(organization_.size());
  for (int i = 0, n = organization_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      organization_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  const Permission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Permission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Permission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Permission)
    MergeFrom(*source);
  }
}

void Permission::MergeFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
  roles_.MergeFrom(from.roles_);
  peers_.MergeFrom(from.peers_);
  organization_.MergeFrom(from.organization_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Permission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permission::CopyFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permission::IsInitialized() const {
  return true;
}

void Permission::InternalSwap(Permission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accounts_.InternalSwap(&other->accounts_);
  roles_.InternalSwap(&other->roles_);
  peers_.InternalSwap(&other->peers_);
  organization_.InternalSwap(&other->organization_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Permission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Permissions::InitAsDefaultInstance() {
  ::resource::_Permissions_default_instance_._instance.get_mutable()->owners_ = const_cast< ::resource::Permission*>(
      ::resource::Permission::internal_default_instance());
}
class Permissions::_Internal {
 public:
  static const ::resource::Permission& owners(const Permissions* msg);
};

const ::resource::Permission&
Permissions::_Internal::owners(const Permissions* msg) {
  return *msg->owners_;
}
Permissions::Permissions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_(arena),
  denied_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.Permissions)
}
Permissions::Permissions(const Permissions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_(from.allowed_),
      denied_(from.denied_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_owners()) {
    owners_ = new ::resource::Permission(*from.owners_);
  } else {
    owners_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.Permissions)
}

void Permissions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Permissions_resource_2eproto.base);
  owners_ = nullptr;
}

Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:resource.Permissions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Permissions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete owners_;
}

void Permissions::ArenaDtor(void* object) {
  Permissions* _this = reinterpret_cast< Permissions* >(object);
  (void)_this;
}
void Permissions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Permissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Permissions& Permissions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Permissions_resource_2eproto.base);
  return *internal_default_instance();
}


void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.Permissions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_.Clear();
  denied_.Clear();
  if (GetArena() == nullptr && owners_ != nullptr) {
    delete owners_;
  }
  owners_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Permissions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.Permission allowed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_allowed(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .resource.Permission denied = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_denied(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .resource.Permission owners = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_owners(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Permissions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.Permissions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.Permission allowed = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_allowed_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_allowed(i), target, stream);
  }

  // repeated .resource.Permission denied = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_denied_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_denied(i), target, stream);
  }

  // .resource.Permission owners = 3;
  if (this->has_owners()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::owners(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.Permissions)
  return target;
}

size_t Permissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.Permissions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.Permission allowed = 1;
  total_size += 1UL * this->_internal_allowed_size();
  for (const auto& msg : this->allowed_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .resource.Permission denied = 2;
  total_size += 1UL * this->_internal_denied_size();
  for (const auto& msg : this->denied_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .resource.Permission owners = 3;
  if (this->has_owners()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *owners_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permissions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  const Permissions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Permissions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.Permissions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.Permissions)
    MergeFrom(*source);
  }
}

void Permissions::MergeFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_.MergeFrom(from.allowed_);
  denied_.MergeFrom(from.denied_);
  if (from.has_owners()) {
    _internal_mutable_owners()->::resource::Permission::MergeFrom(from._internal_owners());
  }
}

void Permissions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permissions::IsInitialized() const {
  return true;
}

void Permissions::InternalSwap(Permissions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_.InternalSwap(&other->allowed_);
  denied_.InternalSwap(&other->denied_);
  swap(owners_, other->owners_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Permissions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionResourceParameterPermission::InitAsDefaultInstance() {
}
class ActionResourceParameterPermission::_Internal {
 public:
};

ActionResourceParameterPermission::ActionResourceParameterPermission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ActionResourceParameterPermission)
}
ActionResourceParameterPermission::ActionResourceParameterPermission(const ActionResourceParameterPermission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_permission().empty()) {
    permission_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_permission(),
      GetArena());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:resource.ActionResourceParameterPermission)
}

void ActionResourceParameterPermission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionResourceParameterPermission_resource_2eproto.base);
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
}

ActionResourceParameterPermission::~ActionResourceParameterPermission() {
  // @@protoc_insertion_point(destructor:resource.ActionResourceParameterPermission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionResourceParameterPermission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  permission_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActionResourceParameterPermission::ArenaDtor(void* object) {
  ActionResourceParameterPermission* _this = reinterpret_cast< ActionResourceParameterPermission* >(object);
  (void)_this;
}
void ActionResourceParameterPermission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionResourceParameterPermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionResourceParameterPermission& ActionResourceParameterPermission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionResourceParameterPermission_resource_2eproto.base);
  return *internal_default_instance();
}


void ActionResourceParameterPermission::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ActionResourceParameterPermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permission_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionResourceParameterPermission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_permission();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ActionResourceParameterPermission.permission"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionResourceParameterPermission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ActionResourceParameterPermission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // string permission = 2;
  if (this->permission().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permission().data(), static_cast<int>(this->_internal_permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ActionResourceParameterPermission.permission");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ActionResourceParameterPermission)
  return target;
}

size_t ActionResourceParameterPermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ActionResourceParameterPermission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string permission = 2;
  if (this->permission().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permission());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionResourceParameterPermission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ActionResourceParameterPermission)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionResourceParameterPermission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionResourceParameterPermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ActionResourceParameterPermission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ActionResourceParameterPermission)
    MergeFrom(*source);
  }
}

void ActionResourceParameterPermission::MergeFrom(const ActionResourceParameterPermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ActionResourceParameterPermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permission().size() > 0) {
    _internal_set_permission(from._internal_permission());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void ActionResourceParameterPermission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ActionResourceParameterPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionResourceParameterPermission::CopyFrom(const ActionResourceParameterPermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ActionResourceParameterPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionResourceParameterPermission::IsInitialized() const {
  return true;
}

void ActionResourceParameterPermission::InternalSwap(ActionResourceParameterPermission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permission_.Swap(&other->permission_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionResourceParameterPermission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetActionResourcesPermissionRqst::InitAsDefaultInstance() {
}
class SetActionResourcesPermissionRqst::_Internal {
 public:
};

SetActionResourcesPermissionRqst::SetActionResourcesPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  resources_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetActionResourcesPermissionRqst)
}
SetActionResourcesPermissionRqst::SetActionResourcesPermissionRqst(const SetActionResourcesPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resources_(from.resources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetActionResourcesPermissionRqst)
}

void SetActionResourcesPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetActionResourcesPermissionRqst_resource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetActionResourcesPermissionRqst::~SetActionResourcesPermissionRqst() {
  // @@protoc_insertion_point(destructor:resource.SetActionResourcesPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetActionResourcesPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetActionResourcesPermissionRqst::ArenaDtor(void* object) {
  SetActionResourcesPermissionRqst* _this = reinterpret_cast< SetActionResourcesPermissionRqst* >(object);
  (void)_this;
}
void SetActionResourcesPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetActionResourcesPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetActionResourcesPermissionRqst& SetActionResourcesPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetActionResourcesPermissionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetActionResourcesPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetActionResourcesPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetActionResourcesPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetActionResourcesPermissionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .resource.ActionResourceParameterPermission resources = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetActionResourcesPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetActionResourcesPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetActionResourcesPermissionRqst.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  // repeated .resource.ActionResourceParameterPermission resources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_resources_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_resources(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetActionResourcesPermissionRqst)
  return target;
}

size_t SetActionResourcesPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetActionResourcesPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.ActionResourceParameterPermission resources = 2;
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionResourcesPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetActionResourcesPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionResourcesPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetActionResourcesPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetActionResourcesPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetActionResourcesPermissionRqst)
    MergeFrom(*source);
  }
}

void SetActionResourcesPermissionRqst::MergeFrom(const SetActionResourcesPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetActionResourcesPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void SetActionResourcesPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetActionResourcesPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionResourcesPermissionRqst::CopyFrom(const SetActionResourcesPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetActionResourcesPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionResourcesPermissionRqst::IsInitialized() const {
  return true;
}

void SetActionResourcesPermissionRqst::InternalSwap(SetActionResourcesPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resources_.InternalSwap(&other->resources_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetActionResourcesPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetActionResourcesPermissionRsp::InitAsDefaultInstance() {
}
class SetActionResourcesPermissionRsp::_Internal {
 public:
};

SetActionResourcesPermissionRsp::SetActionResourcesPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetActionResourcesPermissionRsp)
}
SetActionResourcesPermissionRsp::SetActionResourcesPermissionRsp(const SetActionResourcesPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetActionResourcesPermissionRsp)
}

void SetActionResourcesPermissionRsp::SharedCtor() {
}

SetActionResourcesPermissionRsp::~SetActionResourcesPermissionRsp() {
  // @@protoc_insertion_point(destructor:resource.SetActionResourcesPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetActionResourcesPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetActionResourcesPermissionRsp::ArenaDtor(void* object) {
  SetActionResourcesPermissionRsp* _this = reinterpret_cast< SetActionResourcesPermissionRsp* >(object);
  (void)_this;
}
void SetActionResourcesPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetActionResourcesPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetActionResourcesPermissionRsp& SetActionResourcesPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetActionResourcesPermissionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetActionResourcesPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetActionResourcesPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetActionResourcesPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetActionResourcesPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetActionResourcesPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetActionResourcesPermissionRsp)
  return target;
}

size_t SetActionResourcesPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetActionResourcesPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionResourcesPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetActionResourcesPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionResourcesPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetActionResourcesPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetActionResourcesPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetActionResourcesPermissionRsp)
    MergeFrom(*source);
  }
}

void SetActionResourcesPermissionRsp::MergeFrom(const SetActionResourcesPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetActionResourcesPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetActionResourcesPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetActionResourcesPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionResourcesPermissionRsp::CopyFrom(const SetActionResourcesPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetActionResourcesPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionResourcesPermissionRsp::IsInitialized() const {
  return true;
}

void SetActionResourcesPermissionRsp::InternalSwap(SetActionResourcesPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetActionResourcesPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActionResourcesPermissionRqst::InitAsDefaultInstance() {
}
class GetActionResourcesPermissionRqst::_Internal {
 public:
};

GetActionResourcesPermissionRqst::GetActionResourcesPermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetActionResourcesPermissionRqst)
}
GetActionResourcesPermissionRqst::GetActionResourcesPermissionRqst(const GetActionResourcesPermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetActionResourcesPermissionRqst)
}

void GetActionResourcesPermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActionResourcesPermissionRqst_resource_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetActionResourcesPermissionRqst::~GetActionResourcesPermissionRqst() {
  // @@protoc_insertion_point(destructor:resource.GetActionResourcesPermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActionResourcesPermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetActionResourcesPermissionRqst::ArenaDtor(void* object) {
  GetActionResourcesPermissionRqst* _this = reinterpret_cast< GetActionResourcesPermissionRqst* >(object);
  (void)_this;
}
void GetActionResourcesPermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActionResourcesPermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActionResourcesPermissionRqst& GetActionResourcesPermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActionResourcesPermissionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetActionResourcesPermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetActionResourcesPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActionResourcesPermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetActionResourcesPermissionRqst.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActionResourcesPermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetActionResourcesPermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetActionResourcesPermissionRqst.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetActionResourcesPermissionRqst)
  return target;
}

size_t GetActionResourcesPermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetActionResourcesPermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionResourcesPermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetActionResourcesPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionResourcesPermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActionResourcesPermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetActionResourcesPermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetActionResourcesPermissionRqst)
    MergeFrom(*source);
  }
}

void GetActionResourcesPermissionRqst::MergeFrom(const GetActionResourcesPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetActionResourcesPermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void GetActionResourcesPermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetActionResourcesPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionResourcesPermissionRqst::CopyFrom(const GetActionResourcesPermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetActionResourcesPermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionResourcesPermissionRqst::IsInitialized() const {
  return true;
}

void GetActionResourcesPermissionRqst::InternalSwap(GetActionResourcesPermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActionResourcesPermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActionResourcesPermissionRsp::InitAsDefaultInstance() {
}
class GetActionResourcesPermissionRsp::_Internal {
 public:
};

GetActionResourcesPermissionRsp::GetActionResourcesPermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  resources_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetActionResourcesPermissionRsp)
}
GetActionResourcesPermissionRsp::GetActionResourcesPermissionRsp(const GetActionResourcesPermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resources_(from.resources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetActionResourcesPermissionRsp)
}

void GetActionResourcesPermissionRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActionResourcesPermissionRsp_resource_2eproto.base);
}

GetActionResourcesPermissionRsp::~GetActionResourcesPermissionRsp() {
  // @@protoc_insertion_point(destructor:resource.GetActionResourcesPermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActionResourcesPermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetActionResourcesPermissionRsp::ArenaDtor(void* object) {
  GetActionResourcesPermissionRsp* _this = reinterpret_cast< GetActionResourcesPermissionRsp* >(object);
  (void)_this;
}
void GetActionResourcesPermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActionResourcesPermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActionResourcesPermissionRsp& GetActionResourcesPermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActionResourcesPermissionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetActionResourcesPermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetActionResourcesPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActionResourcesPermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.ActionResourceParameterPermission resources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActionResourcesPermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetActionResourcesPermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.ActionResourceParameterPermission resources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_resources_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_resources(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetActionResourcesPermissionRsp)
  return target;
}

size_t GetActionResourcesPermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetActionResourcesPermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.ActionResourceParameterPermission resources = 1;
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionResourcesPermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetActionResourcesPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionResourcesPermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActionResourcesPermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetActionResourcesPermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetActionResourcesPermissionRsp)
    MergeFrom(*source);
  }
}

void GetActionResourcesPermissionRsp::MergeFrom(const GetActionResourcesPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetActionResourcesPermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
}

void GetActionResourcesPermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetActionResourcesPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionResourcesPermissionRsp::CopyFrom(const GetActionResourcesPermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetActionResourcesPermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionResourcesPermissionRsp::IsInitialized() const {
  return true;
}

void GetActionResourcesPermissionRsp::InternalSwap(GetActionResourcesPermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resources_.InternalSwap(&other->resources_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActionResourcesPermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResourcePermissionsRqst::InitAsDefaultInstance() {
}
class GetResourcePermissionsRqst::_Internal {
 public:
};

GetResourcePermissionsRqst::GetResourcePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetResourcePermissionsRqst)
}
GetResourcePermissionsRqst::GetResourcePermissionsRqst(const GetResourcePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetResourcePermissionsRqst)
}

void GetResourcePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResourcePermissionsRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetResourcePermissionsRqst::~GetResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetResourcePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResourcePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResourcePermissionsRqst::ArenaDtor(void* object) {
  GetResourcePermissionsRqst* _this = reinterpret_cast< GetResourcePermissionsRqst* >(object);
  (void)_this;
}
void GetResourcePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResourcePermissionsRqst& GetResourcePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResourcePermissionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResourcePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetResourcePermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResourcePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetResourcePermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetResourcePermissionsRqst)
  return target;
}

size_t GetResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetResourcePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResourcePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetResourcePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void GetResourcePermissionsRqst::MergeFrom(const GetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void GetResourcePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionsRqst::CopyFrom(const GetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void GetResourcePermissionsRqst::InternalSwap(GetResourcePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResourcePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResourcePermissionsRsp::InitAsDefaultInstance() {
  ::resource::_GetResourcePermissionsRsp_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::resource::Permissions*>(
      ::resource::Permissions::internal_default_instance());
}
class GetResourcePermissionsRsp::_Internal {
 public:
  static const ::resource::Permissions& permissions(const GetResourcePermissionsRsp* msg);
};

const ::resource::Permissions&
GetResourcePermissionsRsp::_Internal::permissions(const GetResourcePermissionsRsp* msg) {
  return *msg->permissions_;
}
GetResourcePermissionsRsp::GetResourcePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetResourcePermissionsRsp)
}
GetResourcePermissionsRsp::GetResourcePermissionsRsp(const GetResourcePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_permissions()) {
    permissions_ = new ::resource::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetResourcePermissionsRsp)
}

void GetResourcePermissionsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResourcePermissionsRsp_resource_2eproto.base);
  permissions_ = nullptr;
}

GetResourcePermissionsRsp::~GetResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetResourcePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResourcePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete permissions_;
}

void GetResourcePermissionsRsp::ArenaDtor(void* object) {
  GetResourcePermissionsRsp* _this = reinterpret_cast< GetResourcePermissionsRsp* >(object);
  (void)_this;
}
void GetResourcePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResourcePermissionsRsp& GetResourcePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResourcePermissionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && permissions_ != nullptr) {
    delete permissions_;
  }
  permissions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResourcePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Permissions permissions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResourcePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Permissions permissions = 1;
  if (this->has_permissions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::permissions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetResourcePermissionsRsp)
  return target;
}

size_t GetResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetResourcePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Permissions permissions = 1;
  if (this->has_permissions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResourcePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetResourcePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void GetResourcePermissionsRsp::MergeFrom(const GetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permissions()) {
    _internal_mutable_permissions()->::resource::Permissions::MergeFrom(from._internal_permissions());
  }
}

void GetResourcePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionsRsp::CopyFrom(const GetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void GetResourcePermissionsRsp::InternalSwap(GetResourcePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permissions_, other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResourcePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResourcePermissionsRqst::InitAsDefaultInstance() {
}
class DeleteResourcePermissionsRqst::_Internal {
 public:
};

DeleteResourcePermissionsRqst::DeleteResourcePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteResourcePermissionsRqst)
}
DeleteResourcePermissionsRqst::DeleteResourcePermissionsRqst(const DeleteResourcePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteResourcePermissionsRqst)
}

void DeleteResourcePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResourcePermissionsRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteResourcePermissionsRqst::~DeleteResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteResourcePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResourcePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteResourcePermissionsRqst::ArenaDtor(void* object) {
  DeleteResourcePermissionsRqst* _this = reinterpret_cast< DeleteResourcePermissionsRqst* >(object);
  (void)_this;
}
void DeleteResourcePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResourcePermissionsRqst& DeleteResourcePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResourcePermissionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResourcePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteResourcePermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResourcePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteResourcePermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteResourcePermissionsRqst)
  return target;
}

size_t DeleteResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteResourcePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResourcePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteResourcePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionsRqst::MergeFrom(const DeleteResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void DeleteResourcePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionsRqst::CopyFrom(const DeleteResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionsRqst::InternalSwap(DeleteResourcePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResourcePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResourcePermissionsRsp::InitAsDefaultInstance() {
  ::resource::_DeleteResourcePermissionsRsp_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::resource::Permissions*>(
      ::resource::Permissions::internal_default_instance());
}
class DeleteResourcePermissionsRsp::_Internal {
 public:
  static const ::resource::Permissions& permissions(const DeleteResourcePermissionsRsp* msg);
};

const ::resource::Permissions&
DeleteResourcePermissionsRsp::_Internal::permissions(const DeleteResourcePermissionsRsp* msg) {
  return *msg->permissions_;
}
DeleteResourcePermissionsRsp::DeleteResourcePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteResourcePermissionsRsp)
}
DeleteResourcePermissionsRsp::DeleteResourcePermissionsRsp(const DeleteResourcePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_permissions()) {
    permissions_ = new ::resource::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteResourcePermissionsRsp)
}

void DeleteResourcePermissionsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResourcePermissionsRsp_resource_2eproto.base);
  permissions_ = nullptr;
}

DeleteResourcePermissionsRsp::~DeleteResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteResourcePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResourcePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete permissions_;
}

void DeleteResourcePermissionsRsp::ArenaDtor(void* object) {
  DeleteResourcePermissionsRsp* _this = reinterpret_cast< DeleteResourcePermissionsRsp* >(object);
  (void)_this;
}
void DeleteResourcePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResourcePermissionsRsp& DeleteResourcePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResourcePermissionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && permissions_ != nullptr) {
    delete permissions_;
  }
  permissions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResourcePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Permissions permissions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResourcePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Permissions permissions = 1;
  if (this->has_permissions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::permissions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteResourcePermissionsRsp)
  return target;
}

size_t DeleteResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteResourcePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Permissions permissions = 1;
  if (this->has_permissions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResourcePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteResourcePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionsRsp::MergeFrom(const DeleteResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permissions()) {
    _internal_mutable_permissions()->::resource::Permissions::MergeFrom(from._internal_permissions());
  }
}

void DeleteResourcePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionsRsp::CopyFrom(const DeleteResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionsRsp::InternalSwap(DeleteResourcePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permissions_, other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResourcePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResourcePermissionRqst::InitAsDefaultInstance() {
}
class GetResourcePermissionRqst::_Internal {
 public:
};

GetResourcePermissionRqst::GetResourcePermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetResourcePermissionRqst)
}
GetResourcePermissionRqst::GetResourcePermissionRqst(const GetResourcePermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetResourcePermissionRqst)
}

void GetResourcePermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResourcePermissionRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetResourcePermissionRqst::~GetResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:resource.GetResourcePermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResourcePermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResourcePermissionRqst::ArenaDtor(void* object) {
  GetResourcePermissionRqst* _this = reinterpret_cast< GetResourcePermissionRqst* >(object);
  (void)_this;
}
void GetResourcePermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResourcePermissionRqst& GetResourcePermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResourcePermissionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResourcePermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetResourcePermissionRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetResourcePermissionRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResourcePermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetResourcePermissionRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetResourcePermissionRqst.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetResourcePermissionRqst)
  return target;
}

size_t GetResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetResourcePermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResourcePermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetResourcePermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void GetResourcePermissionRqst::MergeFrom(const GetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetResourcePermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionRqst::CopyFrom(const GetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionRqst::IsInitialized() const {
  return true;
}

void GetResourcePermissionRqst::InternalSwap(GetResourcePermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResourcePermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResourcePermissionRsp::InitAsDefaultInstance() {
  ::resource::_GetResourcePermissionRsp_default_instance_._instance.get_mutable()->permission_ = const_cast< ::resource::Permission*>(
      ::resource::Permission::internal_default_instance());
}
class GetResourcePermissionRsp::_Internal {
 public:
  static const ::resource::Permission& permission(const GetResourcePermissionRsp* msg);
};

const ::resource::Permission&
GetResourcePermissionRsp::_Internal::permission(const GetResourcePermissionRsp* msg) {
  return *msg->permission_;
}
GetResourcePermissionRsp::GetResourcePermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetResourcePermissionRsp)
}
GetResourcePermissionRsp::GetResourcePermissionRsp(const GetResourcePermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_permission()) {
    permission_ = new ::resource::Permission(*from.permission_);
  } else {
    permission_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetResourcePermissionRsp)
}

void GetResourcePermissionRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResourcePermissionRsp_resource_2eproto.base);
  permission_ = nullptr;
}

GetResourcePermissionRsp::~GetResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:resource.GetResourcePermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResourcePermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete permission_;
}

void GetResourcePermissionRsp::ArenaDtor(void* object) {
  GetResourcePermissionRsp* _this = reinterpret_cast< GetResourcePermissionRsp* >(object);
  (void)_this;
}
void GetResourcePermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResourcePermissionRsp& GetResourcePermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResourcePermissionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && permission_ != nullptr) {
    delete permission_;
  }
  permission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResourcePermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.Permission permission = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_permission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResourcePermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.Permission permission = 1;
  if (this->has_permission()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::permission(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetResourcePermissionRsp)
  return target;
}

size_t GetResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetResourcePermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.Permission permission = 1;
  if (this->has_permission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permission_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResourcePermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResourcePermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResourcePermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetResourcePermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void GetResourcePermissionRsp::MergeFrom(const GetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_permission()) {
    _internal_mutable_permission()->::resource::Permission::MergeFrom(from._internal_permission());
  }
}

void GetResourcePermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourcePermissionRsp::CopyFrom(const GetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResourcePermissionRsp::IsInitialized() const {
  return true;
}

void GetResourcePermissionRsp::InternalSwap(GetResourcePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResourcePermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResourcePermissionRqst::InitAsDefaultInstance() {
}
class DeleteResourcePermissionRqst::_Internal {
 public:
};

DeleteResourcePermissionRqst::DeleteResourcePermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteResourcePermissionRqst)
}
DeleteResourcePermissionRqst::DeleteResourcePermissionRqst(const DeleteResourcePermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteResourcePermissionRqst)
}

void DeleteResourcePermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResourcePermissionRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteResourcePermissionRqst::~DeleteResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteResourcePermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResourcePermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteResourcePermissionRqst::ArenaDtor(void* object) {
  DeleteResourcePermissionRqst* _this = reinterpret_cast< DeleteResourcePermissionRqst* >(object);
  (void)_this;
}
void DeleteResourcePermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResourcePermissionRqst& DeleteResourcePermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResourcePermissionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResourcePermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteResourcePermissionRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteResourcePermissionRqst.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResourcePermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteResourcePermissionRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteResourcePermissionRqst.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteResourcePermissionRqst)
  return target;
}

size_t DeleteResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteResourcePermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResourcePermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteResourcePermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionRqst::MergeFrom(const DeleteResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteResourcePermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionRqst::CopyFrom(const DeleteResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionRqst::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionRqst::InternalSwap(DeleteResourcePermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResourcePermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResourcePermissionRsp::InitAsDefaultInstance() {
}
class DeleteResourcePermissionRsp::_Internal {
 public:
};

DeleteResourcePermissionRsp::DeleteResourcePermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteResourcePermissionRsp)
}
DeleteResourcePermissionRsp::DeleteResourcePermissionRsp(const DeleteResourcePermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.DeleteResourcePermissionRsp)
}

void DeleteResourcePermissionRsp::SharedCtor() {
}

DeleteResourcePermissionRsp::~DeleteResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteResourcePermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResourcePermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteResourcePermissionRsp::ArenaDtor(void* object) {
  DeleteResourcePermissionRsp* _this = reinterpret_cast< DeleteResourcePermissionRsp* >(object);
  (void)_this;
}
void DeleteResourcePermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResourcePermissionRsp& DeleteResourcePermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResourcePermissionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResourcePermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResourcePermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteResourcePermissionRsp)
  return target;
}

size_t DeleteResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteResourcePermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResourcePermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResourcePermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResourcePermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteResourcePermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void DeleteResourcePermissionRsp::MergeFrom(const DeleteResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteResourcePermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResourcePermissionRsp::CopyFrom(const DeleteResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResourcePermissionRsp::IsInitialized() const {
  return true;
}

void DeleteResourcePermissionRsp::InternalSwap(DeleteResourcePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResourcePermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResourcePermissionsRqst::InitAsDefaultInstance() {
  ::resource::_SetResourcePermissionsRqst_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::resource::Permissions*>(
      ::resource::Permissions::internal_default_instance());
}
class SetResourcePermissionsRqst::_Internal {
 public:
  static const ::resource::Permissions& permissions(const SetResourcePermissionsRqst* msg);
};

const ::resource::Permissions&
SetResourcePermissionsRqst::_Internal::permissions(const SetResourcePermissionsRqst* msg) {
  return *msg->permissions_;
}
SetResourcePermissionsRqst::SetResourcePermissionsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetResourcePermissionsRqst)
}
SetResourcePermissionsRqst::SetResourcePermissionsRqst(const SetResourcePermissionsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  if (from._internal_has_permissions()) {
    permissions_ = new ::resource::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetResourcePermissionsRqst)
}

void SetResourcePermissionsRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResourcePermissionsRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

SetResourcePermissionsRqst::~SetResourcePermissionsRqst() {
  // @@protoc_insertion_point(destructor:resource.SetResourcePermissionsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResourcePermissionsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void SetResourcePermissionsRqst::ArenaDtor(void* object) {
  SetResourcePermissionsRqst* _this = reinterpret_cast< SetResourcePermissionsRqst* >(object);
  (void)_this;
}
void SetResourcePermissionsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResourcePermissionsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResourcePermissionsRqst& SetResourcePermissionsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResourcePermissionsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetResourcePermissionsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && permissions_ != nullptr) {
    delete permissions_;
  }
  permissions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResourcePermissionsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetResourcePermissionsRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.Permissions permissions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResourcePermissionsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetResourcePermissionsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetResourcePermissionsRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .resource.Permissions permissions = 2;
  if (this->has_permissions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::permissions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetResourcePermissionsRqst)
  return target;
}

size_t SetResourcePermissionsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetResourcePermissionsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .resource.Permissions permissions = 2;
  if (this->has_permissions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResourcePermissionsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetResourcePermissionsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetResourcePermissionsRqst)
    MergeFrom(*source);
  }
}

void SetResourcePermissionsRqst::MergeFrom(const SetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetResourcePermissionsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.has_permissions()) {
    _internal_mutable_permissions()->::resource::Permissions::MergeFrom(from._internal_permissions());
  }
}

void SetResourcePermissionsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionsRqst::CopyFrom(const SetResourcePermissionsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetResourcePermissionsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionsRqst::IsInitialized() const {
  return true;
}

void SetResourcePermissionsRqst::InternalSwap(SetResourcePermissionsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permissions_, other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResourcePermissionsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResourcePermissionsRsp::InitAsDefaultInstance() {
}
class SetResourcePermissionsRsp::_Internal {
 public:
};

SetResourcePermissionsRsp::SetResourcePermissionsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetResourcePermissionsRsp)
}
SetResourcePermissionsRsp::SetResourcePermissionsRsp(const SetResourcePermissionsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetResourcePermissionsRsp)
}

void SetResourcePermissionsRsp::SharedCtor() {
}

SetResourcePermissionsRsp::~SetResourcePermissionsRsp() {
  // @@protoc_insertion_point(destructor:resource.SetResourcePermissionsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResourcePermissionsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetResourcePermissionsRsp::ArenaDtor(void* object) {
  SetResourcePermissionsRsp* _this = reinterpret_cast< SetResourcePermissionsRsp* >(object);
  (void)_this;
}
void SetResourcePermissionsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResourcePermissionsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResourcePermissionsRsp& SetResourcePermissionsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResourcePermissionsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetResourcePermissionsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResourcePermissionsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResourcePermissionsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetResourcePermissionsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetResourcePermissionsRsp)
  return target;
}

size_t SetResourcePermissionsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetResourcePermissionsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResourcePermissionsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetResourcePermissionsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetResourcePermissionsRsp)
    MergeFrom(*source);
  }
}

void SetResourcePermissionsRsp::MergeFrom(const SetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetResourcePermissionsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetResourcePermissionsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionsRsp::CopyFrom(const SetResourcePermissionsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetResourcePermissionsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionsRsp::IsInitialized() const {
  return true;
}

void SetResourcePermissionsRsp::InternalSwap(SetResourcePermissionsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResourcePermissionsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResourcePermissionRqst::InitAsDefaultInstance() {
  ::resource::_SetResourcePermissionRqst_default_instance_._instance.get_mutable()->permission_ = const_cast< ::resource::Permission*>(
      ::resource::Permission::internal_default_instance());
}
class SetResourcePermissionRqst::_Internal {
 public:
  static const ::resource::Permission& permission(const SetResourcePermissionRqst* msg);
};

const ::resource::Permission&
SetResourcePermissionRqst::_Internal::permission(const SetResourcePermissionRqst* msg) {
  return *msg->permission_;
}
SetResourcePermissionRqst::SetResourcePermissionRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetResourcePermissionRqst)
}
SetResourcePermissionRqst::SetResourcePermissionRqst(const SetResourcePermissionRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  if (from._internal_has_permission()) {
    permission_ = new ::resource::Permission(*from.permission_);
  } else {
    permission_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetResourcePermissionRqst)
}

void SetResourcePermissionRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResourcePermissionRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_ = nullptr;
}

SetResourcePermissionRqst::~SetResourcePermissionRqst() {
  // @@protoc_insertion_point(destructor:resource.SetResourcePermissionRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResourcePermissionRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permission_;
}

void SetResourcePermissionRqst::ArenaDtor(void* object) {
  SetResourcePermissionRqst* _this = reinterpret_cast< SetResourcePermissionRqst* >(object);
  (void)_this;
}
void SetResourcePermissionRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResourcePermissionRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResourcePermissionRqst& SetResourcePermissionRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResourcePermissionRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetResourcePermissionRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && permission_ != nullptr) {
    delete permission_;
  }
  permission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResourcePermissionRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetResourcePermissionRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.Permission permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_permission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResourcePermissionRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetResourcePermissionRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetResourcePermissionRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .resource.Permission permission = 2;
  if (this->has_permission()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::permission(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetResourcePermissionRqst)
  return target;
}

size_t SetResourcePermissionRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetResourcePermissionRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .resource.Permission permission = 2;
  if (this->has_permission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *permission_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResourcePermissionRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetResourcePermissionRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetResourcePermissionRqst)
    MergeFrom(*source);
  }
}

void SetResourcePermissionRqst::MergeFrom(const SetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetResourcePermissionRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.has_permission()) {
    _internal_mutable_permission()->::resource::Permission::MergeFrom(from._internal_permission());
  }
}

void SetResourcePermissionRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionRqst::CopyFrom(const SetResourcePermissionRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetResourcePermissionRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionRqst::IsInitialized() const {
  return true;
}

void SetResourcePermissionRqst::InternalSwap(SetResourcePermissionRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permission_, other->permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResourcePermissionRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResourcePermissionRsp::InitAsDefaultInstance() {
}
class SetResourcePermissionRsp::_Internal {
 public:
};

SetResourcePermissionRsp::SetResourcePermissionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetResourcePermissionRsp)
}
SetResourcePermissionRsp::SetResourcePermissionRsp(const SetResourcePermissionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.SetResourcePermissionRsp)
}

void SetResourcePermissionRsp::SharedCtor() {
}

SetResourcePermissionRsp::~SetResourcePermissionRsp() {
  // @@protoc_insertion_point(destructor:resource.SetResourcePermissionRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResourcePermissionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetResourcePermissionRsp::ArenaDtor(void* object) {
  SetResourcePermissionRsp* _this = reinterpret_cast< SetResourcePermissionRsp* >(object);
  (void)_this;
}
void SetResourcePermissionRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResourcePermissionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResourcePermissionRsp& SetResourcePermissionRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResourcePermissionRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetResourcePermissionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResourcePermissionRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResourcePermissionRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetResourcePermissionRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetResourcePermissionRsp)
  return target;
}

size_t SetResourcePermissionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetResourcePermissionRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResourcePermissionRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResourcePermissionRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResourcePermissionRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetResourcePermissionRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetResourcePermissionRsp)
    MergeFrom(*source);
  }
}

void SetResourcePermissionRsp::MergeFrom(const SetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetResourcePermissionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetResourcePermissionRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResourcePermissionRsp::CopyFrom(const SetResourcePermissionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetResourcePermissionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResourcePermissionRsp::IsInitialized() const {
  return true;
}

void SetResourcePermissionRsp::InternalSwap(SetResourcePermissionRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResourcePermissionRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResourceOwnerRqst::InitAsDefaultInstance() {
}
class AddResourceOwnerRqst::_Internal {
 public:
};

AddResourceOwnerRqst::AddResourceOwnerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddResourceOwnerRqst)
}
AddResourceOwnerRqst::AddResourceOwnerRqst(const AddResourceOwnerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.AddResourceOwnerRqst)
}

void AddResourceOwnerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResourceOwnerRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddResourceOwnerRqst::~AddResourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:resource.AddResourceOwnerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResourceOwnerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddResourceOwnerRqst::ArenaDtor(void* object) {
  AddResourceOwnerRqst* _this = reinterpret_cast< AddResourceOwnerRqst* >(object);
  (void)_this;
}
void AddResourceOwnerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResourceOwnerRqst& AddResourceOwnerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResourceOwnerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void AddResourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddResourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResourceOwnerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddResourceOwnerRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.AddResourceOwnerRqst.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResourceOwnerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddResourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddResourceOwnerRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.AddResourceOwnerRqst.owner");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddResourceOwnerRqst)
  return target;
}

size_t AddResourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddResourceOwnerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResourceOwnerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResourceOwnerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResourceOwnerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddResourceOwnerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddResourceOwnerRqst)
    MergeFrom(*source);
  }
}

void AddResourceOwnerRqst::MergeFrom(const AddResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
}

void AddResourceOwnerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResourceOwnerRqst::CopyFrom(const AddResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResourceOwnerRqst::IsInitialized() const {
  return true;
}

void AddResourceOwnerRqst::InternalSwap(AddResourceOwnerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResourceOwnerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResourceOwnerRsp::InitAsDefaultInstance() {
}
class AddResourceOwnerRsp::_Internal {
 public:
};

AddResourceOwnerRsp::AddResourceOwnerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.AddResourceOwnerRsp)
}
AddResourceOwnerRsp::AddResourceOwnerRsp(const AddResourceOwnerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.AddResourceOwnerRsp)
}

void AddResourceOwnerRsp::SharedCtor() {
}

AddResourceOwnerRsp::~AddResourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:resource.AddResourceOwnerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResourceOwnerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddResourceOwnerRsp::ArenaDtor(void* object) {
  AddResourceOwnerRsp* _this = reinterpret_cast< AddResourceOwnerRsp* >(object);
  (void)_this;
}
void AddResourceOwnerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResourceOwnerRsp& AddResourceOwnerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResourceOwnerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void AddResourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.AddResourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResourceOwnerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResourceOwnerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.AddResourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.AddResourceOwnerRsp)
  return target;
}

size_t AddResourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.AddResourceOwnerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResourceOwnerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.AddResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResourceOwnerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResourceOwnerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.AddResourceOwnerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.AddResourceOwnerRsp)
    MergeFrom(*source);
  }
}

void AddResourceOwnerRsp::MergeFrom(const AddResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.AddResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddResourceOwnerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.AddResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResourceOwnerRsp::CopyFrom(const AddResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.AddResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResourceOwnerRsp::IsInitialized() const {
  return true;
}

void AddResourceOwnerRsp::InternalSwap(AddResourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResourceOwnerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void removeResourceOwnerRqst::InitAsDefaultInstance() {
}
class removeResourceOwnerRqst::_Internal {
 public:
};

removeResourceOwnerRqst::removeResourceOwnerRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.removeResourceOwnerRqst)
}
removeResourceOwnerRqst::removeResourceOwnerRqst(const removeResourceOwnerRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.removeResourceOwnerRqst)
}

void removeResourceOwnerRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_removeResourceOwnerRqst_resource_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

removeResourceOwnerRqst::~removeResourceOwnerRqst() {
  // @@protoc_insertion_point(destructor:resource.removeResourceOwnerRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeResourceOwnerRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void removeResourceOwnerRqst::ArenaDtor(void* object) {
  removeResourceOwnerRqst* _this = reinterpret_cast< removeResourceOwnerRqst* >(object);
  (void)_this;
}
void removeResourceOwnerRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeResourceOwnerRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const removeResourceOwnerRqst& removeResourceOwnerRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_removeResourceOwnerRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void removeResourceOwnerRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.removeResourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeResourceOwnerRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.removeResourceOwnerRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.removeResourceOwnerRqst.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeResourceOwnerRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.removeResourceOwnerRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.removeResourceOwnerRqst.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.removeResourceOwnerRqst.owner");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.removeResourceOwnerRqst)
  return target;
}

size_t removeResourceOwnerRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.removeResourceOwnerRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeResourceOwnerRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.removeResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const removeResourceOwnerRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeResourceOwnerRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.removeResourceOwnerRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.removeResourceOwnerRqst)
    MergeFrom(*source);
  }
}

void removeResourceOwnerRqst::MergeFrom(const removeResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.removeResourceOwnerRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
}

void removeResourceOwnerRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.removeResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeResourceOwnerRqst::CopyFrom(const removeResourceOwnerRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.removeResourceOwnerRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeResourceOwnerRqst::IsInitialized() const {
  return true;
}

void removeResourceOwnerRqst::InternalSwap(removeResourceOwnerRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata removeResourceOwnerRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void removeResourceOwnerRsp::InitAsDefaultInstance() {
}
class removeResourceOwnerRsp::_Internal {
 public:
};

removeResourceOwnerRsp::removeResourceOwnerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.removeResourceOwnerRsp)
}
removeResourceOwnerRsp::removeResourceOwnerRsp(const removeResourceOwnerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.removeResourceOwnerRsp)
}

void removeResourceOwnerRsp::SharedCtor() {
}

removeResourceOwnerRsp::~removeResourceOwnerRsp() {
  // @@protoc_insertion_point(destructor:resource.removeResourceOwnerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeResourceOwnerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void removeResourceOwnerRsp::ArenaDtor(void* object) {
  removeResourceOwnerRsp* _this = reinterpret_cast< removeResourceOwnerRsp* >(object);
  (void)_this;
}
void removeResourceOwnerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeResourceOwnerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const removeResourceOwnerRsp& removeResourceOwnerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_removeResourceOwnerRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void removeResourceOwnerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.removeResourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeResourceOwnerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeResourceOwnerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.removeResourceOwnerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.removeResourceOwnerRsp)
  return target;
}

size_t removeResourceOwnerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.removeResourceOwnerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeResourceOwnerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.removeResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const removeResourceOwnerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeResourceOwnerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.removeResourceOwnerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.removeResourceOwnerRsp)
    MergeFrom(*source);
  }
}

void removeResourceOwnerRsp::MergeFrom(const removeResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.removeResourceOwnerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void removeResourceOwnerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.removeResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeResourceOwnerRsp::CopyFrom(const removeResourceOwnerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.removeResourceOwnerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeResourceOwnerRsp::IsInitialized() const {
  return true;
}

void removeResourceOwnerRsp::InternalSwap(removeResourceOwnerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeResourceOwnerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAllAccessRqst::InitAsDefaultInstance() {
}
class DeleteAllAccessRqst::_Internal {
 public:
};

DeleteAllAccessRqst::DeleteAllAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAllAccessRqst)
}
DeleteAllAccessRqst::DeleteAllAccessRqst(const DeleteAllAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAllAccessRqst)
}

void DeleteAllAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteAllAccessRqst_resource_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

DeleteAllAccessRqst::~DeleteAllAccessRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteAllAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAllAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteAllAccessRqst::ArenaDtor(void* object) {
  DeleteAllAccessRqst* _this = reinterpret_cast< DeleteAllAccessRqst* >(object);
  (void)_this;
}
void DeleteAllAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAllAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAllAccessRqst& DeleteAllAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAllAccessRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAllAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAllAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAllAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.DeleteAllAccessRqst.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.SubjectType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAllAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAllAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.DeleteAllAccessRqst.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAllAccessRqst)
  return target;
}

size_t DeleteAllAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAllAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAllAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAllAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAllAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAllAccessRqst)
    MergeFrom(*source);
  }
}

void DeleteAllAccessRqst::MergeFrom(const DeleteAllAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAllAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void DeleteAllAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAllAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllAccessRqst::CopyFrom(const DeleteAllAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAllAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllAccessRqst::IsInitialized() const {
  return true;
}

void DeleteAllAccessRqst::InternalSwap(DeleteAllAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAllAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteAllAccessRsp::InitAsDefaultInstance() {
}
class DeleteAllAccessRsp::_Internal {
 public:
};

DeleteAllAccessRsp::DeleteAllAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteAllAccessRsp)
}
DeleteAllAccessRsp::DeleteAllAccessRsp(const DeleteAllAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.DeleteAllAccessRsp)
}

void DeleteAllAccessRsp::SharedCtor() {
}

DeleteAllAccessRsp::~DeleteAllAccessRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteAllAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteAllAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteAllAccessRsp::ArenaDtor(void* object) {
  DeleteAllAccessRsp* _this = reinterpret_cast< DeleteAllAccessRsp* >(object);
  (void)_this;
}
void DeleteAllAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAllAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteAllAccessRsp& DeleteAllAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteAllAccessRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteAllAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteAllAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAllAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAllAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteAllAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteAllAccessRsp)
  return target;
}

size_t DeleteAllAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteAllAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteAllAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteAllAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteAllAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteAllAccessRsp)
    MergeFrom(*source);
  }
}

void DeleteAllAccessRsp::MergeFrom(const DeleteAllAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteAllAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteAllAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteAllAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllAccessRsp::CopyFrom(const DeleteAllAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteAllAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllAccessRsp::IsInitialized() const {
  return true;
}

void DeleteAllAccessRsp::InternalSwap(DeleteAllAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAllAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateAccessRqst::InitAsDefaultInstance() {
}
class ValidateAccessRqst::_Internal {
 public:
};

ValidateAccessRqst::ValidateAccessRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ValidateAccessRqst)
}
ValidateAccessRqst::ValidateAccessRqst(const ValidateAccessRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_permission().empty()) {
    permission_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_permission(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.ValidateAccessRqst)
}

void ValidateAccessRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValidateAccessRqst_resource_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ValidateAccessRqst::~ValidateAccessRqst() {
  // @@protoc_insertion_point(destructor:resource.ValidateAccessRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateAccessRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permission_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateAccessRqst::ArenaDtor(void* object) {
  ValidateAccessRqst* _this = reinterpret_cast< ValidateAccessRqst* >(object);
  (void)_this;
}
void ValidateAccessRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateAccessRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateAccessRqst& ValidateAccessRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateAccessRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ValidateAccessRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ValidateAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  permission_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateAccessRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ValidateAccessRqst.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.SubjectType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ValidateAccessRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string permission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_permission();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ValidateAccessRqst.permission"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateAccessRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ValidateAccessRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ValidateAccessRqst.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ValidateAccessRqst.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // string permission = 4;
  if (this->permission().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permission().data(), static_cast<int>(this->_internal_permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ValidateAccessRqst.permission");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ValidateAccessRqst)
  return target;
}

size_t ValidateAccessRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ValidateAccessRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string permission = 4;
  if (this->permission().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permission());
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAccessRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ValidateAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAccessRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateAccessRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ValidateAccessRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ValidateAccessRqst)
    MergeFrom(*source);
  }
}

void ValidateAccessRqst::MergeFrom(const ValidateAccessRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ValidateAccessRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.permission().size() > 0) {
    _internal_set_permission(from._internal_permission());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ValidateAccessRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ValidateAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAccessRqst::CopyFrom(const ValidateAccessRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ValidateAccessRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAccessRqst::IsInitialized() const {
  return true;
}

void ValidateAccessRqst::InternalSwap(ValidateAccessRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  permission_.Swap(&other->permission_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateAccessRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValidateAccessRsp::InitAsDefaultInstance() {
}
class ValidateAccessRsp::_Internal {
 public:
};

ValidateAccessRsp::ValidateAccessRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ValidateAccessRsp)
}
ValidateAccessRsp::ValidateAccessRsp(const ValidateAccessRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.ValidateAccessRsp)
}

void ValidateAccessRsp::SharedCtor() {
  result_ = false;
}

ValidateAccessRsp::~ValidateAccessRsp() {
  // @@protoc_insertion_point(destructor:resource.ValidateAccessRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValidateAccessRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ValidateAccessRsp::ArenaDtor(void* object) {
  ValidateAccessRsp* _this = reinterpret_cast< ValidateAccessRsp* >(object);
  (void)_this;
}
void ValidateAccessRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateAccessRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidateAccessRsp& ValidateAccessRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValidateAccessRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ValidateAccessRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ValidateAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateAccessRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValidateAccessRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ValidateAccessRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ValidateAccessRsp)
  return target;
}

size_t ValidateAccessRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ValidateAccessRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAccessRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ValidateAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAccessRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValidateAccessRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ValidateAccessRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ValidateAccessRsp)
    MergeFrom(*source);
  }
}

void ValidateAccessRsp::MergeFrom(const ValidateAccessRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ValidateAccessRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ValidateAccessRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ValidateAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAccessRsp::CopyFrom(const ValidateAccessRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ValidateAccessRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAccessRsp::IsInitialized() const {
  return true;
}

void ValidateAccessRsp::InternalSwap(ValidateAccessRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateAccessRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccessesRqst::InitAsDefaultInstance() {
}
class GetAccessesRqst::_Internal {
 public:
};

GetAccessesRqst::GetAccessesRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccessesRqst)
}
GetAccessesRqst::GetAccessesRqst(const GetAccessesRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.GetAccessesRqst)
}

void GetAccessesRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccessesRqst_resource_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

GetAccessesRqst::~GetAccessesRqst() {
  // @@protoc_insertion_point(destructor:resource.GetAccessesRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccessesRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAccessesRqst::ArenaDtor(void* object) {
  GetAccessesRqst* _this = reinterpret_cast< GetAccessesRqst* >(object);
  (void)_this;
}
void GetAccessesRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccessesRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccessesRqst& GetAccessesRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccessesRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccessesRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccessesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccessesRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccessesRqst.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.SubjectType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccessesRqst.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccessesRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccessesRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccessesRqst.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccessesRqst.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccessesRqst)
  return target;
}

size_t GetAccessesRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccessesRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .resource.SubjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccessesRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccessesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessesRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccessesRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccessesRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccessesRqst)
    MergeFrom(*source);
  }
}

void GetAccessesRqst::MergeFrom(const GetAccessesRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccessesRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GetAccessesRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccessesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessesRqst::CopyFrom(const GetAccessesRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccessesRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessesRqst::IsInitialized() const {
  return true;
}

void GetAccessesRqst::InternalSwap(GetAccessesRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccessesRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAccessesRsp::InitAsDefaultInstance() {
}
class GetAccessesRsp::_Internal {
 public:
};

GetAccessesRsp::GetAccessesRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  accesses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetAccessesRsp)
}
GetAccessesRsp::GetAccessesRsp(const GetAccessesRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      accesses_(from.accesses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetAccessesRsp)
}

void GetAccessesRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAccessesRsp_resource_2eproto.base);
}

GetAccessesRsp::~GetAccessesRsp() {
  // @@protoc_insertion_point(destructor:resource.GetAccessesRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAccessesRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAccessesRsp::ArenaDtor(void* object) {
  GetAccessesRsp* _this = reinterpret_cast< GetAccessesRsp* >(object);
  (void)_this;
}
void GetAccessesRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAccessesRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccessesRsp& GetAccessesRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAccessesRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetAccessesRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetAccessesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accesses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccessesRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string accesses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_accesses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetAccessesRsp.accesses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAccessesRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetAccessesRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string accesses = 1;
  for (int i = 0, n = this->_internal_accesses_size(); i < n; i++) {
    const auto& s = this->_internal_accesses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetAccessesRsp.accesses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetAccessesRsp)
  return target;
}

size_t GetAccessesRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetAccessesRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accesses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(accesses_.size());
  for (int i = 0, n = accesses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      accesses_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccessesRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetAccessesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessesRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAccessesRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetAccessesRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetAccessesRsp)
    MergeFrom(*source);
  }
}

void GetAccessesRsp::MergeFrom(const GetAccessesRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetAccessesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accesses_.MergeFrom(from.accesses_);
}

void GetAccessesRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetAccessesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessesRsp::CopyFrom(const GetAccessesRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetAccessesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessesRsp::IsInitialized() const {
  return true;
}

void GetAccessesRsp::InternalSwap(GetAccessesRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  accesses_.InternalSwap(&other->accesses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccessesRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogInfo::InitAsDefaultInstance() {
}
class LogInfo::_Internal {
 public:
};

LogInfo::LogInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.LogInfo)
}
LogInfo::LogInfo(const LogInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_application().empty()) {
    application_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_application(),
      GetArena());
  }
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_userid(),
      GetArena());
  }
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_username(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&date_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:resource.LogInfo)
}

void LogInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogInfo_resource_2eproto.base);
  application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(type_));
}

LogInfo::~LogInfo() {
  // @@protoc_insertion_point(destructor:resource.LogInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  application_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LogInfo::ArenaDtor(void* object) {
  LogInfo* _this = reinterpret_cast< LogInfo* >(object);
  (void)_this;
}
void LogInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogInfo& LogInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogInfo_resource_2eproto.base);
  return *internal_default_instance();
}


void LogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.LogInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  application_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  username_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&date_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 date = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .resource.LogType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::LogType>(val));
        } else goto handle_unusual;
        continue;
      // string application = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_application();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LogInfo.application"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LogInfo.userId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LogInfo.userName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LogInfo.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.LogInfo.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.LogInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 date = 1;
  if (this->date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_date(), target);
  }

  // .resource.LogType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string application = 3;
  if (this->application().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application().data(), static_cast<int>(this->_internal_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LogInfo.application");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_application(), target);
  }

  // string userId = 4;
  if (this->userid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LogInfo.userId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_userid(), target);
  }

  // string userName = 5;
  if (this->username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LogInfo.userName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_username(), target);
  }

  // string method = 6;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LogInfo.method");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_method(), target);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.LogInfo.message");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.LogInfo)
  return target;
}

size_t LogInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.LogInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string application = 3;
  if (this->application().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application());
  }

  // string userId = 4;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  // string userName = 5;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string method = 6;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 date = 1;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_date());
  }

  // .resource.LogType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.LogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LogInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.LogInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.LogInfo)
    MergeFrom(*source);
  }
}

void LogInfo::MergeFrom(const LogInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.LogInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.application().size() > 0) {
    _internal_set_application(from._internal_application());
  }
  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.username().size() > 0) {
    _internal_set_username(from._internal_username());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void LogInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.LogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogInfo::CopyFrom(const LogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.LogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogInfo::IsInitialized() const {
  return true;
}

void LogInfo::InternalSwap(LogInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  application_.Swap(&other->application_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogInfo, type_)
      + sizeof(LogInfo::type_)
      - PROTOBUF_FIELD_OFFSET(LogInfo, date_)>(
          reinterpret_cast<char*>(&date_),
          reinterpret_cast<char*>(&other->date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogRqst::InitAsDefaultInstance() {
  ::resource::_LogRqst_default_instance_._instance.get_mutable()->info_ = const_cast< ::resource::LogInfo*>(
      ::resource::LogInfo::internal_default_instance());
}
class LogRqst::_Internal {
 public:
  static const ::resource::LogInfo& info(const LogRqst* msg);
};

const ::resource::LogInfo&
LogRqst::_Internal::info(const LogRqst* msg) {
  return *msg->info_;
}
LogRqst::LogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.LogRqst)
}
LogRqst::LogRqst(const LogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::resource::LogInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.LogRqst)
}

void LogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogRqst_resource_2eproto.base);
  info_ = nullptr;
}

LogRqst::~LogRqst() {
  // @@protoc_insertion_point(destructor:resource.LogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
}

void LogRqst::ArenaDtor(void* object) {
  LogRqst* _this = reinterpret_cast< LogRqst* >(object);
  (void)_this;
}
void LogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogRqst& LogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void LogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.LogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.LogInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.LogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.LogInfo info = 1;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.LogRqst)
  return target;
}

size_t LogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.LogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.LogInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.LogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const LogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.LogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.LogRqst)
    MergeFrom(*source);
  }
}

void LogRqst::MergeFrom(const LogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.LogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::resource::LogInfo::MergeFrom(from._internal_info());
  }
}

void LogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.LogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogRqst::CopyFrom(const LogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.LogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRqst::IsInitialized() const {
  return true;
}

void LogRqst::InternalSwap(LogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogRsp::InitAsDefaultInstance() {
}
class LogRsp::_Internal {
 public:
};

LogRsp::LogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.LogRsp)
}
LogRsp::LogRsp(const LogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.LogRsp)
}

void LogRsp::SharedCtor() {
  result_ = false;
}

LogRsp::~LogRsp() {
  // @@protoc_insertion_point(destructor:resource.LogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LogRsp::ArenaDtor(void* object) {
  LogRsp* _this = reinterpret_cast< LogRsp* >(object);
  (void)_this;
}
void LogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogRsp& LogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void LogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.LogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.LogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.LogRsp)
  return target;
}

size_t LogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.LogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.LogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.LogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.LogRsp)
    MergeFrom(*source);
  }
}

void LogRsp::MergeFrom(const LogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.LogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void LogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.LogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogRsp::CopyFrom(const LogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.LogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRsp::IsInitialized() const {
  return true;
}

void LogRsp::InternalSwap(LogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteLogRqst::InitAsDefaultInstance() {
  ::resource::_DeleteLogRqst_default_instance_._instance.get_mutable()->log_ = const_cast< ::resource::LogInfo*>(
      ::resource::LogInfo::internal_default_instance());
}
class DeleteLogRqst::_Internal {
 public:
  static const ::resource::LogInfo& log(const DeleteLogRqst* msg);
};

const ::resource::LogInfo&
DeleteLogRqst::_Internal::log(const DeleteLogRqst* msg) {
  return *msg->log_;
}
DeleteLogRqst::DeleteLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteLogRqst)
}
DeleteLogRqst::DeleteLogRqst(const DeleteLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log()) {
    log_ = new ::resource::LogInfo(*from.log_);
  } else {
    log_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:resource.DeleteLogRqst)
}

void DeleteLogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteLogRqst_resource_2eproto.base);
  log_ = nullptr;
}

DeleteLogRqst::~DeleteLogRqst() {
  // @@protoc_insertion_point(destructor:resource.DeleteLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete log_;
}

void DeleteLogRqst::ArenaDtor(void* object) {
  DeleteLogRqst* _this = reinterpret_cast< DeleteLogRqst* >(object);
  (void)_this;
}
void DeleteLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRqst& DeleteLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && log_ != nullptr) {
    delete log_;
  }
  log_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.LogInfo log = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.LogInfo log = 1;
  if (this->has_log()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::log(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteLogRqst)
  return target;
}

size_t DeleteLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.LogInfo log = 1;
  if (this->has_log()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *log_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteLogRqst)
    MergeFrom(*source);
  }
}

void DeleteLogRqst::MergeFrom(const DeleteLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_log()) {
    _internal_mutable_log()->::resource::LogInfo::MergeFrom(from._internal_log());
  }
}

void DeleteLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRqst::CopyFrom(const DeleteLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRqst::IsInitialized() const {
  return true;
}

void DeleteLogRqst::InternalSwap(DeleteLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(log_, other->log_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteLogRsp::InitAsDefaultInstance() {
}
class DeleteLogRsp::_Internal {
 public:
};

DeleteLogRsp::DeleteLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.DeleteLogRsp)
}
DeleteLogRsp::DeleteLogRsp(const DeleteLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.DeleteLogRsp)
}

void DeleteLogRsp::SharedCtor() {
  result_ = false;
}

DeleteLogRsp::~DeleteLogRsp() {
  // @@protoc_insertion_point(destructor:resource.DeleteLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteLogRsp::ArenaDtor(void* object) {
  DeleteLogRsp* _this = reinterpret_cast< DeleteLogRsp* >(object);
  (void)_this;
}
void DeleteLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRsp& DeleteLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.DeleteLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.DeleteLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.DeleteLogRsp)
  return target;
}

size_t DeleteLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.DeleteLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.DeleteLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.DeleteLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.DeleteLogRsp)
    MergeFrom(*source);
  }
}

void DeleteLogRsp::MergeFrom(const DeleteLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.DeleteLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.DeleteLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRsp::CopyFrom(const DeleteLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.DeleteLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRsp::IsInitialized() const {
  return true;
}

void DeleteLogRsp::InternalSwap(DeleteLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetLogMethodRqst::InitAsDefaultInstance() {
}
class SetLogMethodRqst::_Internal {
 public:
};

SetLogMethodRqst::SetLogMethodRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetLogMethodRqst)
}
SetLogMethodRqst::SetLogMethodRqst(const SetLogMethodRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.SetLogMethodRqst)
}

void SetLogMethodRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetLogMethodRqst_resource_2eproto.base);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetLogMethodRqst::~SetLogMethodRqst() {
  // @@protoc_insertion_point(destructor:resource.SetLogMethodRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogMethodRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetLogMethodRqst::ArenaDtor(void* object) {
  SetLogMethodRqst* _this = reinterpret_cast< SetLogMethodRqst* >(object);
  (void)_this;
}
void SetLogMethodRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogMethodRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLogMethodRqst& SetLogMethodRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLogMethodRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void SetLogMethodRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogMethodRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.SetLogMethodRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogMethodRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.SetLogMethodRqst.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetLogMethodRqst)
  return target;
}

size_t SetLogMethodRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetLogMethodRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogMethodRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogMethodRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogMethodRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetLogMethodRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetLogMethodRqst)
    MergeFrom(*source);
  }
}

void SetLogMethodRqst::MergeFrom(const SetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void SetLogMethodRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogMethodRqst::CopyFrom(const SetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogMethodRqst::IsInitialized() const {
  return true;
}

void SetLogMethodRqst::InternalSwap(SetLogMethodRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogMethodRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetLogMethodRsp::InitAsDefaultInstance() {
}
class SetLogMethodRsp::_Internal {
 public:
};

SetLogMethodRsp::SetLogMethodRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.SetLogMethodRsp)
}
SetLogMethodRsp::SetLogMethodRsp(const SetLogMethodRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.SetLogMethodRsp)
}

void SetLogMethodRsp::SharedCtor() {
  result_ = false;
}

SetLogMethodRsp::~SetLogMethodRsp() {
  // @@protoc_insertion_point(destructor:resource.SetLogMethodRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogMethodRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetLogMethodRsp::ArenaDtor(void* object) {
  SetLogMethodRsp* _this = reinterpret_cast< SetLogMethodRsp* >(object);
  (void)_this;
}
void SetLogMethodRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogMethodRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLogMethodRsp& SetLogMethodRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLogMethodRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void SetLogMethodRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.SetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogMethodRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogMethodRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.SetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.SetLogMethodRsp)
  return target;
}

size_t SetLogMethodRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.SetLogMethodRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogMethodRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.SetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogMethodRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogMethodRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.SetLogMethodRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.SetLogMethodRsp)
    MergeFrom(*source);
  }
}

void SetLogMethodRsp::MergeFrom(const SetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.SetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetLogMethodRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.SetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogMethodRsp::CopyFrom(const SetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.SetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogMethodRsp::IsInitialized() const {
  return true;
}

void SetLogMethodRsp::InternalSwap(SetLogMethodRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogMethodRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetLogMethodRqst::InitAsDefaultInstance() {
}
class ResetLogMethodRqst::_Internal {
 public:
};

ResetLogMethodRqst::ResetLogMethodRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ResetLogMethodRqst)
}
ResetLogMethodRqst::ResetLogMethodRqst(const ResetLogMethodRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.ResetLogMethodRqst)
}

void ResetLogMethodRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetLogMethodRqst_resource_2eproto.base);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetLogMethodRqst::~ResetLogMethodRqst() {
  // @@protoc_insertion_point(destructor:resource.ResetLogMethodRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetLogMethodRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetLogMethodRqst::ArenaDtor(void* object) {
  ResetLogMethodRqst* _this = reinterpret_cast< ResetLogMethodRqst* >(object);
  (void)_this;
}
void ResetLogMethodRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetLogMethodRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetLogMethodRqst& ResetLogMethodRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetLogMethodRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ResetLogMethodRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ResetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetLogMethodRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.ResetLogMethodRqst.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetLogMethodRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ResetLogMethodRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.ResetLogMethodRqst.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ResetLogMethodRqst)
  return target;
}

size_t ResetLogMethodRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ResetLogMethodRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetLogMethodRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ResetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetLogMethodRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetLogMethodRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ResetLogMethodRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ResetLogMethodRqst)
    MergeFrom(*source);
  }
}

void ResetLogMethodRqst::MergeFrom(const ResetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ResetLogMethodRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
}

void ResetLogMethodRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ResetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetLogMethodRqst::CopyFrom(const ResetLogMethodRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ResetLogMethodRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetLogMethodRqst::IsInitialized() const {
  return true;
}

void ResetLogMethodRqst::InternalSwap(ResetLogMethodRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetLogMethodRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetLogMethodRsp::InitAsDefaultInstance() {
}
class ResetLogMethodRsp::_Internal {
 public:
};

ResetLogMethodRsp::ResetLogMethodRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ResetLogMethodRsp)
}
ResetLogMethodRsp::ResetLogMethodRsp(const ResetLogMethodRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.ResetLogMethodRsp)
}

void ResetLogMethodRsp::SharedCtor() {
  result_ = false;
}

ResetLogMethodRsp::~ResetLogMethodRsp() {
  // @@protoc_insertion_point(destructor:resource.ResetLogMethodRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetLogMethodRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResetLogMethodRsp::ArenaDtor(void* object) {
  ResetLogMethodRsp* _this = reinterpret_cast< ResetLogMethodRsp* >(object);
  (void)_this;
}
void ResetLogMethodRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetLogMethodRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetLogMethodRsp& ResetLogMethodRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetLogMethodRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ResetLogMethodRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ResetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetLogMethodRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetLogMethodRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ResetLogMethodRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ResetLogMethodRsp)
  return target;
}

size_t ResetLogMethodRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ResetLogMethodRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetLogMethodRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ResetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetLogMethodRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetLogMethodRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ResetLogMethodRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ResetLogMethodRsp)
    MergeFrom(*source);
  }
}

void ResetLogMethodRsp::MergeFrom(const ResetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ResetLogMethodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ResetLogMethodRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ResetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetLogMethodRsp::CopyFrom(const ResetLogMethodRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ResetLogMethodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetLogMethodRsp::IsInitialized() const {
  return true;
}

void ResetLogMethodRsp::InternalSwap(ResetLogMethodRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetLogMethodRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogMethodsRqst::InitAsDefaultInstance() {
}
class GetLogMethodsRqst::_Internal {
 public:
};

GetLogMethodsRqst::GetLogMethodsRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetLogMethodsRqst)
}
GetLogMethodsRqst::GetLogMethodsRqst(const GetLogMethodsRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetLogMethodsRqst)
}

void GetLogMethodsRqst::SharedCtor() {
}

GetLogMethodsRqst::~GetLogMethodsRqst() {
  // @@protoc_insertion_point(destructor:resource.GetLogMethodsRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogMethodsRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogMethodsRqst::ArenaDtor(void* object) {
  GetLogMethodsRqst* _this = reinterpret_cast< GetLogMethodsRqst* >(object);
  (void)_this;
}
void GetLogMethodsRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogMethodsRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogMethodsRqst& GetLogMethodsRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogMethodsRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetLogMethodsRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetLogMethodsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogMethodsRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogMethodsRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetLogMethodsRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetLogMethodsRqst)
  return target;
}

size_t GetLogMethodsRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetLogMethodsRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogMethodsRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetLogMethodsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMethodsRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogMethodsRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetLogMethodsRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetLogMethodsRqst)
    MergeFrom(*source);
  }
}

void GetLogMethodsRqst::MergeFrom(const GetLogMethodsRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetLogMethodsRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetLogMethodsRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetLogMethodsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMethodsRqst::CopyFrom(const GetLogMethodsRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetLogMethodsRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMethodsRqst::IsInitialized() const {
  return true;
}

void GetLogMethodsRqst::InternalSwap(GetLogMethodsRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogMethodsRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogMethodsRsp::InitAsDefaultInstance() {
}
class GetLogMethodsRsp::_Internal {
 public:
};

GetLogMethodsRsp::GetLogMethodsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  methods_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetLogMethodsRsp)
}
GetLogMethodsRsp::GetLogMethodsRsp(const GetLogMethodsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      methods_(from.methods_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetLogMethodsRsp)
}

void GetLogMethodsRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogMethodsRsp_resource_2eproto.base);
}

GetLogMethodsRsp::~GetLogMethodsRsp() {
  // @@protoc_insertion_point(destructor:resource.GetLogMethodsRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogMethodsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogMethodsRsp::ArenaDtor(void* object) {
  GetLogMethodsRsp* _this = reinterpret_cast< GetLogMethodsRsp* >(object);
  (void)_this;
}
void GetLogMethodsRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogMethodsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogMethodsRsp& GetLogMethodsRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogMethodsRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetLogMethodsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetLogMethodsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  methods_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogMethodsRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string methods = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_methods();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetLogMethodsRsp.methods"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogMethodsRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetLogMethodsRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string methods = 1;
  for (int i = 0, n = this->_internal_methods_size(); i < n; i++) {
    const auto& s = this->_internal_methods(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetLogMethodsRsp.methods");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetLogMethodsRsp)
  return target;
}

size_t GetLogMethodsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetLogMethodsRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string methods = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(methods_.size());
  for (int i = 0, n = methods_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      methods_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogMethodsRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetLogMethodsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMethodsRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogMethodsRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetLogMethodsRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetLogMethodsRsp)
    MergeFrom(*source);
  }
}

void GetLogMethodsRsp::MergeFrom(const GetLogMethodsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetLogMethodsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  methods_.MergeFrom(from.methods_);
}

void GetLogMethodsRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetLogMethodsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMethodsRsp::CopyFrom(const GetLogMethodsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetLogMethodsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMethodsRsp::IsInitialized() const {
  return true;
}

void GetLogMethodsRsp::InternalSwap(GetLogMethodsRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  methods_.InternalSwap(&other->methods_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogMethodsRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogRqst::InitAsDefaultInstance() {
}
class GetLogRqst::_Internal {
 public:
};

GetLogRqst::GetLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetLogRqst)
}
GetLogRqst::GetLogRqst(const GetLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:resource.GetLogRqst)
}

void GetLogRqst::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogRqst_resource_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetLogRqst::~GetLogRqst() {
  // @@protoc_insertion_point(destructor:resource.GetLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetLogRqst::ArenaDtor(void* object) {
  GetLogRqst* _this = reinterpret_cast< GetLogRqst* >(object);
  (void)_this;
}
void GetLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogRqst& GetLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void GetLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.GetLogRqst.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.GetLogRqst.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetLogRqst)
  return target;
}

size_t GetLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetLogRqst)
    MergeFrom(*source);
  }
}

void GetLogRqst::MergeFrom(const GetLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void GetLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogRqst::CopyFrom(const GetLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogRqst::IsInitialized() const {
  return true;
}

void GetLogRqst::InternalSwap(GetLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogRsp::InitAsDefaultInstance() {
}
class GetLogRsp::_Internal {
 public:
};

GetLogRsp::GetLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.GetLogRsp)
}
GetLogRsp::GetLogRsp(const GetLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      info_(from.info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.GetLogRsp)
}

void GetLogRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogRsp_resource_2eproto.base);
}

GetLogRsp::~GetLogRsp() {
  // @@protoc_insertion_point(destructor:resource.GetLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLogRsp::ArenaDtor(void* object) {
  GetLogRsp* _this = reinterpret_cast< GetLogRsp* >(object);
  (void)_this;
}
void GetLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogRsp& GetLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void GetLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.GetLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .resource.LogInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.GetLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.LogInfo info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.GetLogRsp)
  return target;
}

size_t GetLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.GetLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.LogInfo info = 1;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.GetLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.GetLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.GetLogRsp)
    MergeFrom(*source);
  }
}

void GetLogRsp::MergeFrom(const GetLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.GetLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
}

void GetLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.GetLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogRsp::CopyFrom(const GetLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.GetLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogRsp::IsInitialized() const {
  return true;
}

void GetLogRsp::InternalSwap(GetLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  info_.InternalSwap(&other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllLogRqst::InitAsDefaultInstance() {
}
class ClearAllLogRqst::_Internal {
 public:
};

ClearAllLogRqst::ClearAllLogRqst(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllLogRqst)
}
ClearAllLogRqst::ClearAllLogRqst(const ClearAllLogRqst& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllLogRqst)
}

void ClearAllLogRqst::SharedCtor() {
  type_ = 0;
}

ClearAllLogRqst::~ClearAllLogRqst() {
  // @@protoc_insertion_point(destructor:resource.ClearAllLogRqst)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllLogRqst::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllLogRqst::ArenaDtor(void* object) {
  ClearAllLogRqst* _this = reinterpret_cast< ClearAllLogRqst* >(object);
  (void)_this;
}
void ClearAllLogRqst::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllLogRqst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllLogRqst& ClearAllLogRqst::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllLogRqst_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllLogRqst::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllLogRqst::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .resource.LogType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::resource::LogType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllLogRqst::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllLogRqst)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .resource.LogType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllLogRqst)
  return target;
}

size_t ClearAllLogRqst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllLogRqst)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .resource.LogType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllLogRqst::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllLogRqst* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllLogRqst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllLogRqst)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllLogRqst)
    MergeFrom(*source);
  }
}

void ClearAllLogRqst::MergeFrom(const ClearAllLogRqst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllLogRqst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ClearAllLogRqst::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllLogRqst::CopyFrom(const ClearAllLogRqst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllLogRqst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllLogRqst::IsInitialized() const {
  return true;
}

void ClearAllLogRqst::InternalSwap(ClearAllLogRqst* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllLogRqst::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearAllLogRsp::InitAsDefaultInstance() {
}
class ClearAllLogRsp::_Internal {
 public:
};

ClearAllLogRsp::ClearAllLogRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:resource.ClearAllLogRsp)
}
ClearAllLogRsp::ClearAllLogRsp(const ClearAllLogRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:resource.ClearAllLogRsp)
}

void ClearAllLogRsp::SharedCtor() {
  result_ = false;
}

ClearAllLogRsp::~ClearAllLogRsp() {
  // @@protoc_insertion_point(destructor:resource.ClearAllLogRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearAllLogRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearAllLogRsp::ArenaDtor(void* object) {
  ClearAllLogRsp* _this = reinterpret_cast< ClearAllLogRsp* >(object);
  (void)_this;
}
void ClearAllLogRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearAllLogRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearAllLogRsp& ClearAllLogRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearAllLogRsp_resource_2eproto.base);
  return *internal_default_instance();
}


void ClearAllLogRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.ClearAllLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearAllLogRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearAllLogRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.ClearAllLogRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.ClearAllLogRsp)
  return target;
}

size_t ClearAllLogRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.ClearAllLogRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearAllLogRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:resource.ClearAllLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearAllLogRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearAllLogRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:resource.ClearAllLogRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:resource.ClearAllLogRsp)
    MergeFrom(*source);
  }
}

void ClearAllLogRsp::MergeFrom(const ClearAllLogRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.ClearAllLogRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ClearAllLogRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:resource.ClearAllLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearAllLogRsp::CopyFrom(const ClearAllLogRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.ClearAllLogRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAllLogRsp::IsInitialized() const {
  return true;
}

void ClearAllLogRsp::InternalSwap(ClearAllLogRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearAllLogRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::resource::UserSyncInfos* Arena::CreateMaybeMessage< ::resource::UserSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UserSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GroupSyncInfos* Arena::CreateMaybeMessage< ::resource::GroupSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GroupSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::LdapSyncInfos* Arena::CreateMaybeMessage< ::resource::LdapSyncInfos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::LdapSyncInfos >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SynchronizeLdapRqst* Arena::CreateMaybeMessage< ::resource::SynchronizeLdapRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SynchronizeLdapRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SynchronizeLdapRsp* Arena::CreateMaybeMessage< ::resource::SynchronizeLdapRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SynchronizeLdapRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ValidateTokenRqst* Arena::CreateMaybeMessage< ::resource::ValidateTokenRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ValidateTokenRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ValidateTokenRsp* Arena::CreateMaybeMessage< ::resource::ValidateTokenRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ValidateTokenRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAllActionsRqst* Arena::CreateMaybeMessage< ::resource::GetAllActionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAllActionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAllActionsRsp* Arena::CreateMaybeMessage< ::resource::GetAllActionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAllActionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Account* Arena::CreateMaybeMessage< ::resource::Account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Account >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Role* Arena::CreateMaybeMessage< ::resource::Role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Role >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRqst* Arena::CreateMaybeMessage< ::resource::RegisterAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterAccountRsp* Arena::CreateMaybeMessage< ::resource::RegisterAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRqst* Arena::CreateMaybeMessage< ::resource::DeleteAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAccountRsp* Arena::CreateMaybeMessage< ::resource::DeleteAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AuthenticateRqst* Arena::CreateMaybeMessage< ::resource::AuthenticateRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AuthenticateRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AuthenticateRsp* Arena::CreateMaybeMessage< ::resource::AuthenticateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AuthenticateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RefreshTokenRqst* Arena::CreateMaybeMessage< ::resource::RefreshTokenRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RefreshTokenRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RefreshTokenRsp* Arena::CreateMaybeMessage< ::resource::RefreshTokenRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RefreshTokenRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::AddAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveAccountRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveAccountRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveAccountRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRqst* Arena::CreateMaybeMessage< ::resource::CreateRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateRoleRsp* Arena::CreateMaybeMessage< ::resource::CreateRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRqst* Arena::CreateMaybeMessage< ::resource::DeleteRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteRoleRsp* Arena::CreateMaybeMessage< ::resource::DeleteRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRqst* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteApplicationRsp* Arena::CreateMaybeMessage< ::resource::DeleteApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAllApplicationsInfoRqst* Arena::CreateMaybeMessage< ::resource::GetAllApplicationsInfoRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAllApplicationsInfoRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAllApplicationsInfoRsp* Arena::CreateMaybeMessage< ::resource::GetAllApplicationsInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAllApplicationsInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRqst* Arena::CreateMaybeMessage< ::resource::AccountExistRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AccountExistRsp* Arena::CreateMaybeMessage< ::resource::AccountExistRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AccountExistRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Group* Arena::CreateMaybeMessage< ::resource::Group >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Group >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRqst* Arena::CreateMaybeMessage< ::resource::CreateGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateGroupRsp* Arena::CreateMaybeMessage< ::resource::CreateGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRqst* Arena::CreateMaybeMessage< ::resource::GetGroupsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetGroupsRsp* Arena::CreateMaybeMessage< ::resource::GetGroupsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetGroupsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRqst* Arena::CreateMaybeMessage< ::resource::DeleteGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteGroupRsp* Arena::CreateMaybeMessage< ::resource::DeleteGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::AddGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveGroupMemberAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveGroupMemberAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveGroupMemberAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Organization* Arena::CreateMaybeMessage< ::resource::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRqst* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::CreateOrganizationRsp* Arena::CreateMaybeMessage< ::resource::CreateOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::CreateOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRqst* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetOrganizationsRsp* Arena::CreateMaybeMessage< ::resource::GetOrganizationsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetOrganizationsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRqst* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteOrganizationRsp* Arena::CreateMaybeMessage< ::resource::DeleteOrganizationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteOrganizationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Peer* Arena::CreateMaybeMessage< ::resource::Peer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Peer >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRqst* Arena::CreateMaybeMessage< ::resource::RegisterPeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RegisterPeerRsp* Arena::CreateMaybeMessage< ::resource::RegisterPeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RegisterPeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRqst* Arena::CreateMaybeMessage< ::resource::GetPeersRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetPeersRsp* Arena::CreateMaybeMessage< ::resource::GetPeersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetPeersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRqst* Arena::CreateMaybeMessage< ::resource::DeletePeerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeletePeerRsp* Arena::CreateMaybeMessage< ::resource::DeletePeerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeletePeerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionRqst* Arena::CreateMaybeMessage< ::resource::AddRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddRoleActionRsp* Arena::CreateMaybeMessage< ::resource::AddRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveRoleActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveRoleActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveRoleActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionRqst* Arena::CreateMaybeMessage< ::resource::AddApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddApplicationActionRsp* Arena::CreateMaybeMessage< ::resource::AddApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRqst* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveApplicationActionRsp* Arena::CreateMaybeMessage< ::resource::RemoveApplicationActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveApplicationActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionRqst* Arena::CreateMaybeMessage< ::resource::AddPeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddPeerActionRsp* Arena::CreateMaybeMessage< ::resource::AddPeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddPeerActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRqst* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemovePeerActionRsp* Arena::CreateMaybeMessage< ::resource::RemovePeerActionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemovePeerActionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::AddOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationGroupRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationGroupRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationGroupRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationRoleRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationRoleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationRoleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationApplicationRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationApplicationRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationApplicationRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRqst* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::RemoveOrganizationAccountRsp* Arena::CreateMaybeMessage< ::resource::RemoveOrganizationAccountRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::RemoveOrganizationAccountRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Permission* Arena::CreateMaybeMessage< ::resource::Permission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Permission >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::Permissions* Arena::CreateMaybeMessage< ::resource::Permissions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::Permissions >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ActionResourceParameterPermission* Arena::CreateMaybeMessage< ::resource::ActionResourceParameterPermission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ActionResourceParameterPermission >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetActionResourcesPermissionRqst* Arena::CreateMaybeMessage< ::resource::SetActionResourcesPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetActionResourcesPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetActionResourcesPermissionRsp* Arena::CreateMaybeMessage< ::resource::SetActionResourcesPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetActionResourcesPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetActionResourcesPermissionRqst* Arena::CreateMaybeMessage< ::resource::GetActionResourcesPermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetActionResourcesPermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetActionResourcesPermissionRsp* Arena::CreateMaybeMessage< ::resource::GetActionResourcesPermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetActionResourcesPermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetResourcePermissionsRqst* Arena::CreateMaybeMessage< ::resource::GetResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetResourcePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetResourcePermissionsRsp* Arena::CreateMaybeMessage< ::resource::GetResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetResourcePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteResourcePermissionsRqst* Arena::CreateMaybeMessage< ::resource::DeleteResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteResourcePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteResourcePermissionsRsp* Arena::CreateMaybeMessage< ::resource::DeleteResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteResourcePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetResourcePermissionRqst* Arena::CreateMaybeMessage< ::resource::GetResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetResourcePermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetResourcePermissionRsp* Arena::CreateMaybeMessage< ::resource::GetResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetResourcePermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteResourcePermissionRqst* Arena::CreateMaybeMessage< ::resource::DeleteResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteResourcePermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteResourcePermissionRsp* Arena::CreateMaybeMessage< ::resource::DeleteResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteResourcePermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetResourcePermissionsRqst* Arena::CreateMaybeMessage< ::resource::SetResourcePermissionsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetResourcePermissionsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetResourcePermissionsRsp* Arena::CreateMaybeMessage< ::resource::SetResourcePermissionsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetResourcePermissionsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetResourcePermissionRqst* Arena::CreateMaybeMessage< ::resource::SetResourcePermissionRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetResourcePermissionRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetResourcePermissionRsp* Arena::CreateMaybeMessage< ::resource::SetResourcePermissionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetResourcePermissionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddResourceOwnerRqst* Arena::CreateMaybeMessage< ::resource::AddResourceOwnerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddResourceOwnerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::AddResourceOwnerRsp* Arena::CreateMaybeMessage< ::resource::AddResourceOwnerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::AddResourceOwnerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::removeResourceOwnerRqst* Arena::CreateMaybeMessage< ::resource::removeResourceOwnerRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::removeResourceOwnerRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::removeResourceOwnerRsp* Arena::CreateMaybeMessage< ::resource::removeResourceOwnerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::removeResourceOwnerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAllAccessRqst* Arena::CreateMaybeMessage< ::resource::DeleteAllAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAllAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteAllAccessRsp* Arena::CreateMaybeMessage< ::resource::DeleteAllAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteAllAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ValidateAccessRqst* Arena::CreateMaybeMessage< ::resource::ValidateAccessRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ValidateAccessRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ValidateAccessRsp* Arena::CreateMaybeMessage< ::resource::ValidateAccessRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ValidateAccessRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccessesRqst* Arena::CreateMaybeMessage< ::resource::GetAccessesRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccessesRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetAccessesRsp* Arena::CreateMaybeMessage< ::resource::GetAccessesRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetAccessesRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::LogInfo* Arena::CreateMaybeMessage< ::resource::LogInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::LogInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::LogRqst* Arena::CreateMaybeMessage< ::resource::LogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::LogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::LogRsp* Arena::CreateMaybeMessage< ::resource::LogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::LogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteLogRqst* Arena::CreateMaybeMessage< ::resource::DeleteLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::DeleteLogRsp* Arena::CreateMaybeMessage< ::resource::DeleteLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::DeleteLogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetLogMethodRqst* Arena::CreateMaybeMessage< ::resource::SetLogMethodRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetLogMethodRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::SetLogMethodRsp* Arena::CreateMaybeMessage< ::resource::SetLogMethodRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::SetLogMethodRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ResetLogMethodRqst* Arena::CreateMaybeMessage< ::resource::ResetLogMethodRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ResetLogMethodRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ResetLogMethodRsp* Arena::CreateMaybeMessage< ::resource::ResetLogMethodRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ResetLogMethodRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetLogMethodsRqst* Arena::CreateMaybeMessage< ::resource::GetLogMethodsRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetLogMethodsRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetLogMethodsRsp* Arena::CreateMaybeMessage< ::resource::GetLogMethodsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetLogMethodsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetLogRqst* Arena::CreateMaybeMessage< ::resource::GetLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::GetLogRsp* Arena::CreateMaybeMessage< ::resource::GetLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::GetLogRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllLogRqst* Arena::CreateMaybeMessage< ::resource::ClearAllLogRqst >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllLogRqst >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::ClearAllLogRsp* Arena::CreateMaybeMessage< ::resource::ClearAllLogRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::ClearAllLogRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

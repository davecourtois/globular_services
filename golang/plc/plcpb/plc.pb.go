//*
// You can use plc as starter project.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: proto/plc.proto

package plcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//  AB CPU models: plc,plc5,slc,slc500,micrologix,mlgx,compactlogix,clgx,lgx,controllogix,contrologix,flexlogix,flgx
type CpuType int32

const (
	// Alan Bradley
	CpuType_PLC          CpuType = 0
	CpuType_PLC5         CpuType = 1
	CpuType_SLC          CpuType = 2
	CpuType_SLC500       CpuType = 3
	CpuType_MICROLOGIX   CpuType = 4
	CpuType_MLGX         CpuType = 5
	CpuType_COMPACTLOGIX CpuType = 6
	CpuType_CLGX         CpuType = 7
	CpuType_LGX          CpuType = 8
	CpuType_CONTROLLOGIX CpuType = 9
	CpuType_CONTROLOGIX  CpuType = 10
	CpuType_FLEXLOGIX    CpuType = 11
	CpuType_FLGX         CpuType = 12
	// Simmens
	CpuType_SIMMENS CpuType = 14
)

// Enum value maps for CpuType.
var (
	CpuType_name = map[int32]string{
		0:  "PLC",
		1:  "PLC5",
		2:  "SLC",
		3:  "SLC500",
		4:  "MICROLOGIX",
		5:  "MLGX",
		6:  "COMPACTLOGIX",
		7:  "CLGX",
		8:  "LGX",
		9:  "CONTROLLOGIX",
		10: "CONTROLOGIX",
		11: "FLEXLOGIX",
		12: "FLGX",
		14: "SIMMENS",
	}
	CpuType_value = map[string]int32{
		"PLC":          0,
		"PLC5":         1,
		"SLC":          2,
		"SLC500":       3,
		"MICROLOGIX":   4,
		"MLGX":         5,
		"COMPACTLOGIX": 6,
		"CLGX":         7,
		"LGX":          8,
		"CONTROLLOGIX": 9,
		"CONTROLOGIX":  10,
		"FLEXLOGIX":    11,
		"FLGX":         12,
		"SIMMENS":      14,
	}
)

func (x CpuType) Enum() *CpuType {
	p := new(CpuType)
	*p = x
	return p
}

func (x CpuType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CpuType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plc_proto_enumTypes[0].Descriptor()
}

func (CpuType) Type() protoreflect.EnumType {
	return &file_proto_plc_proto_enumTypes[0]
}

func (x CpuType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CpuType.Descriptor instead.
func (CpuType) EnumDescriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{0}
}

type ProtocolType int32

const (
	// Alan Bradley
	ProtocolType_AB_EIP ProtocolType = 0
	ProtocolType_AB_CIP ProtocolType = 1
)

// Enum value maps for ProtocolType.
var (
	ProtocolType_name = map[int32]string{
		0: "AB_EIP",
		1: "AB_CIP",
	}
	ProtocolType_value = map[string]int32{
		"AB_EIP": 0,
		"AB_CIP": 1,
	}
)

func (x ProtocolType) Enum() *ProtocolType {
	p := new(ProtocolType)
	*p = x
	return p
}

func (x ProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plc_proto_enumTypes[1].Descriptor()
}

func (ProtocolType) Type() protoreflect.EnumType {
	return &file_proto_plc_proto_enumTypes[1]
}

func (x ProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolType.Descriptor instead.
func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{1}
}

type PortType int32

const (
	// alan bradley
	PortType_BACKPLANE         PortType = 0
	PortType_NET_ETHERNET      PortType = 1
	PortType_DH_PLUS_CHANNEL_A PortType = 2
	PortType_DH_PLUS_CHANNEL_B PortType = 3
	// Simmens
	PortType_SERIAL PortType = 4
	PortType_TCP    PortType = 5
)

// Enum value maps for PortType.
var (
	PortType_name = map[int32]string{
		0: "BACKPLANE",
		1: "NET_ETHERNET",
		2: "DH_PLUS_CHANNEL_A",
		3: "DH_PLUS_CHANNEL_B",
		4: "SERIAL",
		5: "TCP",
	}
	PortType_value = map[string]int32{
		"BACKPLANE":         0,
		"NET_ETHERNET":      1,
		"DH_PLUS_CHANNEL_A": 2,
		"DH_PLUS_CHANNEL_B": 3,
		"SERIAL":            4,
		"TCP":               5,
	}
)

func (x PortType) Enum() *PortType {
	p := new(PortType)
	*p = x
	return p
}

func (x PortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plc_proto_enumTypes[2].Descriptor()
}

func (PortType) Type() protoreflect.EnumType {
	return &file_proto_plc_proto_enumTypes[2]
}

func (x PortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortType.Descriptor instead.
func (PortType) EnumDescriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{2}
}

// Define the type of tag to store in the plc.
type TagType int32

const (
	TagType_BOOL  TagType = 0
	TagType_SINT  TagType = 1
	TagType_INT   TagType = 2
	TagType_DINT  TagType = 3
	TagType_REAL  TagType = 4
	TagType_LREAL TagType = 5
	TagType_LINT  TagType = 6
)

// Enum value maps for TagType.
var (
	TagType_name = map[int32]string{
		0: "BOOL",
		1: "SINT",
		2: "INT",
		3: "DINT",
		4: "REAL",
		5: "LREAL",
		6: "LINT",
	}
	TagType_value = map[string]int32{
		"BOOL":  0,
		"SINT":  1,
		"INT":   2,
		"DINT":  3,
		"REAL":  4,
		"LREAL": 5,
		"LINT":  6,
	}
)

func (x TagType) Enum() *TagType {
	p := new(TagType)
	*p = x
	return p
}

func (x TagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plc_proto_enumTypes[3].Descriptor()
}

func (TagType) Type() protoreflect.EnumType {
	return &file_proto_plc_proto_enumTypes[3]
}

func (x TagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagType.Descriptor instead.
func (TagType) EnumDescriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{3}
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The connection id for subsequent use.
	Ip       string       `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"` // ipv4 address
	Protocol ProtocolType `protobuf:"varint,3,opt,name=protocol,proto3,enum=plc.ProtocolType" json:"protocol,omitempty"`
	Cpu      CpuType      `protobuf:"varint,4,opt,name=cpu,proto3,enum=plc.CpuType" json:"cpu,omitempty"`
	PortType PortType     `protobuf:"varint,5,opt,name=portType,proto3,enum=plc.PortType" json:"portType,omitempty"`
	Slot     int32        `protobuf:"varint,6,opt,name=slot,proto3" json:"slot,omitempty"` //  Slot number where cpu is installed: 0,1..
	Rack     int32        `protobuf:"varint,7,opt,name=rack,proto3" json:"rack,omitempty"` // Simmens
	Timeout  int64        `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Connection) GetProtocol() ProtocolType {
	if x != nil {
		return x.Protocol
	}
	return ProtocolType_AB_EIP
}

func (x *Connection) GetCpu() CpuType {
	if x != nil {
		return x.Cpu
	}
	return CpuType_PLC
}

func (x *Connection) GetPortType() PortType {
	if x != nil {
		return x.PortType
	}
	return PortType_BACKPLANE
}

func (x *Connection) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Connection) GetRack() int32 {
	if x != nil {
		return x.Rack
	}
	return 0
}

func (x *Connection) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// Create connection
type CreateConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	Save       bool        `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"` // if true it will save in the config file.
}

func (x *CreateConnectionRqst) Reset() {
	*x = CreateConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRqst) ProtoMessage() {}

func (x *CreateConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRqst.ProtoReflect.Descriptor instead.
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConnectionRqst) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *CreateConnectionRqst) GetSave() bool {
	if x != nil {
		return x.Save
	}
	return false
}

type CreateConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateConnectionRsp) Reset() {
	*x = CreateConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRsp) ProtoMessage() {}

func (x *CreateConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRsp.ProtoReflect.Descriptor instead.
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// get connection
type GetConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetConnectionRqst) Reset() {
	*x = GetConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionRqst) ProtoMessage() {}

func (x *GetConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionRqst.ProtoReflect.Descriptor instead.
func (*GetConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{3}
}

func (x *GetConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *GetConnectionRsp) Reset() {
	*x = GetConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionRsp) ProtoMessage() {}

func (x *GetConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionRsp.ProtoReflect.Descriptor instead.
func (*GetConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{4}
}

func (x *GetConnectionRsp) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// Close connection
type CloseConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *CloseConnectionRqst) Reset() {
	*x = CloseConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionRqst) ProtoMessage() {}

func (x *CloseConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionRqst.ProtoReflect.Descriptor instead.
func (*CloseConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{5}
}

func (x *CloseConnectionRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type CloseConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CloseConnectionRsp) Reset() {
	*x = CloseConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionRsp) ProtoMessage() {}

func (x *CloseConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionRsp.ProtoReflect.Descriptor instead.
func (*CloseConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{6}
}

func (x *CloseConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConnectionRqst) Reset() {
	*x = DeleteConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRqst) ProtoMessage() {}

func (x *DeleteConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteConnectionRsp) Reset() {
	*x = DeleteConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRsp) ProtoMessage() {}

func (x *DeleteConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Write tag.
type WriteTagRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string  `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         TagType `protobuf:"varint,3,opt,name=type,proto3,enum=plc.TagType" json:"type,omitempty"`
	Values       string  `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`      // the value will be convert depending of type.
	Offset       int32   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`     // the offset where to begin to write.
	Length       int32   `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`     // the length of the array if is an array
	Unsigned     bool    `protobuf:"varint,7,opt,name=unsigned,proto3" json:"unsigned,omitempty"` // if true it read as unsigned value.
}

func (x *WriteTagRqst) Reset() {
	*x = WriteTagRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteTagRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteTagRqst) ProtoMessage() {}

func (x *WriteTagRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteTagRqst.ProtoReflect.Descriptor instead.
func (*WriteTagRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{9}
}

func (x *WriteTagRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *WriteTagRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WriteTagRqst) GetType() TagType {
	if x != nil {
		return x.Type
	}
	return TagType_BOOL
}

func (x *WriteTagRqst) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *WriteTagRqst) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteTagRqst) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *WriteTagRqst) GetUnsigned() bool {
	if x != nil {
		return x.Unsigned
	}
	return false
}

type WriteTagRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WriteTagRsp) Reset() {
	*x = WriteTagRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteTagRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteTagRsp) ProtoMessage() {}

func (x *WriteTagRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteTagRsp.ProtoReflect.Descriptor instead.
func (*WriteTagRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{10}
}

func (x *WriteTagRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Read tag.
type ReadTagRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string  `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         TagType `protobuf:"varint,3,opt,name=type,proto3,enum=plc.TagType" json:"type,omitempty"`
	Offset       int32   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Length       int32   `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`     // the length of the array if is an array
	Unsigned     bool    `protobuf:"varint,6,opt,name=unsigned,proto3" json:"unsigned,omitempty"` // if true it read as unsigned values.
}

func (x *ReadTagRqst) Reset() {
	*x = ReadTagRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTagRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTagRqst) ProtoMessage() {}

func (x *ReadTagRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTagRqst.ProtoReflect.Descriptor instead.
func (*ReadTagRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{11}
}

func (x *ReadTagRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ReadTagRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReadTagRqst) GetType() TagType {
	if x != nil {
		return x.Type
	}
	return TagType_BOOL
}

func (x *ReadTagRqst) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadTagRqst) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ReadTagRqst) GetUnsigned() bool {
	if x != nil {
		return x.Unsigned
	}
	return false
}

type ReadTagRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values string `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"` // return the value as string
}

func (x *ReadTagRsp) Reset() {
	*x = ReadTagRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTagRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTagRsp) ProtoMessage() {}

func (x *ReadTagRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTagRsp.ProtoReflect.Descriptor instead.
func (*ReadTagRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{12}
}

func (x *ReadTagRsp) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{13}
}

type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_plc_proto_rawDescGZIP(), []int{14}
}

var File_proto_plc_proto protoreflect.FileDescriptor

var file_proto_plc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x70, 0x6c, 0x63, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x43, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x5b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x6c, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x76, 0x65, 0x22, 0x2d,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x0c, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x71, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xb4, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x54, 0x61, 0x67, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x54, 0x61, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x54, 0x61,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x0d, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xb9, 0x01, 0x0a, 0x07,
	0x43, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4c, 0x43, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x4c, 0x43, 0x35, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4c,
	0x43, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4c, 0x43, 0x35, 0x30, 0x30, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x4c, 0x4f, 0x47, 0x49, 0x58, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x4c, 0x47, 0x58, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4d,
	0x50, 0x41, 0x43, 0x54, 0x4c, 0x4f, 0x47, 0x49, 0x58, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x4c, 0x47, 0x58, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x47, 0x58, 0x10, 0x08, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x4f, 0x47, 0x49, 0x58, 0x10, 0x09,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4f, 0x47, 0x49, 0x58, 0x10,
	0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4c, 0x45, 0x58, 0x4c, 0x4f, 0x47, 0x49, 0x58, 0x10, 0x0b,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c, 0x47, 0x58, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49,
	0x4d, 0x4d, 0x45, 0x4e, 0x53, 0x10, 0x0e, 0x2a, 0x26, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x42, 0x5f, 0x45, 0x49,
	0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x42, 0x5f, 0x43, 0x49, 0x50, 0x10, 0x01, 0x2a,
	0x6e, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x43, 0x4b, 0x50, 0x4c, 0x41, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x45,
	0x54, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x44, 0x48, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x41, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x48, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x42, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45,
	0x52, 0x49, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x05, 0x2a,
	0x4f, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f,
	0x4f, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x49, 0x4e, 0x54, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4c,
	0x52, 0x45, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x54, 0x10, 0x06,
	0x32, 0xbc, 0x03, 0x0a, 0x0a, 0x50, 0x6c, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x10, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x63, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70,
	0x6c, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07,
	0x52, 0x65, 0x61, 0x64, 0x54, 0x61, 0x67, 0x12, 0x10, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x54, 0x61, 0x67, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x6c, 0x63, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x54, 0x61, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e, 0x70, 0x6c, 0x63, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x6c,
	0x63, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x0b, 0x5a, 0x09, 0x70, 0x6c, 0x63, 0x2f, 0x70, 0x6c, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_plc_proto_rawDescOnce sync.Once
	file_proto_plc_proto_rawDescData = file_proto_plc_proto_rawDesc
)

func file_proto_plc_proto_rawDescGZIP() []byte {
	file_proto_plc_proto_rawDescOnce.Do(func() {
		file_proto_plc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_plc_proto_rawDescData)
	})
	return file_proto_plc_proto_rawDescData
}

var file_proto_plc_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_plc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_plc_proto_goTypes = []interface{}{
	(CpuType)(0),                 // 0: plc.CpuType
	(ProtocolType)(0),            // 1: plc.ProtocolType
	(PortType)(0),                // 2: plc.PortType
	(TagType)(0),                 // 3: plc.TagType
	(*Connection)(nil),           // 4: plc.Connection
	(*CreateConnectionRqst)(nil), // 5: plc.CreateConnectionRqst
	(*CreateConnectionRsp)(nil),  // 6: plc.CreateConnectionRsp
	(*GetConnectionRqst)(nil),    // 7: plc.GetConnectionRqst
	(*GetConnectionRsp)(nil),     // 8: plc.GetConnectionRsp
	(*CloseConnectionRqst)(nil),  // 9: plc.CloseConnectionRqst
	(*CloseConnectionRsp)(nil),   // 10: plc.CloseConnectionRsp
	(*DeleteConnectionRqst)(nil), // 11: plc.DeleteConnectionRqst
	(*DeleteConnectionRsp)(nil),  // 12: plc.DeleteConnectionRsp
	(*WriteTagRqst)(nil),         // 13: plc.WriteTagRqst
	(*WriteTagRsp)(nil),          // 14: plc.WriteTagRsp
	(*ReadTagRqst)(nil),          // 15: plc.ReadTagRqst
	(*ReadTagRsp)(nil),           // 16: plc.ReadTagRsp
	(*StopRequest)(nil),          // 17: plc.StopRequest
	(*StopResponse)(nil),         // 18: plc.StopResponse
}
var file_proto_plc_proto_depIdxs = []int32{
	1,  // 0: plc.Connection.protocol:type_name -> plc.ProtocolType
	0,  // 1: plc.Connection.cpu:type_name -> plc.CpuType
	2,  // 2: plc.Connection.portType:type_name -> plc.PortType
	4,  // 3: plc.CreateConnectionRqst.connection:type_name -> plc.Connection
	4,  // 4: plc.GetConnectionRsp.connection:type_name -> plc.Connection
	3,  // 5: plc.WriteTagRqst.type:type_name -> plc.TagType
	3,  // 6: plc.ReadTagRqst.type:type_name -> plc.TagType
	17, // 7: plc.PlcService.Stop:input_type -> plc.StopRequest
	5,  // 8: plc.PlcService.CreateConnection:input_type -> plc.CreateConnectionRqst
	7,  // 9: plc.PlcService.GetConnection:input_type -> plc.GetConnectionRqst
	9,  // 10: plc.PlcService.CloseConnection:input_type -> plc.CloseConnectionRqst
	11, // 11: plc.PlcService.DeleteConnection:input_type -> plc.DeleteConnectionRqst
	15, // 12: plc.PlcService.ReadTag:input_type -> plc.ReadTagRqst
	13, // 13: plc.PlcService.WriteTag:input_type -> plc.WriteTagRqst
	18, // 14: plc.PlcService.Stop:output_type -> plc.StopResponse
	6,  // 15: plc.PlcService.CreateConnection:output_type -> plc.CreateConnectionRsp
	8,  // 16: plc.PlcService.GetConnection:output_type -> plc.GetConnectionRsp
	10, // 17: plc.PlcService.CloseConnection:output_type -> plc.CloseConnectionRsp
	12, // 18: plc.PlcService.DeleteConnection:output_type -> plc.DeleteConnectionRsp
	16, // 19: plc.PlcService.ReadTag:output_type -> plc.ReadTagRsp
	14, // 20: plc.PlcService.WriteTag:output_type -> plc.WriteTagRsp
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_plc_proto_init() }
func file_proto_plc_proto_init() {
	if File_proto_plc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_plc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteTagRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteTagRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTagRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTagRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_plc_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_plc_proto_goTypes,
		DependencyIndexes: file_proto_plc_proto_depIdxs,
		EnumInfos:         file_proto_plc_proto_enumTypes,
		MessageInfos:      file_proto_plc_proto_msgTypes,
	}.Build()
	File_proto_plc_proto = out.File
	file_proto_plc_proto_rawDesc = nil
	file_proto_plc_proto_goTypes = nil
	file_proto_plc_proto_depIdxs = nil
}

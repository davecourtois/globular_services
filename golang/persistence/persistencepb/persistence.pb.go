//*
// You can use echo as starter project.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.13.0
// source: proto/persistence.proto

package persistencepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StoreType int32

const (
	StoreType_MONGO StoreType = 0
)

// Enum value maps for StoreType.
var (
	StoreType_name = map[int32]string{
		0: "MONGO",
	}
	StoreType_value = map[string]int32{
		"MONGO": 0,
	}
)

func (x StoreType) Enum() *StoreType {
	p := new(StoreType)
	*p = x
	return p
}

func (x StoreType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_persistence_proto_enumTypes[0].Descriptor()
}

func (StoreType) Type() protoreflect.EnumType {
	return &file_proto_persistence_proto_enumTypes[0]
}

func (x StoreType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreType.Descriptor instead.
func (StoreType) EnumDescriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{0}
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Host     string    `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Store    StoreType `protobuf:"varint,5,opt,name=store,proto3,enum=persistence.StoreType" json:"store,omitempty"`
	User     string    `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Password string    `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Port     int32     `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	Timeout  int32     `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Options  string    `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Connection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Connection) GetStore() StoreType {
	if x != nil {
		return x.Store
	}
	return StoreType_MONGO
}

func (x *Connection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Connection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Connection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Connection) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Connection) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

// Create connection
type CreateConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	Save       bool        `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"` // if true it will save in the config file.
}

func (x *CreateConnectionRqst) Reset() {
	*x = CreateConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRqst) ProtoMessage() {}

func (x *CreateConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRqst.ProtoReflect.Descriptor instead.
func (*CreateConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConnectionRqst) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *CreateConnectionRqst) GetSave() bool {
	if x != nil {
		return x.Save
	}
	return false
}

type CreateConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateConnectionRsp) Reset() {
	*x = CreateConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRsp) ProtoMessage() {}

func (x *CreateConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRsp.ProtoReflect.Descriptor instead.
func (*CreateConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Delete connection
type DeleteConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConnectionRqst) Reset() {
	*x = DeleteConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRqst) ProtoMessage() {}

func (x *DeleteConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteConnectionRsp) Reset() {
	*x = DeleteConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRsp) ProtoMessage() {}

func (x *DeleteConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteConnectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Ping Connection
type PingConnectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PingConnectionRqst) Reset() {
	*x = PingConnectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingConnectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingConnectionRqst) ProtoMessage() {}

func (x *PingConnectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingConnectionRqst.ProtoReflect.Descriptor instead.
func (*PingConnectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{5}
}

func (x *PingConnectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PingConnectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PingConnectionRsp) Reset() {
	*x = PingConnectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingConnectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingConnectionRsp) ProtoMessage() {}

func (x *PingConnectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingConnectionRsp.ProtoReflect.Descriptor instead.
func (*PingConnectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{6}
}

func (x *PingConnectionRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type InsertManyRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	JsonStr    string `protobuf:"bytes,4,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"`
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *InsertManyRqst) Reset() {
	*x = InsertManyRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertManyRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyRqst) ProtoMessage() {}

func (x *InsertManyRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyRqst.ProtoReflect.Descriptor instead.
func (*InsertManyRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{7}
}

func (x *InsertManyRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InsertManyRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *InsertManyRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertManyRqst) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

func (x *InsertManyRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type InsertManyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"` // Json string with ids
}

func (x *InsertManyRsp) Reset() {
	*x = InsertManyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertManyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyRsp) ProtoMessage() {}

func (x *InsertManyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyRsp.ProtoReflect.Descriptor instead.
func (*InsertManyRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{8}
}

func (x *InsertManyRsp) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

type InsertOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The connection id.
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	JsonStr    string `protobuf:"bytes,4,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"`
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *InsertOneRqst) Reset() {
	*x = InsertOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertOneRqst) ProtoMessage() {}

func (x *InsertOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertOneRqst.ProtoReflect.Descriptor instead.
func (*InsertOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{9}
}

func (x *InsertOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InsertOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *InsertOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertOneRqst) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

func (x *InsertOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type InsertOneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Json string with id
}

func (x *InsertOneRsp) Reset() {
	*x = InsertOneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertOneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertOneRsp) ProtoMessage() {}

func (x *InsertOneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertOneRsp.ProtoReflect.Descriptor instead.
func (*InsertOneRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{10}
}

func (x *InsertOneRsp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InsertLargeOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // The connection id.
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	JsonStr    string `protobuf:"bytes,4,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"`
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *InsertLargeOneRqst) Reset() {
	*x = InsertLargeOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertLargeOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertLargeOneRqst) ProtoMessage() {}

func (x *InsertLargeOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertLargeOneRqst.ProtoReflect.Descriptor instead.
func (*InsertLargeOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{11}
}

func (x *InsertLargeOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InsertLargeOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *InsertLargeOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertLargeOneRqst) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

func (x *InsertLargeOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type InsertLargeOneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Json string with id
}

func (x *InsertLargeOneRsp) Reset() {
	*x = InsertLargeOneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertLargeOneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertLargeOneRsp) ProtoMessage() {}

func (x *InsertLargeOneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertLargeOneRsp.ProtoReflect.Descriptor instead.
func (*InsertLargeOneRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{12}
}

func (x *InsertLargeOneRsp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *FindRqst) Reset() {
	*x = FindRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRqst) ProtoMessage() {}

func (x *FindRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRqst.ProtoReflect.Descriptor instead.
func (*FindRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{13}
}

func (x *FindRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FindRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FindRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type FindResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"` // Json string
}

func (x *FindResp) Reset() {
	*x = FindResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResp) ProtoMessage() {}

func (x *FindResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResp.ProtoReflect.Descriptor instead.
func (*FindResp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{14}
}

func (x *FindResp) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type FindOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *FindOneRqst) Reset() {
	*x = FindOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneRqst) ProtoMessage() {}

func (x *FindOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneRqst.ProtoReflect.Descriptor instead.
func (*FindOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{15}
}

func (x *FindOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FindOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindOneRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FindOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type FindOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"` // Json string
}

func (x *FindOneResp) Reset() {
	*x = FindOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneResp) ProtoMessage() {}

func (x *FindOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneResp.ProtoReflect.Descriptor instead.
func (*FindOneResp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{16}
}

func (x *FindOneResp) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type FindLargeOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *FindLargeOneRqst) Reset() {
	*x = FindLargeOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLargeOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLargeOneRqst) ProtoMessage() {}

func (x *FindLargeOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLargeOneRqst.ProtoReflect.Descriptor instead.
func (*FindLargeOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{17}
}

func (x *FindLargeOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindLargeOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FindLargeOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindLargeOneRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FindLargeOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type FindLargeOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"` // Json string
}

func (x *FindLargeOneResp) Reset() {
	*x = FindLargeOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLargeOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLargeOneResp) ProtoMessage() {}

func (x *FindLargeOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLargeOneResp.ProtoReflect.Descriptor instead.
func (*FindLargeOneResp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{18}
}

func (x *FindLargeOneResp) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type AggregateRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Pipeline   string `protobuf:"bytes,4,opt,name=pipeline,proto3" json:"pipeline,omitempty"` // Array of transformations.
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *AggregateRqst) Reset() {
	*x = AggregateRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRqst) ProtoMessage() {}

func (x *AggregateRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRqst.ProtoReflect.Descriptor instead.
func (*AggregateRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{19}
}

func (x *AggregateRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AggregateRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *AggregateRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AggregateRqst) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *AggregateRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type AggregateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=jsonStr,proto3" json:"jsonStr,omitempty"` // Json string
}

func (x *AggregateResp) Reset() {
	*x = AggregateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateResp) ProtoMessage() {}

func (x *AggregateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateResp.ProtoReflect.Descriptor instead.
func (*AggregateResp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{20}
}

func (x *AggregateResp) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type UpdateRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *UpdateRqst) Reset() {
	*x = UpdateRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRqst) ProtoMessage() {}

func (x *UpdateRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRqst.ProtoReflect.Descriptor instead.
func (*UpdateRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdateRqst) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type UpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateRsp) Reset() {
	*x = UpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRsp) ProtoMessage() {}

func (x *UpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRsp.ProtoReflect.Descriptor instead.
func (*UpdateRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *UpdateOneRqst) Reset() {
	*x = UpdateOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneRqst) ProtoMessage() {}

func (x *UpdateOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneRqst.ProtoReflect.Descriptor instead.
func (*UpdateOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateOneRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdateOneRqst) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type UpdateOneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateOneRsp) Reset() {
	*x = UpdateOneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneRsp) ProtoMessage() {}

func (x *UpdateOneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneRsp.ProtoReflect.Descriptor instead.
func (*UpdateOneRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateOneRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ReplaceOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Options    string `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ReplaceOneRqst) Reset() {
	*x = ReplaceOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceOneRqst) ProtoMessage() {}

func (x *ReplaceOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceOneRqst.ProtoReflect.Descriptor instead.
func (*ReplaceOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{25}
}

func (x *ReplaceOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplaceOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ReplaceOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ReplaceOneRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ReplaceOneRqst) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReplaceOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type ReplaceOneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReplaceOneRsp) Reset() {
	*x = ReplaceOneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceOneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceOneRsp) ProtoMessage() {}

func (x *ReplaceOneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceOneRsp.ProtoReflect.Descriptor instead.
func (*ReplaceOneRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{26}
}

func (x *ReplaceOneRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DeleteRqst) Reset() {
	*x = DeleteRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRqst) ProtoMessage() {}

func (x *DeleteRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRqst.ProtoReflect.Descriptor instead.
func (*DeleteRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DeleteRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type DeleteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRsp) Reset() {
	*x = DeleteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRsp) ProtoMessage() {}

func (x *DeleteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRsp.ProtoReflect.Descriptor instead.
func (*DeleteRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteOneRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DeleteOneRqst) Reset() {
	*x = DeleteOneRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneRqst) ProtoMessage() {}

func (x *DeleteOneRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneRqst.ProtoReflect.Descriptor instead.
func (*DeleteOneRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteOneRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteOneRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteOneRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteOneRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DeleteOneRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type DeleteOneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteOneRsp) Reset() {
	*x = DeleteOneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneRsp) ProtoMessage() {}

func (x *DeleteOneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneRsp.ProtoReflect.Descriptor instead.
func (*DeleteOneRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteOneRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateDatabaseRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *CreateDatabaseRqst) Reset() {
	*x = CreateDatabaseRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatabaseRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseRqst) ProtoMessage() {}

func (x *CreateDatabaseRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseRqst.ProtoReflect.Descriptor instead.
func (*CreateDatabaseRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{31}
}

func (x *CreateDatabaseRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateDatabaseRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type CreateDatabaseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateDatabaseRsp) Reset() {
	*x = CreateDatabaseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatabaseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseRsp) ProtoMessage() {}

func (x *CreateDatabaseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseRsp.ProtoReflect.Descriptor instead.
func (*CreateDatabaseRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{32}
}

func (x *CreateDatabaseRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteDatabaseRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *DeleteDatabaseRqst) Reset() {
	*x = DeleteDatabaseRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatabaseRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseRqst) ProtoMessage() {}

func (x *DeleteDatabaseRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseRqst.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteDatabaseRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteDatabaseRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type DeleteDatabaseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteDatabaseRsp) Reset() {
	*x = DeleteDatabaseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatabaseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseRsp) ProtoMessage() {}

func (x *DeleteDatabaseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseRsp.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteDatabaseRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateCollectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	OptionsStr string `protobuf:"bytes,4,opt,name=optionsStr,proto3" json:"optionsStr,omitempty"`
}

func (x *CreateCollectionRqst) Reset() {
	*x = CreateCollectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRqst) ProtoMessage() {}

func (x *CreateCollectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRqst.ProtoReflect.Descriptor instead.
func (*CreateCollectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{35}
}

func (x *CreateCollectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCollectionRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateCollectionRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateCollectionRqst) GetOptionsStr() string {
	if x != nil {
		return x.OptionsStr
	}
	return ""
}

type CreateCollectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateCollectionRsp) Reset() {
	*x = CreateCollectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRsp) ProtoMessage() {}

func (x *CreateCollectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRsp.ProtoReflect.Descriptor instead.
func (*CreateCollectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{36}
}

func (x *CreateCollectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteCollectionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *DeleteCollectionRqst) Reset() {
	*x = DeleteCollectionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCollectionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRqst) ProtoMessage() {}

func (x *DeleteCollectionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRqst.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteCollectionRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCollectionRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteCollectionRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type DeleteCollectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteCollectionRsp) Reset() {
	*x = DeleteCollectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCollectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRsp) ProtoMessage() {}

func (x *DeleteCollectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRsp.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteCollectionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Database   string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"` // filter
	Options    string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CountRqst) Reset() {
	*x = CountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRqst) ProtoMessage() {}

func (x *CountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRqst.ProtoReflect.Descriptor instead.
func (*CountRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{39}
}

func (x *CountRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CountRqst) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CountRqst) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CountRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *CountRqst) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type CountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CountRsp) Reset() {
	*x = CountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRsp) ProtoMessage() {}

func (x *CountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRsp.ProtoReflect.Descriptor instead.
func (*CountRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{40}
}

func (x *CountRsp) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type RunAdminCmdRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	User         string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password     string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Script       string `protobuf:"bytes,4,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *RunAdminCmdRqst) Reset() {
	*x = RunAdminCmdRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAdminCmdRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAdminCmdRqst) ProtoMessage() {}

func (x *RunAdminCmdRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAdminCmdRqst.ProtoReflect.Descriptor instead.
func (*RunAdminCmdRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{41}
}

func (x *RunAdminCmdRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *RunAdminCmdRqst) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RunAdminCmdRqst) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RunAdminCmdRqst) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type RunAdminCmdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RunAdminCmdRsp) Reset() {
	*x = RunAdminCmdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAdminCmdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAdminCmdRsp) ProtoMessage() {}

func (x *RunAdminCmdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAdminCmdRsp.ProtoReflect.Descriptor instead.
func (*RunAdminCmdRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{42}
}

func (x *RunAdminCmdRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Open a db connection.
type ConnectRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	Password     string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ConnectRqst) Reset() {
	*x = ConnectRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRqst) ProtoMessage() {}

func (x *ConnectRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRqst.ProtoReflect.Descriptor instead.
func (*ConnectRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{43}
}

func (x *ConnectRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectRqst) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ConnectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConnectRsp) Reset() {
	*x = ConnectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRsp) ProtoMessage() {}

func (x *ConnectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRsp.ProtoReflect.Descriptor instead.
func (*ConnectRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{44}
}

func (x *ConnectRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Close a db connection
type DisconnectRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
}

func (x *DisconnectRqst) Reset() {
	*x = DisconnectRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRqst) ProtoMessage() {}

func (x *DisconnectRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRqst.ProtoReflect.Descriptor instead.
func (*DisconnectRqst) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{45}
}

func (x *DisconnectRqst) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type DisconnectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DisconnectRsp) Reset() {
	*x = DisconnectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRsp) ProtoMessage() {}

func (x *DisconnectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRsp.ProtoReflect.Descriptor instead.
func (*DisconnectRsp) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{46}
}

func (x *DisconnectRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{47}
}

type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_persistence_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_persistence_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_persistence_proto_rawDescGZIP(), []int{48}
}

var File_proto_persistence_proto protoreflect.FileDescriptor

var file_proto_persistence_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x76, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24,
	0x0a, 0x12, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x79,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x23, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x24,
	0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x27, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x0d,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa1, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x26, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x27,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x26, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x2b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x2b,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x72,
	0x22, 0x2d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x62, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x22, 0x0a, 0x08,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x7d, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6d, 0x64, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22,
	0x28, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6d, 0x64, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34,
	0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0d, 0x0a,
	0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x16, 0x0a, 0x09,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e,
	0x47, 0x4f, 0x10, 0x00, 0x32, 0x8a, 0x0e, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x12, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x28, 0x01, 0x12, 0x49, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x1b, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x38, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x07, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x72,
	0x67, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x47, 0x0a,
	0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x12, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x6d, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6d, 0x64, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6d, 0x64, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x1b, 0x5a, 0x19, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_persistence_proto_rawDescOnce sync.Once
	file_proto_persistence_proto_rawDescData = file_proto_persistence_proto_rawDesc
)

func file_proto_persistence_proto_rawDescGZIP() []byte {
	file_proto_persistence_proto_rawDescOnce.Do(func() {
		file_proto_persistence_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_persistence_proto_rawDescData)
	})
	return file_proto_persistence_proto_rawDescData
}

var file_proto_persistence_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_persistence_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_proto_persistence_proto_goTypes = []interface{}{
	(StoreType)(0),               // 0: persistence.StoreType
	(*Connection)(nil),           // 1: persistence.Connection
	(*CreateConnectionRqst)(nil), // 2: persistence.CreateConnectionRqst
	(*CreateConnectionRsp)(nil),  // 3: persistence.CreateConnectionRsp
	(*DeleteConnectionRqst)(nil), // 4: persistence.DeleteConnectionRqst
	(*DeleteConnectionRsp)(nil),  // 5: persistence.DeleteConnectionRsp
	(*PingConnectionRqst)(nil),   // 6: persistence.PingConnectionRqst
	(*PingConnectionRsp)(nil),    // 7: persistence.PingConnectionRsp
	(*InsertManyRqst)(nil),       // 8: persistence.InsertManyRqst
	(*InsertManyRsp)(nil),        // 9: persistence.InsertManyRsp
	(*InsertOneRqst)(nil),        // 10: persistence.InsertOneRqst
	(*InsertOneRsp)(nil),         // 11: persistence.InsertOneRsp
	(*InsertLargeOneRqst)(nil),   // 12: persistence.InsertLargeOneRqst
	(*InsertLargeOneRsp)(nil),    // 13: persistence.InsertLargeOneRsp
	(*FindRqst)(nil),             // 14: persistence.FindRqst
	(*FindResp)(nil),             // 15: persistence.FindResp
	(*FindOneRqst)(nil),          // 16: persistence.FindOneRqst
	(*FindOneResp)(nil),          // 17: persistence.FindOneResp
	(*FindLargeOneRqst)(nil),     // 18: persistence.FindLargeOneRqst
	(*FindLargeOneResp)(nil),     // 19: persistence.FindLargeOneResp
	(*AggregateRqst)(nil),        // 20: persistence.AggregateRqst
	(*AggregateResp)(nil),        // 21: persistence.AggregateResp
	(*UpdateRqst)(nil),           // 22: persistence.UpdateRqst
	(*UpdateRsp)(nil),            // 23: persistence.UpdateRsp
	(*UpdateOneRqst)(nil),        // 24: persistence.UpdateOneRqst
	(*UpdateOneRsp)(nil),         // 25: persistence.UpdateOneRsp
	(*ReplaceOneRqst)(nil),       // 26: persistence.ReplaceOneRqst
	(*ReplaceOneRsp)(nil),        // 27: persistence.ReplaceOneRsp
	(*DeleteRqst)(nil),           // 28: persistence.DeleteRqst
	(*DeleteRsp)(nil),            // 29: persistence.DeleteRsp
	(*DeleteOneRqst)(nil),        // 30: persistence.DeleteOneRqst
	(*DeleteOneRsp)(nil),         // 31: persistence.DeleteOneRsp
	(*CreateDatabaseRqst)(nil),   // 32: persistence.CreateDatabaseRqst
	(*CreateDatabaseRsp)(nil),    // 33: persistence.CreateDatabaseRsp
	(*DeleteDatabaseRqst)(nil),   // 34: persistence.DeleteDatabaseRqst
	(*DeleteDatabaseRsp)(nil),    // 35: persistence.DeleteDatabaseRsp
	(*CreateCollectionRqst)(nil), // 36: persistence.CreateCollectionRqst
	(*CreateCollectionRsp)(nil),  // 37: persistence.CreateCollectionRsp
	(*DeleteCollectionRqst)(nil), // 38: persistence.DeleteCollectionRqst
	(*DeleteCollectionRsp)(nil),  // 39: persistence.DeleteCollectionRsp
	(*CountRqst)(nil),            // 40: persistence.CountRqst
	(*CountRsp)(nil),             // 41: persistence.CountRsp
	(*RunAdminCmdRqst)(nil),      // 42: persistence.RunAdminCmdRqst
	(*RunAdminCmdRsp)(nil),       // 43: persistence.RunAdminCmdRsp
	(*ConnectRqst)(nil),          // 44: persistence.ConnectRqst
	(*ConnectRsp)(nil),           // 45: persistence.ConnectRsp
	(*DisconnectRqst)(nil),       // 46: persistence.DisconnectRqst
	(*DisconnectRsp)(nil),        // 47: persistence.DisconnectRsp
	(*StopRequest)(nil),          // 48: persistence.StopRequest
	(*StopResponse)(nil),         // 49: persistence.StopResponse
}
var file_proto_persistence_proto_depIdxs = []int32{
	0,  // 0: persistence.Connection.store:type_name -> persistence.StoreType
	1,  // 1: persistence.CreateConnectionRqst.connection:type_name -> persistence.Connection
	48, // 2: persistence.PersistenceService.Stop:input_type -> persistence.StopRequest
	32, // 3: persistence.PersistenceService.CreateDatabase:input_type -> persistence.CreateDatabaseRqst
	44, // 4: persistence.PersistenceService.Connect:input_type -> persistence.ConnectRqst
	46, // 5: persistence.PersistenceService.Disconnect:input_type -> persistence.DisconnectRqst
	34, // 6: persistence.PersistenceService.DeleteDatabase:input_type -> persistence.DeleteDatabaseRqst
	36, // 7: persistence.PersistenceService.CreateCollection:input_type -> persistence.CreateCollectionRqst
	38, // 8: persistence.PersistenceService.DeleteCollection:input_type -> persistence.DeleteCollectionRqst
	2,  // 9: persistence.PersistenceService.CreateConnection:input_type -> persistence.CreateConnectionRqst
	4,  // 10: persistence.PersistenceService.DeleteConnection:input_type -> persistence.DeleteConnectionRqst
	6,  // 11: persistence.PersistenceService.Ping:input_type -> persistence.PingConnectionRqst
	40, // 12: persistence.PersistenceService.Count:input_type -> persistence.CountRqst
	10, // 13: persistence.PersistenceService.InsertOne:input_type -> persistence.InsertOneRqst
	12, // 14: persistence.PersistenceService.InsertLargeOne:input_type -> persistence.InsertLargeOneRqst
	8,  // 15: persistence.PersistenceService.InsertMany:input_type -> persistence.InsertManyRqst
	14, // 16: persistence.PersistenceService.Find:input_type -> persistence.FindRqst
	16, // 17: persistence.PersistenceService.FindOne:input_type -> persistence.FindOneRqst
	18, // 18: persistence.PersistenceService.FindLargeOne:input_type -> persistence.FindLargeOneRqst
	20, // 19: persistence.PersistenceService.Aggregate:input_type -> persistence.AggregateRqst
	22, // 20: persistence.PersistenceService.Update:input_type -> persistence.UpdateRqst
	24, // 21: persistence.PersistenceService.UpdateOne:input_type -> persistence.UpdateOneRqst
	26, // 22: persistence.PersistenceService.ReplaceOne:input_type -> persistence.ReplaceOneRqst
	28, // 23: persistence.PersistenceService.Delete:input_type -> persistence.DeleteRqst
	30, // 24: persistence.PersistenceService.DeleteOne:input_type -> persistence.DeleteOneRqst
	42, // 25: persistence.PersistenceService.RunAdminCmd:input_type -> persistence.RunAdminCmdRqst
	49, // 26: persistence.PersistenceService.Stop:output_type -> persistence.StopResponse
	33, // 27: persistence.PersistenceService.CreateDatabase:output_type -> persistence.CreateDatabaseRsp
	45, // 28: persistence.PersistenceService.Connect:output_type -> persistence.ConnectRsp
	47, // 29: persistence.PersistenceService.Disconnect:output_type -> persistence.DisconnectRsp
	35, // 30: persistence.PersistenceService.DeleteDatabase:output_type -> persistence.DeleteDatabaseRsp
	37, // 31: persistence.PersistenceService.CreateCollection:output_type -> persistence.CreateCollectionRsp
	39, // 32: persistence.PersistenceService.DeleteCollection:output_type -> persistence.DeleteCollectionRsp
	3,  // 33: persistence.PersistenceService.CreateConnection:output_type -> persistence.CreateConnectionRsp
	5,  // 34: persistence.PersistenceService.DeleteConnection:output_type -> persistence.DeleteConnectionRsp
	7,  // 35: persistence.PersistenceService.Ping:output_type -> persistence.PingConnectionRsp
	41, // 36: persistence.PersistenceService.Count:output_type -> persistence.CountRsp
	11, // 37: persistence.PersistenceService.InsertOne:output_type -> persistence.InsertOneRsp
	13, // 38: persistence.PersistenceService.InsertLargeOne:output_type -> persistence.InsertLargeOneRsp
	9,  // 39: persistence.PersistenceService.InsertMany:output_type -> persistence.InsertManyRsp
	15, // 40: persistence.PersistenceService.Find:output_type -> persistence.FindResp
	17, // 41: persistence.PersistenceService.FindOne:output_type -> persistence.FindOneResp
	19, // 42: persistence.PersistenceService.FindLargeOne:output_type -> persistence.FindLargeOneResp
	21, // 43: persistence.PersistenceService.Aggregate:output_type -> persistence.AggregateResp
	23, // 44: persistence.PersistenceService.Update:output_type -> persistence.UpdateRsp
	25, // 45: persistence.PersistenceService.UpdateOne:output_type -> persistence.UpdateOneRsp
	27, // 46: persistence.PersistenceService.ReplaceOne:output_type -> persistence.ReplaceOneRsp
	29, // 47: persistence.PersistenceService.Delete:output_type -> persistence.DeleteRsp
	31, // 48: persistence.PersistenceService.DeleteOne:output_type -> persistence.DeleteOneRsp
	43, // 49: persistence.PersistenceService.RunAdminCmd:output_type -> persistence.RunAdminCmdRsp
	26, // [26:50] is the sub-list for method output_type
	2,  // [2:26] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_persistence_proto_init() }
func file_proto_persistence_proto_init() {
	if File_proto_persistence_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_persistence_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingConnectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingConnectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertManyRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertManyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertOneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertLargeOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertLargeOneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLargeOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLargeOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceOneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatabaseRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatabaseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatabaseRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatabaseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCollectionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCollectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAdminCmdRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAdminCmdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_persistence_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_persistence_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_persistence_proto_goTypes,
		DependencyIndexes: file_proto_persistence_proto_depIdxs,
		EnumInfos:         file_proto_persistence_proto_enumTypes,
		MessageInfos:      file_proto_persistence_proto_msgTypes,
	}.Build()
	File_proto_persistence_proto = out.File
	file_proto_persistence_proto_rawDesc = nil
	file_proto_persistence_proto_goTypes = nil
	file_proto_persistence_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PersistenceServiceClient is the client API for PersistenceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersistenceServiceClient interface {
	// Stop the server.
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	// Create a database
	CreateDatabase(ctx context.Context, in *CreateDatabaseRqst, opts ...grpc.CallOption) (*CreateDatabaseRsp, error)
	// Open connection.
	Connect(ctx context.Context, in *ConnectRqst, opts ...grpc.CallOption) (*ConnectRsp, error)
	// Close connection.
	Disconnect(ctx context.Context, in *DisconnectRqst, opts ...grpc.CallOption) (*DisconnectRsp, error)
	// Delete a database
	DeleteDatabase(ctx context.Context, in *DeleteDatabaseRqst, opts ...grpc.CallOption) (*DeleteDatabaseRsp, error)
	// Create a Collection
	CreateCollection(ctx context.Context, in *CreateCollectionRqst, opts ...grpc.CallOption) (*CreateCollectionRsp, error)
	// Delete collection
	DeleteCollection(ctx context.Context, in *DeleteCollectionRqst, opts ...grpc.CallOption) (*DeleteCollectionRsp, error)
	// Create a connection.
	CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error)
	// Ping existing connection.
	Ping(ctx context.Context, in *PingConnectionRqst, opts ...grpc.CallOption) (*PingConnectionRsp, error)
	// Get the number of entry in a collection
	Count(ctx context.Context, in *CountRqst, opts ...grpc.CallOption) (*CountRsp, error)
	// Insert one result
	InsertOne(ctx context.Context, in *InsertOneRqst, opts ...grpc.CallOption) (*InsertOneRsp, error)
	InsertLargeOne(ctx context.Context, opts ...grpc.CallOption) (PersistenceService_InsertLargeOneClient, error)
	// Insert many result at once.
	InsertMany(ctx context.Context, opts ...grpc.CallOption) (PersistenceService_InsertManyClient, error)
	// Find many
	Find(ctx context.Context, in *FindRqst, opts ...grpc.CallOption) (PersistenceService_FindClient, error)
	// Find one
	FindOne(ctx context.Context, in *FindOneRqst, opts ...grpc.CallOption) (*FindOneResp, error)
	FindLargeOne(ctx context.Context, in *FindLargeOneRqst, opts ...grpc.CallOption) (PersistenceService_FindLargeOneClient, error)
	// Aggregate
	Aggregate(ctx context.Context, in *AggregateRqst, opts ...grpc.CallOption) (PersistenceService_AggregateClient, error)
	// Update many result.
	Update(ctx context.Context, in *UpdateRqst, opts ...grpc.CallOption) (*UpdateRsp, error)
	// Update one
	UpdateOne(ctx context.Context, in *UpdateOneRqst, opts ...grpc.CallOption) (*UpdateOneRsp, error)
	// Replace one
	ReplaceOne(ctx context.Context, in *ReplaceOneRqst, opts ...grpc.CallOption) (*ReplaceOneRsp, error)
	// Delete many.
	Delete(ctx context.Context, in *DeleteRqst, opts ...grpc.CallOption) (*DeleteRsp, error)
	// Delete one
	DeleteOne(ctx context.Context, in *DeleteOneRqst, opts ...grpc.CallOption) (*DeleteOneRsp, error)
	// run admin command.
	RunAdminCmd(ctx context.Context, in *RunAdminCmdRqst, opts ...grpc.CallOption) (*RunAdminCmdRsp, error)
}

type persistenceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPersistenceServiceClient(cc grpc.ClientConnInterface) PersistenceServiceClient {
	return &persistenceServiceClient{cc}
}

func (c *persistenceServiceClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) CreateDatabase(ctx context.Context, in *CreateDatabaseRqst, opts ...grpc.CallOption) (*CreateDatabaseRsp, error) {
	out := new(CreateDatabaseRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/CreateDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) Connect(ctx context.Context, in *ConnectRqst, opts ...grpc.CallOption) (*ConnectRsp, error) {
	out := new(ConnectRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) Disconnect(ctx context.Context, in *DisconnectRqst, opts ...grpc.CallOption) (*DisconnectRsp, error) {
	out := new(DisconnectRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) DeleteDatabase(ctx context.Context, in *DeleteDatabaseRqst, opts ...grpc.CallOption) (*DeleteDatabaseRsp, error) {
	out := new(DeleteDatabaseRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/DeleteDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) CreateCollection(ctx context.Context, in *CreateCollectionRqst, opts ...grpc.CallOption) (*CreateCollectionRsp, error) {
	out := new(CreateCollectionRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/CreateCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) DeleteCollection(ctx context.Context, in *DeleteCollectionRqst, opts ...grpc.CallOption) (*DeleteCollectionRsp, error) {
	out := new(DeleteCollectionRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/DeleteCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) CreateConnection(ctx context.Context, in *CreateConnectionRqst, opts ...grpc.CallOption) (*CreateConnectionRsp, error) {
	out := new(CreateConnectionRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/CreateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) DeleteConnection(ctx context.Context, in *DeleteConnectionRqst, opts ...grpc.CallOption) (*DeleteConnectionRsp, error) {
	out := new(DeleteConnectionRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/DeleteConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) Ping(ctx context.Context, in *PingConnectionRqst, opts ...grpc.CallOption) (*PingConnectionRsp, error) {
	out := new(PingConnectionRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) Count(ctx context.Context, in *CountRqst, opts ...grpc.CallOption) (*CountRsp, error) {
	out := new(CountRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) InsertOne(ctx context.Context, in *InsertOneRqst, opts ...grpc.CallOption) (*InsertOneRsp, error) {
	out := new(InsertOneRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/InsertOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) InsertLargeOne(ctx context.Context, opts ...grpc.CallOption) (PersistenceService_InsertLargeOneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersistenceService_serviceDesc.Streams[0], "/persistence.PersistenceService/InsertLargeOne", opts...)
	if err != nil {
		return nil, err
	}
	x := &persistenceServiceInsertLargeOneClient{stream}
	return x, nil
}

type PersistenceService_InsertLargeOneClient interface {
	Send(*InsertLargeOneRqst) error
	CloseAndRecv() (*InsertLargeOneRsp, error)
	grpc.ClientStream
}

type persistenceServiceInsertLargeOneClient struct {
	grpc.ClientStream
}

func (x *persistenceServiceInsertLargeOneClient) Send(m *InsertLargeOneRqst) error {
	return x.ClientStream.SendMsg(m)
}

func (x *persistenceServiceInsertLargeOneClient) CloseAndRecv() (*InsertLargeOneRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(InsertLargeOneRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *persistenceServiceClient) InsertMany(ctx context.Context, opts ...grpc.CallOption) (PersistenceService_InsertManyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersistenceService_serviceDesc.Streams[1], "/persistence.PersistenceService/InsertMany", opts...)
	if err != nil {
		return nil, err
	}
	x := &persistenceServiceInsertManyClient{stream}
	return x, nil
}

type PersistenceService_InsertManyClient interface {
	Send(*InsertManyRqst) error
	CloseAndRecv() (*InsertManyRsp, error)
	grpc.ClientStream
}

type persistenceServiceInsertManyClient struct {
	grpc.ClientStream
}

func (x *persistenceServiceInsertManyClient) Send(m *InsertManyRqst) error {
	return x.ClientStream.SendMsg(m)
}

func (x *persistenceServiceInsertManyClient) CloseAndRecv() (*InsertManyRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(InsertManyRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *persistenceServiceClient) Find(ctx context.Context, in *FindRqst, opts ...grpc.CallOption) (PersistenceService_FindClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersistenceService_serviceDesc.Streams[2], "/persistence.PersistenceService/Find", opts...)
	if err != nil {
		return nil, err
	}
	x := &persistenceServiceFindClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PersistenceService_FindClient interface {
	Recv() (*FindResp, error)
	grpc.ClientStream
}

type persistenceServiceFindClient struct {
	grpc.ClientStream
}

func (x *persistenceServiceFindClient) Recv() (*FindResp, error) {
	m := new(FindResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *persistenceServiceClient) FindOne(ctx context.Context, in *FindOneRqst, opts ...grpc.CallOption) (*FindOneResp, error) {
	out := new(FindOneResp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) FindLargeOne(ctx context.Context, in *FindLargeOneRqst, opts ...grpc.CallOption) (PersistenceService_FindLargeOneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersistenceService_serviceDesc.Streams[3], "/persistence.PersistenceService/FindLargeOne", opts...)
	if err != nil {
		return nil, err
	}
	x := &persistenceServiceFindLargeOneClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PersistenceService_FindLargeOneClient interface {
	Recv() (*FindLargeOneResp, error)
	grpc.ClientStream
}

type persistenceServiceFindLargeOneClient struct {
	grpc.ClientStream
}

func (x *persistenceServiceFindLargeOneClient) Recv() (*FindLargeOneResp, error) {
	m := new(FindLargeOneResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *persistenceServiceClient) Aggregate(ctx context.Context, in *AggregateRqst, opts ...grpc.CallOption) (PersistenceService_AggregateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersistenceService_serviceDesc.Streams[4], "/persistence.PersistenceService/Aggregate", opts...)
	if err != nil {
		return nil, err
	}
	x := &persistenceServiceAggregateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PersistenceService_AggregateClient interface {
	Recv() (*AggregateResp, error)
	grpc.ClientStream
}

type persistenceServiceAggregateClient struct {
	grpc.ClientStream
}

func (x *persistenceServiceAggregateClient) Recv() (*AggregateResp, error) {
	m := new(AggregateResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *persistenceServiceClient) Update(ctx context.Context, in *UpdateRqst, opts ...grpc.CallOption) (*UpdateRsp, error) {
	out := new(UpdateRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) UpdateOne(ctx context.Context, in *UpdateOneRqst, opts ...grpc.CallOption) (*UpdateOneRsp, error) {
	out := new(UpdateOneRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/UpdateOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) ReplaceOne(ctx context.Context, in *ReplaceOneRqst, opts ...grpc.CallOption) (*ReplaceOneRsp, error) {
	out := new(ReplaceOneRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/ReplaceOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) Delete(ctx context.Context, in *DeleteRqst, opts ...grpc.CallOption) (*DeleteRsp, error) {
	out := new(DeleteRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) DeleteOne(ctx context.Context, in *DeleteOneRqst, opts ...grpc.CallOption) (*DeleteOneRsp, error) {
	out := new(DeleteOneRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/DeleteOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *persistenceServiceClient) RunAdminCmd(ctx context.Context, in *RunAdminCmdRqst, opts ...grpc.CallOption) (*RunAdminCmdRsp, error) {
	out := new(RunAdminCmdRsp)
	err := c.cc.Invoke(ctx, "/persistence.PersistenceService/RunAdminCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersistenceServiceServer is the server API for PersistenceService service.
type PersistenceServiceServer interface {
	// Stop the server.
	Stop(context.Context, *StopRequest) (*StopResponse, error)
	// Create a database
	CreateDatabase(context.Context, *CreateDatabaseRqst) (*CreateDatabaseRsp, error)
	// Open connection.
	Connect(context.Context, *ConnectRqst) (*ConnectRsp, error)
	// Close connection.
	Disconnect(context.Context, *DisconnectRqst) (*DisconnectRsp, error)
	// Delete a database
	DeleteDatabase(context.Context, *DeleteDatabaseRqst) (*DeleteDatabaseRsp, error)
	// Create a Collection
	CreateCollection(context.Context, *CreateCollectionRqst) (*CreateCollectionRsp, error)
	// Delete collection
	DeleteCollection(context.Context, *DeleteCollectionRqst) (*DeleteCollectionRsp, error)
	// Create a connection.
	CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error)
	// Delete a connection.
	DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error)
	// Ping existing connection.
	Ping(context.Context, *PingConnectionRqst) (*PingConnectionRsp, error)
	// Get the number of entry in a collection
	Count(context.Context, *CountRqst) (*CountRsp, error)
	// Insert one result
	InsertOne(context.Context, *InsertOneRqst) (*InsertOneRsp, error)
	InsertLargeOne(PersistenceService_InsertLargeOneServer) error
	// Insert many result at once.
	InsertMany(PersistenceService_InsertManyServer) error
	// Find many
	Find(*FindRqst, PersistenceService_FindServer) error
	// Find one
	FindOne(context.Context, *FindOneRqst) (*FindOneResp, error)
	FindLargeOne(*FindLargeOneRqst, PersistenceService_FindLargeOneServer) error
	// Aggregate
	Aggregate(*AggregateRqst, PersistenceService_AggregateServer) error
	// Update many result.
	Update(context.Context, *UpdateRqst) (*UpdateRsp, error)
	// Update one
	UpdateOne(context.Context, *UpdateOneRqst) (*UpdateOneRsp, error)
	// Replace one
	ReplaceOne(context.Context, *ReplaceOneRqst) (*ReplaceOneRsp, error)
	// Delete many.
	Delete(context.Context, *DeleteRqst) (*DeleteRsp, error)
	// Delete one
	DeleteOne(context.Context, *DeleteOneRqst) (*DeleteOneRsp, error)
	// run admin command.
	RunAdminCmd(context.Context, *RunAdminCmdRqst) (*RunAdminCmdRsp, error)
}

// UnimplementedPersistenceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPersistenceServiceServer struct {
}

func (*UnimplementedPersistenceServiceServer) Stop(context.Context, *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedPersistenceServiceServer) CreateDatabase(context.Context, *CreateDatabaseRqst) (*CreateDatabaseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatabase not implemented")
}
func (*UnimplementedPersistenceServiceServer) Connect(context.Context, *ConnectRqst) (*ConnectRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedPersistenceServiceServer) Disconnect(context.Context, *DisconnectRqst) (*DisconnectRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedPersistenceServiceServer) DeleteDatabase(context.Context, *DeleteDatabaseRqst) (*DeleteDatabaseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDatabase not implemented")
}
func (*UnimplementedPersistenceServiceServer) CreateCollection(context.Context, *CreateCollectionRqst) (*CreateCollectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollection not implemented")
}
func (*UnimplementedPersistenceServiceServer) DeleteCollection(context.Context, *DeleteCollectionRqst) (*DeleteCollectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCollection not implemented")
}
func (*UnimplementedPersistenceServiceServer) CreateConnection(context.Context, *CreateConnectionRqst) (*CreateConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConnection not implemented")
}
func (*UnimplementedPersistenceServiceServer) DeleteConnection(context.Context, *DeleteConnectionRqst) (*DeleteConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConnection not implemented")
}
func (*UnimplementedPersistenceServiceServer) Ping(context.Context, *PingConnectionRqst) (*PingConnectionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedPersistenceServiceServer) Count(context.Context, *CountRqst) (*CountRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}
func (*UnimplementedPersistenceServiceServer) InsertOne(context.Context, *InsertOneRqst) (*InsertOneRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) InsertLargeOne(PersistenceService_InsertLargeOneServer) error {
	return status.Errorf(codes.Unimplemented, "method InsertLargeOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) InsertMany(PersistenceService_InsertManyServer) error {
	return status.Errorf(codes.Unimplemented, "method InsertMany not implemented")
}
func (*UnimplementedPersistenceServiceServer) Find(*FindRqst, PersistenceService_FindServer) error {
	return status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedPersistenceServiceServer) FindOne(context.Context, *FindOneRqst) (*FindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) FindLargeOne(*FindLargeOneRqst, PersistenceService_FindLargeOneServer) error {
	return status.Errorf(codes.Unimplemented, "method FindLargeOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) Aggregate(*AggregateRqst, PersistenceService_AggregateServer) error {
	return status.Errorf(codes.Unimplemented, "method Aggregate not implemented")
}
func (*UnimplementedPersistenceServiceServer) Update(context.Context, *UpdateRqst) (*UpdateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPersistenceServiceServer) UpdateOne(context.Context, *UpdateOneRqst) (*UpdateOneRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) ReplaceOne(context.Context, *ReplaceOneRqst) (*ReplaceOneRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) Delete(context.Context, *DeleteRqst) (*DeleteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedPersistenceServiceServer) DeleteOne(context.Context, *DeleteOneRqst) (*DeleteOneRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOne not implemented")
}
func (*UnimplementedPersistenceServiceServer) RunAdminCmd(context.Context, *RunAdminCmdRqst) (*RunAdminCmdRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunAdminCmd not implemented")
}

func RegisterPersistenceServiceServer(s *grpc.Server, srv PersistenceServiceServer) {
	s.RegisterService(&_PersistenceService_serviceDesc, srv)
}

func _PersistenceService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_CreateDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatabaseRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).CreateDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/CreateDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).CreateDatabase(ctx, req.(*CreateDatabaseRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Connect(ctx, req.(*ConnectRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Disconnect(ctx, req.(*DisconnectRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_DeleteDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDatabaseRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).DeleteDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/DeleteDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).DeleteDatabase(ctx, req.(*DeleteDatabaseRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_CreateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCollectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).CreateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/CreateCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).CreateCollection(ctx, req.(*CreateCollectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_DeleteCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCollectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).DeleteCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/DeleteCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).DeleteCollection(ctx, req.(*DeleteCollectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_CreateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).CreateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/CreateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).CreateConnection(ctx, req.(*CreateConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_DeleteConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).DeleteConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/DeleteConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).DeleteConnection(ctx, req.(*DeleteConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingConnectionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Ping(ctx, req.(*PingConnectionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Count(ctx, req.(*CountRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_InsertOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertOneRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).InsertOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/InsertOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).InsertOne(ctx, req.(*InsertOneRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_InsertLargeOne_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PersistenceServiceServer).InsertLargeOne(&persistenceServiceInsertLargeOneServer{stream})
}

type PersistenceService_InsertLargeOneServer interface {
	SendAndClose(*InsertLargeOneRsp) error
	Recv() (*InsertLargeOneRqst, error)
	grpc.ServerStream
}

type persistenceServiceInsertLargeOneServer struct {
	grpc.ServerStream
}

func (x *persistenceServiceInsertLargeOneServer) SendAndClose(m *InsertLargeOneRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *persistenceServiceInsertLargeOneServer) Recv() (*InsertLargeOneRqst, error) {
	m := new(InsertLargeOneRqst)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PersistenceService_InsertMany_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PersistenceServiceServer).InsertMany(&persistenceServiceInsertManyServer{stream})
}

type PersistenceService_InsertManyServer interface {
	SendAndClose(*InsertManyRsp) error
	Recv() (*InsertManyRqst, error)
	grpc.ServerStream
}

type persistenceServiceInsertManyServer struct {
	grpc.ServerStream
}

func (x *persistenceServiceInsertManyServer) SendAndClose(m *InsertManyRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *persistenceServiceInsertManyServer) Recv() (*InsertManyRqst, error) {
	m := new(InsertManyRqst)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PersistenceService_Find_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PersistenceServiceServer).Find(m, &persistenceServiceFindServer{stream})
}

type PersistenceService_FindServer interface {
	Send(*FindResp) error
	grpc.ServerStream
}

type persistenceServiceFindServer struct {
	grpc.ServerStream
}

func (x *persistenceServiceFindServer) Send(m *FindResp) error {
	return x.ServerStream.SendMsg(m)
}

func _PersistenceService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).FindOne(ctx, req.(*FindOneRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_FindLargeOne_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindLargeOneRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PersistenceServiceServer).FindLargeOne(m, &persistenceServiceFindLargeOneServer{stream})
}

type PersistenceService_FindLargeOneServer interface {
	Send(*FindLargeOneResp) error
	grpc.ServerStream
}

type persistenceServiceFindLargeOneServer struct {
	grpc.ServerStream
}

func (x *persistenceServiceFindLargeOneServer) Send(m *FindLargeOneResp) error {
	return x.ServerStream.SendMsg(m)
}

func _PersistenceService_Aggregate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AggregateRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PersistenceServiceServer).Aggregate(m, &persistenceServiceAggregateServer{stream})
}

type PersistenceService_AggregateServer interface {
	Send(*AggregateResp) error
	grpc.ServerStream
}

type persistenceServiceAggregateServer struct {
	grpc.ServerStream
}

func (x *persistenceServiceAggregateServer) Send(m *AggregateResp) error {
	return x.ServerStream.SendMsg(m)
}

func _PersistenceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Update(ctx, req.(*UpdateRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_UpdateOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOneRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).UpdateOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/UpdateOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).UpdateOne(ctx, req.(*UpdateOneRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_ReplaceOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceOneRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).ReplaceOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/ReplaceOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).ReplaceOne(ctx, req.(*ReplaceOneRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).Delete(ctx, req.(*DeleteRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_DeleteOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOneRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).DeleteOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/DeleteOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).DeleteOne(ctx, req.(*DeleteOneRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersistenceService_RunAdminCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunAdminCmdRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistenceServiceServer).RunAdminCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/persistence.PersistenceService/RunAdminCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistenceServiceServer).RunAdminCmd(ctx, req.(*RunAdminCmdRqst))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersistenceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "persistence.PersistenceService",
	HandlerType: (*PersistenceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stop",
			Handler:    _PersistenceService_Stop_Handler,
		},
		{
			MethodName: "CreateDatabase",
			Handler:    _PersistenceService_CreateDatabase_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _PersistenceService_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _PersistenceService_Disconnect_Handler,
		},
		{
			MethodName: "DeleteDatabase",
			Handler:    _PersistenceService_DeleteDatabase_Handler,
		},
		{
			MethodName: "CreateCollection",
			Handler:    _PersistenceService_CreateCollection_Handler,
		},
		{
			MethodName: "DeleteCollection",
			Handler:    _PersistenceService_DeleteCollection_Handler,
		},
		{
			MethodName: "CreateConnection",
			Handler:    _PersistenceService_CreateConnection_Handler,
		},
		{
			MethodName: "DeleteConnection",
			Handler:    _PersistenceService_DeleteConnection_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _PersistenceService_Ping_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _PersistenceService_Count_Handler,
		},
		{
			MethodName: "InsertOne",
			Handler:    _PersistenceService_InsertOne_Handler,
		},
		{
			MethodName: "FindOne",
			Handler:    _PersistenceService_FindOne_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PersistenceService_Update_Handler,
		},
		{
			MethodName: "UpdateOne",
			Handler:    _PersistenceService_UpdateOne_Handler,
		},
		{
			MethodName: "ReplaceOne",
			Handler:    _PersistenceService_ReplaceOne_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PersistenceService_Delete_Handler,
		},
		{
			MethodName: "DeleteOne",
			Handler:    _PersistenceService_DeleteOne_Handler,
		},
		{
			MethodName: "RunAdminCmd",
			Handler:    _PersistenceService_RunAdminCmd_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InsertLargeOne",
			Handler:       _PersistenceService_InsertLargeOne_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "InsertMany",
			Handler:       _PersistenceService_InsertMany_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Find",
			Handler:       _PersistenceService_Find_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FindLargeOne",
			Handler:       _PersistenceService_FindLargeOne_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Aggregate",
			Handler:       _PersistenceService_Aggregate_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/persistence.proto",
}

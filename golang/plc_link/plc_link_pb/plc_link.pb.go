//*
// You can use echo as starter project.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.13.0
// source: proto/plc_link.proto

package plc_link_pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Connection with the plc_server.
type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain    string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	ServiceId string `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Connection) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// Contain the tag informations.
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	ServiceId    string `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ConnectionId string `protobuf:"bytes,3,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	TypeName     string `protobuf:"bytes,5,opt,name=typeName,proto3" json:"typeName,omitempty"`
	Offset       int32  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Length       int32  `protobuf:"varint,7,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{1}
}

func (x *Tag) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Tag) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Tag) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Tag) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Tag) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Frequency int32  `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Source    *Tag   `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Target    *Tag   `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{2}
}

func (x *Link) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Link) GetFrequency() int32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *Link) GetSource() *Tag {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Link) GetTarget() *Tag {
	if x != nil {
		return x.Target
	}
	return nil
}

// Link tow tag together and synchronize them at a given frequency.
type LinkRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lnk *Link `protobuf:"bytes,1,opt,name=lnk,proto3" json:"lnk,omitempty"`
}

func (x *LinkRqst) Reset() {
	*x = LinkRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRqst) ProtoMessage() {}

func (x *LinkRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRqst.ProtoReflect.Descriptor instead.
func (*LinkRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{3}
}

func (x *LinkRqst) GetLnk() *Link {
	if x != nil {
		return x.Lnk
	}
	return nil
}

type LinkRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LinkRsp) Reset() {
	*x = LinkRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRsp) ProtoMessage() {}

func (x *LinkRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRsp.ProtoReflect.Descriptor instead.
func (*LinkRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{4}
}

func (x *LinkRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Unlink tags
type UnLinkRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnLinkRqst) Reset() {
	*x = UnLinkRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLinkRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLinkRqst) ProtoMessage() {}

func (x *UnLinkRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLinkRqst.ProtoReflect.Descriptor instead.
func (*UnLinkRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{5}
}

func (x *UnLinkRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnLinkRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UnLinkRsp) Reset() {
	*x = UnLinkRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLinkRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLinkRsp) ProtoMessage() {}

func (x *UnLinkRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLinkRsp.ProtoReflect.Descriptor instead.
func (*UnLinkRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{6}
}

func (x *UnLinkRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type SuspendRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuspendRqst) Reset() {
	*x = SuspendRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendRqst) ProtoMessage() {}

func (x *SuspendRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendRqst.ProtoReflect.Descriptor instead.
func (*SuspendRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{7}
}

func (x *SuspendRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SuspendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SuspendRsp) Reset() {
	*x = SuspendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendRsp) ProtoMessage() {}

func (x *SuspendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendRsp.ProtoReflect.Descriptor instead.
func (*SuspendRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{8}
}

func (x *SuspendRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ResumeRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResumeRqst) Reset() {
	*x = ResumeRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRqst) ProtoMessage() {}

func (x *ResumeRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRqst.ProtoReflect.Descriptor instead.
func (*ResumeRqst) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{9}
}

func (x *ResumeRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResumeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResumeRsp) Reset() {
	*x = ResumeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRsp) ProtoMessage() {}

func (x *ResumeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRsp.ProtoReflect.Descriptor instead.
func (*ResumeRsp) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{10}
}

func (x *ResumeRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{11}
}

type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_plc_link_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plc_link_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_plc_link_proto_rawDescGZIP(), []int{12}
}

var File_proto_plc_link_proto protoreflect.FileDescriptor

var file_proto_plc_link_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x22, 0x52, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x82, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2c, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x71, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x6c, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x03, 0x6c, 0x6e, 0x6b, 0x22, 0x21, 0x0a, 0x07, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x0a,
	0x55, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x55, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x1d, 0x0a, 0x0b, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24,
	0x0a, 0x0a, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x63, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70,
	0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x06, 0x55, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x6c,
	0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x55, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x55, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x6c, 0x63,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x70,
	0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x6c, 0x63, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x6c, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_plc_link_proto_rawDescOnce sync.Once
	file_proto_plc_link_proto_rawDescData = file_proto_plc_link_proto_rawDesc
)

func file_proto_plc_link_proto_rawDescGZIP() []byte {
	file_proto_plc_link_proto_rawDescOnce.Do(func() {
		file_proto_plc_link_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_plc_link_proto_rawDescData)
	})
	return file_proto_plc_link_proto_rawDescData
}

var file_proto_plc_link_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_plc_link_proto_goTypes = []interface{}{
	(*Connection)(nil),   // 0: plc_link.Connection
	(*Tag)(nil),          // 1: plc_link.Tag
	(*Link)(nil),         // 2: plc_link.Link
	(*LinkRqst)(nil),     // 3: plc_link.LinkRqst
	(*LinkRsp)(nil),      // 4: plc_link.LinkRsp
	(*UnLinkRqst)(nil),   // 5: plc_link.UnLinkRqst
	(*UnLinkRsp)(nil),    // 6: plc_link.UnLinkRsp
	(*SuspendRqst)(nil),  // 7: plc_link.SuspendRqst
	(*SuspendRsp)(nil),   // 8: plc_link.SuspendRsp
	(*ResumeRqst)(nil),   // 9: plc_link.ResumeRqst
	(*ResumeRsp)(nil),    // 10: plc_link.ResumeRsp
	(*StopRequest)(nil),  // 11: plc_link.StopRequest
	(*StopResponse)(nil), // 12: plc_link.StopResponse
}
var file_proto_plc_link_proto_depIdxs = []int32{
	1,  // 0: plc_link.Link.source:type_name -> plc_link.Tag
	1,  // 1: plc_link.Link.target:type_name -> plc_link.Tag
	2,  // 2: plc_link.LinkRqst.lnk:type_name -> plc_link.Link
	11, // 3: plc_link.PlcLinkService.Stop:input_type -> plc_link.StopRequest
	3,  // 4: plc_link.PlcLinkService.Link:input_type -> plc_link.LinkRqst
	5,  // 5: plc_link.PlcLinkService.UnLink:input_type -> plc_link.UnLinkRqst
	7,  // 6: plc_link.PlcLinkService.Suspend:input_type -> plc_link.SuspendRqst
	9,  // 7: plc_link.PlcLinkService.Resume:input_type -> plc_link.ResumeRqst
	12, // 8: plc_link.PlcLinkService.Stop:output_type -> plc_link.StopResponse
	4,  // 9: plc_link.PlcLinkService.Link:output_type -> plc_link.LinkRsp
	6,  // 10: plc_link.PlcLinkService.UnLink:output_type -> plc_link.UnLinkRsp
	8,  // 11: plc_link.PlcLinkService.Suspend:output_type -> plc_link.SuspendRsp
	10, // 12: plc_link.PlcLinkService.Resume:output_type -> plc_link.ResumeRsp
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_plc_link_proto_init() }
func file_proto_plc_link_proto_init() {
	if File_proto_plc_link_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_plc_link_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLinkRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLinkRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_plc_link_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_plc_link_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_plc_link_proto_goTypes,
		DependencyIndexes: file_proto_plc_link_proto_depIdxs,
		MessageInfos:      file_proto_plc_link_proto_msgTypes,
	}.Build()
	File_proto_plc_link_proto = out.File
	file_proto_plc_link_proto_rawDesc = nil
	file_proto_plc_link_proto_goTypes = nil
	file_proto_plc_link_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlcLinkServiceClient is the client API for PlcLinkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlcLinkServiceClient interface {
	// Stop the server.
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	// Link Tow tag together and make it refresh at a given frequency in milisecond.
	Link(ctx context.Context, in *LinkRqst, opts ...grpc.CallOption) (*LinkRsp, error)
	// Remove link from tow task.
	UnLink(ctx context.Context, in *UnLinkRqst, opts ...grpc.CallOption) (*UnLinkRsp, error)
	// Suspend the synchronization of tow tags.
	Suspend(ctx context.Context, in *SuspendRqst, opts ...grpc.CallOption) (*SuspendRsp, error)
	// Resume the synchronization of tow tags.
	Resume(ctx context.Context, in *ResumeRqst, opts ...grpc.CallOption) (*ResumeRsp, error)
}

type plcLinkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlcLinkServiceClient(cc grpc.ClientConnInterface) PlcLinkServiceClient {
	return &plcLinkServiceClient{cc}
}

func (c *plcLinkServiceClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/plc_link.PlcLinkService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Link(ctx context.Context, in *LinkRqst, opts ...grpc.CallOption) (*LinkRsp, error) {
	out := new(LinkRsp)
	err := c.cc.Invoke(ctx, "/plc_link.PlcLinkService/Link", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) UnLink(ctx context.Context, in *UnLinkRqst, opts ...grpc.CallOption) (*UnLinkRsp, error) {
	out := new(UnLinkRsp)
	err := c.cc.Invoke(ctx, "/plc_link.PlcLinkService/UnLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Suspend(ctx context.Context, in *SuspendRqst, opts ...grpc.CallOption) (*SuspendRsp, error) {
	out := new(SuspendRsp)
	err := c.cc.Invoke(ctx, "/plc_link.PlcLinkService/Suspend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plcLinkServiceClient) Resume(ctx context.Context, in *ResumeRqst, opts ...grpc.CallOption) (*ResumeRsp, error) {
	out := new(ResumeRsp)
	err := c.cc.Invoke(ctx, "/plc_link.PlcLinkService/Resume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlcLinkServiceServer is the server API for PlcLinkService service.
type PlcLinkServiceServer interface {
	// Stop the server.
	Stop(context.Context, *StopRequest) (*StopResponse, error)
	// Link Tow tag together and make it refresh at a given frequency in milisecond.
	Link(context.Context, *LinkRqst) (*LinkRsp, error)
	// Remove link from tow task.
	UnLink(context.Context, *UnLinkRqst) (*UnLinkRsp, error)
	// Suspend the synchronization of tow tags.
	Suspend(context.Context, *SuspendRqst) (*SuspendRsp, error)
	// Resume the synchronization of tow tags.
	Resume(context.Context, *ResumeRqst) (*ResumeRsp, error)
}

// UnimplementedPlcLinkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlcLinkServiceServer struct {
}

func (*UnimplementedPlcLinkServiceServer) Stop(context.Context, *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Link(context.Context, *LinkRqst) (*LinkRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Link not implemented")
}
func (*UnimplementedPlcLinkServiceServer) UnLink(context.Context, *UnLinkRqst) (*UnLinkRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnLink not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Suspend(context.Context, *SuspendRqst) (*SuspendRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Suspend not implemented")
}
func (*UnimplementedPlcLinkServiceServer) Resume(context.Context, *ResumeRqst) (*ResumeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resume not implemented")
}

func RegisterPlcLinkServiceServer(s *grpc.Server, srv PlcLinkServiceServer) {
	s.RegisterService(&_PlcLinkService_serviceDesc, srv)
}

func _PlcLinkService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plc_link.PlcLinkService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Link_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Link(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plc_link.PlcLinkService/Link",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Link(ctx, req.(*LinkRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_UnLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnLinkRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).UnLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plc_link.PlcLinkService/UnLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).UnLink(ctx, req.(*UnLinkRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Suspend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Suspend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plc_link.PlcLinkService/Suspend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Suspend(ctx, req.(*SuspendRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlcLinkService_Resume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlcLinkServiceServer).Resume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plc_link.PlcLinkService/Resume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlcLinkServiceServer).Resume(ctx, req.(*ResumeRqst))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlcLinkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plc_link.PlcLinkService",
	HandlerType: (*PlcLinkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stop",
			Handler:    _PlcLinkService_Stop_Handler,
		},
		{
			MethodName: "Link",
			Handler:    _PlcLinkService_Link_Handler,
		},
		{
			MethodName: "UnLink",
			Handler:    _PlcLinkService_UnLink_Handler,
		},
		{
			MethodName: "Suspend",
			Handler:    _PlcLinkService_Suspend_Handler,
		},
		{
			MethodName: "Resume",
			Handler:    _PlcLinkService_Resume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/plc_link.proto",
}

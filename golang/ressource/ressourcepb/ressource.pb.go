//*
// Management and definition of ressources.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.13.0
// source: proto/ressource.proto

package ressourcepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogType int32

const (
	LogType_INFO_MESSAGE  LogType = 0
	LogType_ERROR_MESSAGE LogType = 1
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "INFO_MESSAGE",
		1: "ERROR_MESSAGE",
	}
	LogType_value = map[string]int32{
		"INFO_MESSAGE":  0,
		"ERROR_MESSAGE": 1,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ressource_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_proto_ressource_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{0}
}

//* Account *
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

//* A role is simply a list of actions that an account can call *
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Actions []string `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"` // must be a registered action from grpc.
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type RegisterAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password        string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfirmPassword string   `protobuf:"bytes,3,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"`
}

func (x *RegisterAccountRqst) Reset() {
	*x = RegisterAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRqst) ProtoMessage() {}

func (x *RegisterAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRqst.ProtoReflect.Descriptor instead.
func (*RegisterAccountRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterAccountRqst) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RegisterAccountRqst) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterAccountRqst) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type RegisterAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegisterAccountRsp) Reset() {
	*x = RegisterAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRsp) ProtoMessage() {}

func (x *RegisterAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRsp.ProtoReflect.Descriptor instead.
func (*RegisterAccountRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterAccountRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DeleteAccountRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccountRqst) Reset() {
	*x = DeleteAccountRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRqst) ProtoMessage() {}

func (x *DeleteAccountRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRqst.ProtoReflect.Descriptor instead.
func (*DeleteAccountRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAccountRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteAccountRsp) Reset() {
	*x = DeleteAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRsp) ProtoMessage() {}

func (x *DeleteAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRsp.ProtoReflect.Descriptor instead.
func (*DeleteAccountRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteAccountRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

//* Authenticate the user *
type AuthenticateRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthenticateRqst) Reset() {
	*x = AuthenticateRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRqst) ProtoMessage() {}

func (x *AuthenticateRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRqst.ProtoReflect.Descriptor instead.
func (*AuthenticateRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{6}
}

func (x *AuthenticateRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthenticateRqst) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthenticateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthenticateRsp) Reset() {
	*x = AuthenticateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRsp) ProtoMessage() {}

func (x *AuthenticateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRsp.ProtoReflect.Descriptor instead.
func (*AuthenticateRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{7}
}

func (x *AuthenticateRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//* Refresh token *
type RefreshTokenRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RefreshTokenRqst) Reset() {
	*x = RefreshTokenRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRqst) ProtoMessage() {}

func (x *RefreshTokenRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRqst.ProtoReflect.Descriptor instead.
func (*RefreshTokenRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{8}
}

func (x *RefreshTokenRqst) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RefreshTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RefreshTokenRsp) Reset() {
	*x = RefreshTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRsp) ProtoMessage() {}

func (x *RefreshTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRsp.ProtoReflect.Descriptor instead.
func (*RefreshTokenRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{9}
}

func (x *RefreshTokenRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AddAccountRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	RoleId    string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *AddAccountRoleRqst) Reset() {
	*x = AddAccountRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAccountRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRoleRqst) ProtoMessage() {}

func (x *AddAccountRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRoleRqst.ProtoReflect.Descriptor instead.
func (*AddAccountRoleRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{10}
}

func (x *AddAccountRoleRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddAccountRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type AddAccountRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddAccountRoleRsp) Reset() {
	*x = AddAccountRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAccountRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRoleRsp) ProtoMessage() {}

func (x *AddAccountRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRoleRsp.ProtoReflect.Descriptor instead.
func (*AddAccountRoleRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{11}
}

func (x *AddAccountRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveAccountRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	RoleId    string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *RemoveAccountRoleRqst) Reset() {
	*x = RemoveAccountRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAccountRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAccountRoleRqst) ProtoMessage() {}

func (x *RemoveAccountRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAccountRoleRqst.ProtoReflect.Descriptor instead.
func (*RemoveAccountRoleRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveAccountRoleRqst) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RemoveAccountRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RemoveAccountRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveAccountRoleRsp) Reset() {
	*x = RemoveAccountRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAccountRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAccountRoleRsp) ProtoMessage() {}

func (x *RemoveAccountRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAccountRoleRsp.ProtoReflect.Descriptor instead.
func (*RemoveAccountRoleRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveAccountRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleRqst) Reset() {
	*x = CreateRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRqst) ProtoMessage() {}

func (x *CreateRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRqst.ProtoReflect.Descriptor instead.
func (*CreateRoleRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRoleRqst) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateRoleRsp) Reset() {
	*x = CreateRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRsp) ProtoMessage() {}

func (x *CreateRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRsp.ProtoReflect.Descriptor instead.
func (*CreateRoleRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteRoleRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *DeleteRoleRqst) Reset() {
	*x = DeleteRoleRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRqst) ProtoMessage() {}

func (x *DeleteRoleRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRqst.ProtoReflect.Descriptor instead.
func (*DeleteRoleRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRoleRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type DeleteRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRoleRsp) Reset() {
	*x = DeleteRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRsp) ProtoMessage() {}

func (x *DeleteRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRsp.ProtoReflect.Descriptor instead.
func (*DeleteRoleRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRoleRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type AddRoleActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *AddRoleActionRqst) Reset() {
	*x = AddRoleActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleActionRqst) ProtoMessage() {}

func (x *AddRoleActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleActionRqst.ProtoReflect.Descriptor instead.
func (*AddRoleActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{18}
}

func (x *AddRoleActionRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AddRoleActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type AddRoleActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddRoleActionRsp) Reset() {
	*x = AddRoleActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleActionRsp) ProtoMessage() {}

func (x *AddRoleActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleActionRsp.ProtoReflect.Descriptor instead.
func (*AddRoleActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{19}
}

func (x *AddRoleActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveRoleActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *RemoveRoleActionRqst) Reset() {
	*x = RemoveRoleActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleActionRqst) ProtoMessage() {}

func (x *RemoveRoleActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveRoleActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveRoleActionRqst) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RemoveRoleActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveRoleActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveRoleActionRsp) Reset() {
	*x = RemoveRoleActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleActionRsp) ProtoMessage() {}

func (x *RemoveRoleActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveRoleActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveRoleActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type AddApplicationActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	Action        string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *AddApplicationActionRqst) Reset() {
	*x = AddApplicationActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApplicationActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApplicationActionRqst) ProtoMessage() {}

func (x *AddApplicationActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApplicationActionRqst.ProtoReflect.Descriptor instead.
func (*AddApplicationActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{22}
}

func (x *AddApplicationActionRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *AddApplicationActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type AddApplicationActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddApplicationActionRsp) Reset() {
	*x = AddApplicationActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApplicationActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApplicationActionRsp) ProtoMessage() {}

func (x *AddApplicationActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApplicationActionRsp.ProtoReflect.Descriptor instead.
func (*AddApplicationActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{23}
}

func (x *AddApplicationActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemoveApplicationActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	Action        string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *RemoveApplicationActionRqst) Reset() {
	*x = RemoveApplicationActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationActionRqst) ProtoMessage() {}

func (x *RemoveApplicationActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationActionRqst.ProtoReflect.Descriptor instead.
func (*RemoveApplicationActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveApplicationActionRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *RemoveApplicationActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveApplicationActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveApplicationActionRsp) Reset() {
	*x = RemoveApplicationActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationActionRsp) ProtoMessage() {}

func (x *RemoveApplicationActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationActionRsp.ProtoReflect.Descriptor instead.
func (*RemoveApplicationActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveApplicationActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetAllActionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllActionsRqst) Reset() {
	*x = GetAllActionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllActionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllActionsRqst) ProtoMessage() {}

func (x *GetAllActionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllActionsRqst.ProtoReflect.Descriptor instead.
func (*GetAllActionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{26}
}

type GetAllActionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []string `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GetAllActionsRsp) Reset() {
	*x = GetAllActionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllActionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllActionsRsp) ProtoMessage() {}

func (x *GetAllActionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllActionsRsp.ProtoReflect.Descriptor instead.
func (*GetAllActionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{27}
}

func (x *GetAllActionsRsp) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type DeleteApplicationRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
}

func (x *DeleteApplicationRqst) Reset() {
	*x = DeleteApplicationRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRqst) ProtoMessage() {}

func (x *DeleteApplicationRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRqst.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteApplicationRqst) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeleteApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteApplicationRsp) Reset() {
	*x = DeleteApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRsp) ProtoMessage() {}

func (x *DeleteApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRsp.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteApplicationRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Define a permission to a file or a directory.
type RessourcePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are assignable to Owner:
	//	*RessourcePermission_User
	//	*RessourcePermission_Role
	//	*RessourcePermission_Application
	//	*RessourcePermission_Service
	//	*RessourcePermission_Peer
	Owner isRessourcePermission_Owner `protobuf_oneof:"owner"`
}

func (x *RessourcePermission) Reset() {
	*x = RessourcePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RessourcePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RessourcePermission) ProtoMessage() {}

func (x *RessourcePermission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RessourcePermission.ProtoReflect.Descriptor instead.
func (*RessourcePermission) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{30}
}

func (x *RessourcePermission) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *RessourcePermission) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (m *RessourcePermission) GetOwner() isRessourcePermission_Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (x *RessourcePermission) GetUser() string {
	if x, ok := x.GetOwner().(*RessourcePermission_User); ok {
		return x.User
	}
	return ""
}

func (x *RessourcePermission) GetRole() string {
	if x, ok := x.GetOwner().(*RessourcePermission_Role); ok {
		return x.Role
	}
	return ""
}

func (x *RessourcePermission) GetApplication() string {
	if x, ok := x.GetOwner().(*RessourcePermission_Application); ok {
		return x.Application
	}
	return ""
}

func (x *RessourcePermission) GetService() string {
	if x, ok := x.GetOwner().(*RessourcePermission_Service); ok {
		return x.Service
	}
	return ""
}

func (x *RessourcePermission) GetPeer() string {
	if x, ok := x.GetOwner().(*RessourcePermission_Peer); ok {
		return x.Peer
	}
	return ""
}

type isRessourcePermission_Owner interface {
	isRessourcePermission_Owner()
}

type RessourcePermission_User struct {
	User string `protobuf:"bytes,3,opt,name=user,proto3,oneof"`
}

type RessourcePermission_Role struct {
	Role string `protobuf:"bytes,4,opt,name=role,proto3,oneof"`
}

type RessourcePermission_Application struct {
	Application string `protobuf:"bytes,5,opt,name=application,proto3,oneof"`
}

type RessourcePermission_Service struct {
	Service string `protobuf:"bytes,6,opt,name=service,proto3,oneof"`
}

type RessourcePermission_Peer struct {
	Peer string `protobuf:"bytes,7,opt,name=peer,proto3,oneof"`
}

func (*RessourcePermission_User) isRessourcePermission_Owner() {}

func (*RessourcePermission_Role) isRessourcePermission_Owner() {}

func (*RessourcePermission_Application) isRessourcePermission_Owner() {}

func (*RessourcePermission_Service) isRessourcePermission_Owner() {}

func (*RessourcePermission_Peer) isRessourcePermission_Owner() {}

// Get the permission for a given file.
type GetPermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetPermissionsRqst) Reset() {
	*x = GetPermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRqst) ProtoMessage() {}

func (x *GetPermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRqst.ProtoReflect.Descriptor instead.
func (*GetPermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{31}
}

func (x *GetPermissionsRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetPermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions string `protobuf:"bytes,1,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *GetPermissionsRsp) Reset() {
	*x = GetPermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRsp) ProtoMessage() {}

func (x *GetPermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRsp.ProtoReflect.Descriptor instead.
func (*GetPermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{32}
}

func (x *GetPermissionsRsp) GetPermissions() string {
	if x != nil {
		return x.Permissions
	}
	return ""
}

// set the permission for a given file.
type SetPermissionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission *RessourcePermission `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *SetPermissionRqst) Reset() {
	*x = SetPermissionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPermissionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionRqst) ProtoMessage() {}

func (x *SetPermissionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionRqst.ProtoReflect.Descriptor instead.
func (*SetPermissionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{33}
}

func (x *SetPermissionRqst) GetPermission() *RessourcePermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type SetPermissionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetPermissionRsp) Reset() {
	*x = SetPermissionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPermissionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionRsp) ProtoMessage() {}

func (x *SetPermissionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionRsp.ProtoReflect.Descriptor instead.
func (*SetPermissionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{34}
}

func (x *SetPermissionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// set the permission for a given file.
type DeletePermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *DeletePermissionsRqst) Reset() {
	*x = DeletePermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionsRqst) ProtoMessage() {}

func (x *DeletePermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionsRqst.ProtoReflect.Descriptor instead.
func (*DeletePermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{35}
}

func (x *DeletePermissionsRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeletePermissionsRqst) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type DeletePermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeletePermissionsRsp) Reset() {
	*x = DeletePermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionsRsp) ProtoMessage() {}

func (x *DeletePermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionsRsp.ProtoReflect.Descriptor instead.
func (*DeletePermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{36}
}

func (x *DeletePermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Retrun a json with the root file information.
type GetAllFilesInfoRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllFilesInfoRqst) Reset() {
	*x = GetAllFilesInfoRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFilesInfoRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFilesInfoRqst) ProtoMessage() {}

func (x *GetAllFilesInfoRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFilesInfoRqst.ProtoReflect.Descriptor instead.
func (*GetAllFilesInfoRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{37}
}

type GetAllFilesInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllFilesInfoRsp) Reset() {
	*x = GetAllFilesInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFilesInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFilesInfoRsp) ProtoMessage() {}

func (x *GetAllFilesInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFilesInfoRsp.ProtoReflect.Descriptor instead.
func (*GetAllFilesInfoRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{38}
}

func (x *GetAllFilesInfoRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Retrun a json with applications informations.
type GetAllApplicationsInfoRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllApplicationsInfoRqst) Reset() {
	*x = GetAllApplicationsInfoRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllApplicationsInfoRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllApplicationsInfoRqst) ProtoMessage() {}

func (x *GetAllApplicationsInfoRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllApplicationsInfoRqst.ProtoReflect.Descriptor instead.
func (*GetAllApplicationsInfoRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{39}
}

type GetAllApplicationsInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllApplicationsInfoRsp) Reset() {
	*x = GetAllApplicationsInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllApplicationsInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllApplicationsInfoRsp) ProtoMessage() {}

func (x *GetAllApplicationsInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllApplicationsInfoRsp.ProtoReflect.Descriptor instead.
func (*GetAllApplicationsInfoRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{40}
}

func (x *GetAllApplicationsInfoRsp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UserSyncInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"` // ldap query to get the list of users.
	Id    string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`       // user account id
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"` // ldap email attribute
}

func (x *UserSyncInfos) Reset() {
	*x = UserSyncInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSyncInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSyncInfos) ProtoMessage() {}

func (x *UserSyncInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSyncInfos.ProtoReflect.Descriptor instead.
func (*UserSyncInfos) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{41}
}

func (x *UserSyncInfos) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *UserSyncInfos) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UserSyncInfos) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSyncInfos) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GroupSyncInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"` // ldap query
	Id    string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GroupSyncInfos) Reset() {
	*x = GroupSyncInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSyncInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSyncInfos) ProtoMessage() {}

func (x *GroupSyncInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSyncInfos.ProtoReflect.Descriptor instead.
func (*GroupSyncInfos) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{42}
}

func (x *GroupSyncInfos) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *GroupSyncInfos) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GroupSyncInfos) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// That Information is use to synchronize LDAP user with Globular Account and
// LDAP group with Globular Role.
type LdapSyncInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LdapSeriveId   string          `protobuf:"bytes,1,opt,name=ldapSeriveId,proto3" json:"ldapSeriveId,omitempty"`
	ConnectionId   string          `protobuf:"bytes,2,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	Refresh        int32           `protobuf:"varint,3,opt,name=refresh,proto3" json:"refresh,omitempty"`
	UserSyncInfos  *UserSyncInfos  `protobuf:"bytes,4,opt,name=userSyncInfos,proto3" json:"userSyncInfos,omitempty"`
	GroupSyncInfos *GroupSyncInfos `protobuf:"bytes,5,opt,name=groupSyncInfos,proto3" json:"groupSyncInfos,omitempty"`
}

func (x *LdapSyncInfos) Reset() {
	*x = LdapSyncInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LdapSyncInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LdapSyncInfos) ProtoMessage() {}

func (x *LdapSyncInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LdapSyncInfos.ProtoReflect.Descriptor instead.
func (*LdapSyncInfos) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{43}
}

func (x *LdapSyncInfos) GetLdapSeriveId() string {
	if x != nil {
		return x.LdapSeriveId
	}
	return ""
}

func (x *LdapSyncInfos) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *LdapSyncInfos) GetRefresh() int32 {
	if x != nil {
		return x.Refresh
	}
	return 0
}

func (x *LdapSyncInfos) GetUserSyncInfos() *UserSyncInfos {
	if x != nil {
		return x.UserSyncInfos
	}
	return nil
}

func (x *LdapSyncInfos) GetGroupSyncInfos() *GroupSyncInfos {
	if x != nil {
		return x.GroupSyncInfos
	}
	return nil
}

// Create Account and Roles from LDAP User and Groups
type SynchronizeLdapRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncInfo *LdapSyncInfos `protobuf:"bytes,1,opt,name=syncInfo,proto3" json:"syncInfo,omitempty"`
}

func (x *SynchronizeLdapRqst) Reset() {
	*x = SynchronizeLdapRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeLdapRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeLdapRqst) ProtoMessage() {}

func (x *SynchronizeLdapRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeLdapRqst.ProtoReflect.Descriptor instead.
func (*SynchronizeLdapRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{44}
}

func (x *SynchronizeLdapRqst) GetSyncInfo() *LdapSyncInfos {
	if x != nil {
		return x.SyncInfo
	}
	return nil
}

type SynchronizeLdapRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SynchronizeLdapRsp) Reset() {
	*x = SynchronizeLdapRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeLdapRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeLdapRsp) ProtoMessage() {}

func (x *SynchronizeLdapRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeLdapRsp.ProtoReflect.Descriptor instead.
func (*SynchronizeLdapRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{45}
}

func (x *SynchronizeLdapRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Set a ressource owner.
type SetRessourceOwnerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *SetRessourceOwnerRqst) Reset() {
	*x = SetRessourceOwnerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRessourceOwnerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRessourceOwnerRqst) ProtoMessage() {}

func (x *SetRessourceOwnerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRessourceOwnerRqst.ProtoReflect.Descriptor instead.
func (*SetRessourceOwnerRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{46}
}

func (x *SetRessourceOwnerRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetRessourceOwnerRqst) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// Get the ressource owner
type SetRessourceOwnerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetRessourceOwnerRsp) Reset() {
	*x = SetRessourceOwnerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRessourceOwnerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRessourceOwnerRsp) ProtoMessage() {}

func (x *SetRessourceOwnerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRessourceOwnerRsp.ProtoReflect.Descriptor instead.
func (*SetRessourceOwnerRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{47}
}

func (x *SetRessourceOwnerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Get the ressource Owners
type GetRessourceOwnersRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetRessourceOwnersRqst) Reset() {
	*x = GetRessourceOwnersRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRessourceOwnersRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRessourceOwnersRqst) ProtoMessage() {}

func (x *GetRessourceOwnersRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRessourceOwnersRqst.ProtoReflect.Descriptor instead.
func (*GetRessourceOwnersRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{48}
}

func (x *GetRessourceOwnersRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetRessourceOwnersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owners []string `protobuf:"bytes,1,rep,name=owners,proto3" json:"owners,omitempty"`
}

func (x *GetRessourceOwnersRsp) Reset() {
	*x = GetRessourceOwnersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRessourceOwnersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRessourceOwnersRsp) ProtoMessage() {}

func (x *GetRessourceOwnersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRessourceOwnersRsp.ProtoReflect.Descriptor instead.
func (*GetRessourceOwnersRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{49}
}

func (x *GetRessourceOwnersRsp) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

// Delete a ressource Owner.
type DeleteRessourceOwnerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *DeleteRessourceOwnerRqst) Reset() {
	*x = DeleteRessourceOwnerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRessourceOwnerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRessourceOwnerRqst) ProtoMessage() {}

func (x *DeleteRessourceOwnerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRessourceOwnerRqst.ProtoReflect.Descriptor instead.
func (*DeleteRessourceOwnerRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteRessourceOwnerRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteRessourceOwnerRqst) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type DeleteRessourceOwnerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRessourceOwnerRsp) Reset() {
	*x = DeleteRessourceOwnerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRessourceOwnerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRessourceOwnerRsp) ProtoMessage() {}

func (x *DeleteRessourceOwnerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRessourceOwnerRsp.ProtoReflect.Descriptor instead.
func (*DeleteRessourceOwnerRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteRessourceOwnerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Delete a ressource Owner.
type DeleteRessourceOwnersRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DeleteRessourceOwnersRqst) Reset() {
	*x = DeleteRessourceOwnersRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRessourceOwnersRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRessourceOwnersRqst) ProtoMessage() {}

func (x *DeleteRessourceOwnersRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRessourceOwnersRqst.ProtoReflect.Descriptor instead.
func (*DeleteRessourceOwnersRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteRessourceOwnersRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteRessourceOwnersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRessourceOwnersRsp) Reset() {
	*x = DeleteRessourceOwnersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRessourceOwnersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRessourceOwnersRsp) ProtoMessage() {}

func (x *DeleteRessourceOwnersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRessourceOwnersRsp.ProtoReflect.Descriptor instead.
func (*DeleteRessourceOwnersRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteRessourceOwnersRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidateTokenRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ValidateTokenRqst) Reset() {
	*x = ValidateTokenRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTokenRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRqst) ProtoMessage() {}

func (x *ValidateTokenRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRqst.ProtoReflect.Descriptor instead.
func (*ValidateTokenRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{54}
}

func (x *ValidateTokenRqst) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ValidateTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Expired  int64  `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`
}

func (x *ValidateTokenRsp) Reset() {
	*x = ValidateTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRsp) ProtoMessage() {}

func (x *ValidateTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRsp.ProtoReflect.Descriptor instead.
func (*ValidateTokenRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{55}
}

func (x *ValidateTokenRsp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ValidateTokenRsp) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

type ValidateApplicationAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *ValidateApplicationAccessRqst) Reset() {
	*x = ValidateApplicationAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateApplicationAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateApplicationAccessRqst) ProtoMessage() {}

func (x *ValidateApplicationAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateApplicationAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidateApplicationAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{56}
}

func (x *ValidateApplicationAccessRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidateApplicationAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ValidateApplicationAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidateApplicationAccessRsp) Reset() {
	*x = ValidateApplicationAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateApplicationAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateApplicationAccessRsp) ProtoMessage() {}

func (x *ValidateApplicationAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateApplicationAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidateApplicationAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{57}
}

func (x *ValidateApplicationAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidatePeerAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *ValidatePeerAccessRqst) Reset() {
	*x = ValidatePeerAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePeerAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePeerAccessRqst) ProtoMessage() {}

func (x *ValidatePeerAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePeerAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidatePeerAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{58}
}

func (x *ValidatePeerAccessRqst) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ValidatePeerAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ValidatePeerAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidatePeerAccessRsp) Reset() {
	*x = ValidatePeerAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePeerAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePeerAccessRsp) ProtoMessage() {}

func (x *ValidatePeerAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePeerAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidatePeerAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{59}
}

func (x *ValidatePeerAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidatePeerRessourceAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Permission int32  `protobuf:"varint,4,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ValidatePeerRessourceAccessRqst) Reset() {
	*x = ValidatePeerRessourceAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePeerRessourceAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePeerRessourceAccessRqst) ProtoMessage() {}

func (x *ValidatePeerRessourceAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePeerRessourceAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidatePeerRessourceAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{60}
}

func (x *ValidatePeerRessourceAccessRqst) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ValidatePeerRessourceAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ValidatePeerRessourceAccessRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ValidatePeerRessourceAccessRqst) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type ValidatePeerRessourceAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidatePeerRessourceAccessRsp) Reset() {
	*x = ValidatePeerRessourceAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePeerRessourceAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePeerRessourceAccessRsp) ProtoMessage() {}

func (x *ValidatePeerRessourceAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePeerRessourceAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidatePeerRessourceAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{61}
}

func (x *ValidatePeerRessourceAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidateUserAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *ValidateUserAccessRqst) Reset() {
	*x = ValidateUserAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserAccessRqst) ProtoMessage() {}

func (x *ValidateUserAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidateUserAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{62}
}

func (x *ValidateUserAccessRqst) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ValidateUserAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ValidateUserAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidateUserAccessRsp) Reset() {
	*x = ValidateUserAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserAccessRsp) ProtoMessage() {}

func (x *ValidateUserAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidateUserAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{63}
}

func (x *ValidateUserAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidateUserRessourceAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Permission int32  `protobuf:"varint,4,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ValidateUserRessourceAccessRqst) Reset() {
	*x = ValidateUserRessourceAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserRessourceAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserRessourceAccessRqst) ProtoMessage() {}

func (x *ValidateUserRessourceAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserRessourceAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidateUserRessourceAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{64}
}

func (x *ValidateUserRessourceAccessRqst) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ValidateUserRessourceAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ValidateUserRessourceAccessRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ValidateUserRessourceAccessRqst) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type ValidateUserRessourceAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidateUserRessourceAccessRsp) Reset() {
	*x = ValidateUserRessourceAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserRessourceAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserRessourceAccessRsp) ProtoMessage() {}

func (x *ValidateUserRessourceAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserRessourceAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidateUserRessourceAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{65}
}

func (x *ValidateUserRessourceAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ValidateApplicationRessourceAccessRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Permission int32  `protobuf:"varint,4,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ValidateApplicationRessourceAccessRqst) Reset() {
	*x = ValidateApplicationRessourceAccessRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateApplicationRessourceAccessRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateApplicationRessourceAccessRqst) ProtoMessage() {}

func (x *ValidateApplicationRessourceAccessRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateApplicationRessourceAccessRqst.ProtoReflect.Descriptor instead.
func (*ValidateApplicationRessourceAccessRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{66}
}

func (x *ValidateApplicationRessourceAccessRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidateApplicationRessourceAccessRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ValidateApplicationRessourceAccessRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ValidateApplicationRessourceAccessRqst) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type ValidateApplicationRessourceAccessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ValidateApplicationRessourceAccessRsp) Reset() {
	*x = ValidateApplicationRessourceAccessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateApplicationRessourceAccessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateApplicationRessourceAccessRsp) ProtoMessage() {}

func (x *ValidateApplicationRessourceAccessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateApplicationRessourceAccessRsp.ProtoReflect.Descriptor instead.
func (*ValidateApplicationRessourceAccessRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{67}
}

func (x *ValidateApplicationRessourceAccessRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type AccountExistRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AccountExistRqst) Reset() {
	*x = AccountExistRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountExistRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExistRqst) ProtoMessage() {}

func (x *AccountExistRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExistRqst.ProtoReflect.Descriptor instead.
func (*AccountExistRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{68}
}

func (x *AccountExistRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AccountExistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AccountExistRsp) Reset() {
	*x = AccountExistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountExistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExistRsp) ProtoMessage() {}

func (x *AccountExistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExistRsp.ProtoReflect.Descriptor instead.
func (*AccountExistRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{69}
}

func (x *AccountExistRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteAccountPermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccountPermissionsRqst) Reset() {
	*x = DeleteAccountPermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountPermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountPermissionsRqst) ProtoMessage() {}

func (x *DeleteAccountPermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountPermissionsRqst.ProtoReflect.Descriptor instead.
func (*DeleteAccountPermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteAccountPermissionsRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccountPermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteAccountPermissionsRsp) Reset() {
	*x = DeleteAccountPermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountPermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountPermissionsRsp) ProtoMessage() {}

func (x *DeleteAccountPermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountPermissionsRsp.ProtoReflect.Descriptor instead.
func (*DeleteAccountPermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{71}
}

func (x *DeleteAccountPermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteRolePermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRolePermissionsRqst) Reset() {
	*x = DeleteRolePermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRolePermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRolePermissionsRqst) ProtoMessage() {}

func (x *DeleteRolePermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRolePermissionsRqst.ProtoReflect.Descriptor instead.
func (*DeleteRolePermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{72}
}

func (x *DeleteRolePermissionsRqst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRolePermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRolePermissionsRsp) Reset() {
	*x = DeleteRolePermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRolePermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRolePermissionsRsp) ProtoMessage() {}

func (x *DeleteRolePermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRolePermissionsRsp.ProtoReflect.Descriptor instead.
func (*DeleteRolePermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteRolePermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type LogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        int64   `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Type        LogType `protobuf:"varint,2,opt,name=type,proto3,enum=ressource.LogType" json:"type,omitempty"`
	Application string  `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
	UserId      string  `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName    string  `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`
	Method      string  `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	Message     string  `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogInfo) Reset() {
	*x = LogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfo) ProtoMessage() {}

func (x *LogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfo.ProtoReflect.Descriptor instead.
func (*LogInfo) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{74}
}

func (x *LogInfo) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *LogInfo) GetType() LogType {
	if x != nil {
		return x.Type
	}
	return LogType_INFO_MESSAGE
}

func (x *LogInfo) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *LogInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LogInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *LogInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LogInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *LogRqst) Reset() {
	*x = LogRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRqst) ProtoMessage() {}

func (x *LogRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRqst.ProtoReflect.Descriptor instead.
func (*LogRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{75}
}

func (x *LogRqst) GetInfo() *LogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type LogRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LogRsp) Reset() {
	*x = LogRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRsp) ProtoMessage() {}

func (x *LogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRsp.ProtoReflect.Descriptor instead.
func (*LogRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{76}
}

func (x *LogRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteLogRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log *LogInfo `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *DeleteLogRqst) Reset() {
	*x = DeleteLogRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogRqst) ProtoMessage() {}

func (x *DeleteLogRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogRqst.ProtoReflect.Descriptor instead.
func (*DeleteLogRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteLogRqst) GetLog() *LogInfo {
	if x != nil {
		return x.Log
	}
	return nil
}

type DeleteLogRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteLogRsp) Reset() {
	*x = DeleteLogRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogRsp) ProtoMessage() {}

func (x *DeleteLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogRsp.ProtoReflect.Descriptor instead.
func (*DeleteLogRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{78}
}

func (x *DeleteLogRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type SetLogMethodRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *SetLogMethodRqst) Reset() {
	*x = SetLogMethodRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLogMethodRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogMethodRqst) ProtoMessage() {}

func (x *SetLogMethodRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogMethodRqst.ProtoReflect.Descriptor instead.
func (*SetLogMethodRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{79}
}

func (x *SetLogMethodRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SetLogMethodRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetLogMethodRsp) Reset() {
	*x = SetLogMethodRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLogMethodRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogMethodRsp) ProtoMessage() {}

func (x *SetLogMethodRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogMethodRsp.ProtoReflect.Descriptor instead.
func (*SetLogMethodRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{80}
}

func (x *SetLogMethodRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ResetLogMethodRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *ResetLogMethodRqst) Reset() {
	*x = ResetLogMethodRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLogMethodRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLogMethodRqst) ProtoMessage() {}

func (x *ResetLogMethodRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLogMethodRqst.ProtoReflect.Descriptor instead.
func (*ResetLogMethodRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{81}
}

func (x *ResetLogMethodRqst) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ResetLogMethodRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResetLogMethodRsp) Reset() {
	*x = ResetLogMethodRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLogMethodRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLogMethodRsp) ProtoMessage() {}

func (x *ResetLogMethodRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLogMethodRsp.ProtoReflect.Descriptor instead.
func (*ResetLogMethodRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{82}
}

func (x *ResetLogMethodRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetLogMethodsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLogMethodsRqst) Reset() {
	*x = GetLogMethodsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogMethodsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogMethodsRqst) ProtoMessage() {}

func (x *GetLogMethodsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogMethodsRqst.ProtoReflect.Descriptor instead.
func (*GetLogMethodsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{83}
}

type GetLogMethodsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Methods []string `protobuf:"bytes,1,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *GetLogMethodsRsp) Reset() {
	*x = GetLogMethodsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogMethodsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogMethodsRsp) ProtoMessage() {}

func (x *GetLogMethodsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogMethodsRsp.ProtoReflect.Descriptor instead.
func (*GetLogMethodsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{84}
}

func (x *GetLogMethodsRsp) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

type GetLogRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetLogRqst) Reset() {
	*x = GetLogRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRqst) ProtoMessage() {}

func (x *GetLogRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRqst.ProtoReflect.Descriptor instead.
func (*GetLogRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{85}
}

func (x *GetLogRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetLogRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*LogInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *GetLogRsp) Reset() {
	*x = GetLogRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRsp) ProtoMessage() {}

func (x *GetLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRsp.ProtoReflect.Descriptor instead.
func (*GetLogRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{86}
}

func (x *GetLogRsp) GetInfo() []*LogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ClearAllLogRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type LogType `protobuf:"varint,1,opt,name=type,proto3,enum=ressource.LogType" json:"type,omitempty"`
}

func (x *ClearAllLogRqst) Reset() {
	*x = ClearAllLogRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllLogRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllLogRqst) ProtoMessage() {}

func (x *ClearAllLogRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllLogRqst.ProtoReflect.Descriptor instead.
func (*ClearAllLogRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{87}
}

func (x *ClearAllLogRqst) GetType() LogType {
	if x != nil {
		return x.Type
	}
	return LogType_INFO_MESSAGE
}

type ClearAllLogRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ClearAllLogRsp) Reset() {
	*x = ClearAllLogRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllLogRsp) ProtoMessage() {}

func (x *ClearAllLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllLogRsp.ProtoReflect.Descriptor instead.
func (*ClearAllLogRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{88}
}

func (x *ClearAllLogRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

//* a globular server *
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // must be unique on the network.
	Actions []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{89}
}

func (x *Peer) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Peer) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

//* A ressource can be anything with a path an a name *
type Ressource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // can be recursive.
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Modified int64  `protobuf:"varint,3,opt,name=modified,proto3" json:"modified,omitempty"`
	Size     int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Ressource) Reset() {
	*x = Ressource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ressource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ressource) ProtoMessage() {}

func (x *Ressource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ressource.ProtoReflect.Descriptor instead.
func (*Ressource) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{90}
}

func (x *Ressource) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ressource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ressource) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *Ressource) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SetRessourceRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource,proto3" json:"ressource,omitempty"`
}

func (x *SetRessourceRqst) Reset() {
	*x = SetRessourceRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRessourceRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRessourceRqst) ProtoMessage() {}

func (x *SetRessourceRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRessourceRqst.ProtoReflect.Descriptor instead.
func (*SetRessourceRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{91}
}

func (x *SetRessourceRqst) GetRessource() *Ressource {
	if x != nil {
		return x.Ressource
	}
	return nil
}

type SetRessourceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetRessourceRsp) Reset() {
	*x = SetRessourceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRessourceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRessourceRsp) ProtoMessage() {}

func (x *SetRessourceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRessourceRsp.ProtoReflect.Descriptor instead.
func (*SetRessourceRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{92}
}

func (x *SetRessourceRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// gRpc action can modified, delete or create ressource.
// This message specified what parameter of the Action permission
// as effect on a ressource and if so what permission is require.
type ActionParameterRessourcePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`           // The index of the parameter in the function start from 0
	Permission int32 `protobuf:"varint,2,opt,name=permission,proto3" json:"permission,omitempty"` // The assciated ressource permission nunber.
}

func (x *ActionParameterRessourcePermission) Reset() {
	*x = ActionParameterRessourcePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionParameterRessourcePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionParameterRessourcePermission) ProtoMessage() {}

func (x *ActionParameterRessourcePermission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionParameterRessourcePermission.ProtoReflect.Descriptor instead.
func (*ActionParameterRessourcePermission) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{93}
}

func (x *ActionParameterRessourcePermission) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ActionParameterRessourcePermission) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type SetActionPermissionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                              string                                `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	ActionParameterRessourcePermissions []*ActionParameterRessourcePermission `protobuf:"bytes,2,rep,name=actionParameterRessourcePermissions,proto3" json:"actionParameterRessourcePermissions,omitempty"`
}

func (x *SetActionPermissionRqst) Reset() {
	*x = SetActionPermissionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActionPermissionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActionPermissionRqst) ProtoMessage() {}

func (x *SetActionPermissionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActionPermissionRqst.ProtoReflect.Descriptor instead.
func (*SetActionPermissionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{94}
}

func (x *SetActionPermissionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SetActionPermissionRqst) GetActionParameterRessourcePermissions() []*ActionParameterRessourcePermission {
	if x != nil {
		return x.ActionParameterRessourcePermissions
	}
	return nil
}

type SetActionPermissionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetActionPermissionRsp) Reset() {
	*x = SetActionPermissionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActionPermissionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActionPermissionRsp) ProtoMessage() {}

func (x *SetActionPermissionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActionPermissionRsp.ProtoReflect.Descriptor instead.
func (*SetActionPermissionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{95}
}

func (x *SetActionPermissionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetActionPermissionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GetActionPermissionRqst) Reset() {
	*x = GetActionPermissionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionPermissionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionPermissionRqst) ProtoMessage() {}

func (x *GetActionPermissionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionPermissionRqst.ProtoReflect.Descriptor instead.
func (*GetActionPermissionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{96}
}

func (x *GetActionPermissionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetActionPermissionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionParameterRessourcePermissions []*ActionParameterRessourcePermission `protobuf:"bytes,1,rep,name=actionParameterRessourcePermissions,proto3" json:"actionParameterRessourcePermissions,omitempty"`
}

func (x *GetActionPermissionRsp) Reset() {
	*x = GetActionPermissionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionPermissionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionPermissionRsp) ProtoMessage() {}

func (x *GetActionPermissionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionPermissionRsp.ProtoReflect.Descriptor instead.
func (*GetActionPermissionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{97}
}

func (x *GetActionPermissionRsp) GetActionParameterRessourcePermissions() []*ActionParameterRessourcePermission {
	if x != nil {
		return x.ActionParameterRessourcePermissions
	}
	return nil
}

type RemoveRessourceRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource,proto3" json:"ressource,omitempty"`
}

func (x *RemoveRessourceRqst) Reset() {
	*x = RemoveRessourceRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRessourceRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRessourceRqst) ProtoMessage() {}

func (x *RemoveRessourceRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRessourceRqst.ProtoReflect.Descriptor instead.
func (*RemoveRessourceRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{98}
}

func (x *RemoveRessourceRqst) GetRessource() *Ressource {
	if x != nil {
		return x.Ressource
	}
	return nil
}

type RemoveRessourceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveRessourceRsp) Reset() {
	*x = RemoveRessourceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRessourceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRessourceRsp) ProtoMessage() {}

func (x *RemoveRessourceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRessourceRsp.ProtoReflect.Descriptor instead.
func (*RemoveRessourceRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{99}
}

func (x *RemoveRessourceRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetRessourcesRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetRessourcesRqst) Reset() {
	*x = GetRessourcesRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRessourcesRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRessourcesRqst) ProtoMessage() {}

func (x *GetRessourcesRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRessourcesRqst.ProtoReflect.Descriptor instead.
func (*GetRessourcesRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{100}
}

func (x *GetRessourcesRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetRessourcesRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetRessourcesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ressources []*Ressource `protobuf:"bytes,1,rep,name=ressources,proto3" json:"ressources,omitempty"`
}

func (x *GetRessourcesRsp) Reset() {
	*x = GetRessourcesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRessourcesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRessourcesRsp) ProtoMessage() {}

func (x *GetRessourcesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRessourcesRsp.ProtoReflect.Descriptor instead.
func (*GetRessourcesRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{101}
}

func (x *GetRessourcesRsp) GetRessources() []*Ressource {
	if x != nil {
		return x.Ressources
	}
	return nil
}

type RemoveActionPermissionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *RemoveActionPermissionRqst) Reset() {
	*x = RemoveActionPermissionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveActionPermissionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveActionPermissionRqst) ProtoMessage() {}

func (x *RemoveActionPermissionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveActionPermissionRqst.ProtoReflect.Descriptor instead.
func (*RemoveActionPermissionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{102}
}

func (x *RemoveActionPermissionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemoveActionPermissionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveActionPermissionRsp) Reset() {
	*x = RemoveActionPermissionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveActionPermissionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveActionPermissionRsp) ProtoMessage() {}

func (x *RemoveActionPermissionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveActionPermissionRsp.ProtoReflect.Descriptor instead.
func (*RemoveActionPermissionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{103}
}

func (x *RemoveActionPermissionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

//* File permission specific infos. *
type CreateDirPermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Path  string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateDirPermissionsRqst) Reset() {
	*x = CreateDirPermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDirPermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirPermissionsRqst) ProtoMessage() {}

func (x *CreateDirPermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirPermissionsRqst.ProtoReflect.Descriptor instead.
func (*CreateDirPermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{104}
}

func (x *CreateDirPermissionsRqst) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateDirPermissionsRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateDirPermissionsRqst) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateDirPermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateDirPermissionsRsp) Reset() {
	*x = CreateDirPermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDirPermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirPermissionsRsp) ProtoMessage() {}

func (x *CreateDirPermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirPermissionsRsp.ProtoReflect.Descriptor instead.
func (*CreateDirPermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{105}
}

func (x *CreateDirPermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RenameFilePermissionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	OldName string `protobuf:"bytes,2,opt,name=oldName,proto3" json:"oldName,omitempty"`
	NewName string `protobuf:"bytes,3,opt,name=newName,proto3" json:"newName,omitempty"`
}

func (x *RenameFilePermissionRqst) Reset() {
	*x = RenameFilePermissionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameFilePermissionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFilePermissionRqst) ProtoMessage() {}

func (x *RenameFilePermissionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFilePermissionRqst.ProtoReflect.Descriptor instead.
func (*RenameFilePermissionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{106}
}

func (x *RenameFilePermissionRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RenameFilePermissionRqst) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *RenameFilePermissionRqst) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type RenameFilePermissionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RenameFilePermissionRsp) Reset() {
	*x = RenameFilePermissionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameFilePermissionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFilePermissionRsp) ProtoMessage() {}

func (x *RenameFilePermissionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFilePermissionRsp.ProtoReflect.Descriptor instead.
func (*RenameFilePermissionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{107}
}

func (x *RenameFilePermissionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteDirPermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DeleteDirPermissionsRqst) Reset() {
	*x = DeleteDirPermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDirPermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirPermissionsRqst) ProtoMessage() {}

func (x *DeleteDirPermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirPermissionsRqst.ProtoReflect.Descriptor instead.
func (*DeleteDirPermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{108}
}

func (x *DeleteDirPermissionsRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteDirPermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteDirPermissionsRsp) Reset() {
	*x = DeleteDirPermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDirPermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirPermissionsRsp) ProtoMessage() {}

func (x *DeleteDirPermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirPermissionsRsp.ProtoReflect.Descriptor instead.
func (*DeleteDirPermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{109}
}

func (x *DeleteDirPermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteFilePermissionsRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DeleteFilePermissionsRqst) Reset() {
	*x = DeleteFilePermissionsRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFilePermissionsRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilePermissionsRqst) ProtoMessage() {}

func (x *DeleteFilePermissionsRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilePermissionsRqst.ProtoReflect.Descriptor instead.
func (*DeleteFilePermissionsRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{110}
}

func (x *DeleteFilePermissionsRqst) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFilePermissionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteFilePermissionsRsp) Reset() {
	*x = DeleteFilePermissionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFilePermissionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilePermissionsRsp) ProtoMessage() {}

func (x *DeleteFilePermissionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilePermissionsRsp.ProtoReflect.Descriptor instead.
func (*DeleteFilePermissionsRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{111}
}

func (x *DeleteFilePermissionsRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

//*
// Register peer request. The peer must be accept before Authenticate.
type RegisterPeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *RegisterPeerRqst) Reset() {
	*x = RegisterPeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRqst) ProtoMessage() {}

func (x *RegisterPeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRqst.ProtoReflect.Descriptor instead.
func (*RegisterPeerRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{112}
}

func (x *RegisterPeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type RegisterPeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegisterPeerRsp) Reset() {
	*x = RegisterPeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRsp) ProtoMessage() {}

func (x *RegisterPeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRsp.ProtoReflect.Descriptor instead.
func (*RegisterPeerRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{113}
}

func (x *RegisterPeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

//*
// Return the list of peer (query is use to get specific peer's).
type GetPeersRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetPeersRqst) Reset() {
	*x = GetPeersRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRqst) ProtoMessage() {}

func (x *GetPeersRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRqst.ProtoReflect.Descriptor instead.
func (*GetPeersRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{114}
}

func (x *GetPeersRqst) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetPeersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *GetPeersRsp) Reset() {
	*x = GetPeersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRsp) ProtoMessage() {}

func (x *GetPeersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRsp.ProtoReflect.Descriptor instead.
func (*GetPeersRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{115}
}

func (x *GetPeersRsp) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

//*
// Remove a peer from the network.
type DeletePeerRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *DeletePeerRqst) Reset() {
	*x = DeletePeerRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePeerRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePeerRqst) ProtoMessage() {}

func (x *DeletePeerRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePeerRqst.ProtoReflect.Descriptor instead.
func (*DeletePeerRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{116}
}

func (x *DeletePeerRqst) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type DeletePeerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeletePeerRsp) Reset() {
	*x = DeletePeerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePeerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePeerRsp) ProtoMessage() {}

func (x *DeletePeerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePeerRsp.ProtoReflect.Descriptor instead.
func (*DeletePeerRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{117}
}

func (x *DeletePeerRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type AddPeerActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *AddPeerActionRqst) Reset() {
	*x = AddPeerActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerActionRqst) ProtoMessage() {}

func (x *AddPeerActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerActionRqst.ProtoReflect.Descriptor instead.
func (*AddPeerActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{118}
}

func (x *AddPeerActionRqst) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *AddPeerActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type AddPeerActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddPeerActionRsp) Reset() {
	*x = AddPeerActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerActionRsp) ProtoMessage() {}

func (x *AddPeerActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerActionRsp.ProtoReflect.Descriptor instead.
func (*AddPeerActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{119}
}

func (x *AddPeerActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RemovePeerActionRqst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *RemovePeerActionRqst) Reset() {
	*x = RemovePeerActionRqst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerActionRqst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerActionRqst) ProtoMessage() {}

func (x *RemovePeerActionRqst) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerActionRqst.ProtoReflect.Descriptor instead.
func (*RemovePeerActionRqst) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{120}
}

func (x *RemovePeerActionRqst) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RemovePeerActionRqst) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RemovePeerActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemovePeerActionRsp) Reset() {
	*x = RemovePeerActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ressource_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerActionRsp) ProtoMessage() {}

func (x *RemovePeerActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ressource_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerActionRsp.ProtoReflect.Descriptor instead.
func (*RemovePeerActionRsp) Descriptor() ([]byte, []int) {
	return file_proto_ressource_proto_rawDescGZIP(), []int{121}
}

func (x *RemovePeerActionRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_proto_ressource_proto protoreflect.FileDescriptor

var file_proto_ressource_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x5f, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x44, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x0f, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x0f,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x2b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d,
	0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x43, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5b, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x22, 0x2c, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x35, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x2a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x2e,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x71, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71, 0x73,
	0x74, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0d, 0x4c, 0x64, 0x61, 0x70, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x64, 0x61, 0x70, 0x53, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x64, 0x61,
	0x70, 0x53, 0x65, 0x72, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4b, 0x0a, 0x13, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x4c, 0x64, 0x61, 0x70, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x4c, 0x64, 0x61, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x08, 0x73,
	0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x68,
	0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x4c, 0x64, 0x61, 0x70, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x44, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x31, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x2f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x32, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x48, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x1d, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x48, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x1f, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x16,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x26, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x3f, 0x0a, 0x25, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x71, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x22, 0x26, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2a, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x71, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52,
	0x71, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x22, 0x22, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c,
	0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x38, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x46,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x5a, 0x0a, 0x22, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x7f, 0x0a, 0x23, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x23, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x7f, 0x0a, 0x23, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x23,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2c,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x19, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a, 0x18, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x31, 0x0a, 0x17, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x71, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x34, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2a, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x71, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2a, 0x2e, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x10, 0x01, 0x32, 0x9c, 0x23, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12,
	0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x4c, 0x64, 0x61, 0x70, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x4c, 0x64, 0x61, 0x70, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x4c, 0x64, 0x61, 0x70, 0x52, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4a,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x71, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x5f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x62, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x89, 0x01, 0x0a, 0x22, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x6e, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x59, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x1b, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x6b, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x62,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x12,
	0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x71, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52,
	0x71, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4c,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x1c, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x73, 0x70, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x62, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x71, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73,
	0x70, 0x42, 0x17, 0x5a, 0x15, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_ressource_proto_rawDescOnce sync.Once
	file_proto_ressource_proto_rawDescData = file_proto_ressource_proto_rawDesc
)

func file_proto_ressource_proto_rawDescGZIP() []byte {
	file_proto_ressource_proto_rawDescOnce.Do(func() {
		file_proto_ressource_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ressource_proto_rawDescData)
	})
	return file_proto_ressource_proto_rawDescData
}

var file_proto_ressource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ressource_proto_msgTypes = make([]protoimpl.MessageInfo, 122)
var file_proto_ressource_proto_goTypes = []interface{}{
	(LogType)(0),                                   // 0: ressource.LogType
	(*Account)(nil),                                // 1: ressource.Account
	(*Role)(nil),                                   // 2: ressource.Role
	(*RegisterAccountRqst)(nil),                    // 3: ressource.RegisterAccountRqst
	(*RegisterAccountRsp)(nil),                     // 4: ressource.RegisterAccountRsp
	(*DeleteAccountRqst)(nil),                      // 5: ressource.DeleteAccountRqst
	(*DeleteAccountRsp)(nil),                       // 6: ressource.DeleteAccountRsp
	(*AuthenticateRqst)(nil),                       // 7: ressource.AuthenticateRqst
	(*AuthenticateRsp)(nil),                        // 8: ressource.AuthenticateRsp
	(*RefreshTokenRqst)(nil),                       // 9: ressource.RefreshTokenRqst
	(*RefreshTokenRsp)(nil),                        // 10: ressource.RefreshTokenRsp
	(*AddAccountRoleRqst)(nil),                     // 11: ressource.AddAccountRoleRqst
	(*AddAccountRoleRsp)(nil),                      // 12: ressource.AddAccountRoleRsp
	(*RemoveAccountRoleRqst)(nil),                  // 13: ressource.RemoveAccountRoleRqst
	(*RemoveAccountRoleRsp)(nil),                   // 14: ressource.RemoveAccountRoleRsp
	(*CreateRoleRqst)(nil),                         // 15: ressource.CreateRoleRqst
	(*CreateRoleRsp)(nil),                          // 16: ressource.CreateRoleRsp
	(*DeleteRoleRqst)(nil),                         // 17: ressource.DeleteRoleRqst
	(*DeleteRoleRsp)(nil),                          // 18: ressource.DeleteRoleRsp
	(*AddRoleActionRqst)(nil),                      // 19: ressource.AddRoleActionRqst
	(*AddRoleActionRsp)(nil),                       // 20: ressource.AddRoleActionRsp
	(*RemoveRoleActionRqst)(nil),                   // 21: ressource.RemoveRoleActionRqst
	(*RemoveRoleActionRsp)(nil),                    // 22: ressource.RemoveRoleActionRsp
	(*AddApplicationActionRqst)(nil),               // 23: ressource.AddApplicationActionRqst
	(*AddApplicationActionRsp)(nil),                // 24: ressource.AddApplicationActionRsp
	(*RemoveApplicationActionRqst)(nil),            // 25: ressource.RemoveApplicationActionRqst
	(*RemoveApplicationActionRsp)(nil),             // 26: ressource.RemoveApplicationActionRsp
	(*GetAllActionsRqst)(nil),                      // 27: ressource.GetAllActionsRqst
	(*GetAllActionsRsp)(nil),                       // 28: ressource.GetAllActionsRsp
	(*DeleteApplicationRqst)(nil),                  // 29: ressource.DeleteApplicationRqst
	(*DeleteApplicationRsp)(nil),                   // 30: ressource.DeleteApplicationRsp
	(*RessourcePermission)(nil),                    // 31: ressource.RessourcePermission
	(*GetPermissionsRqst)(nil),                     // 32: ressource.GetPermissionsRqst
	(*GetPermissionsRsp)(nil),                      // 33: ressource.GetPermissionsRsp
	(*SetPermissionRqst)(nil),                      // 34: ressource.SetPermissionRqst
	(*SetPermissionRsp)(nil),                       // 35: ressource.SetPermissionRsp
	(*DeletePermissionsRqst)(nil),                  // 36: ressource.DeletePermissionsRqst
	(*DeletePermissionsRsp)(nil),                   // 37: ressource.DeletePermissionsRsp
	(*GetAllFilesInfoRqst)(nil),                    // 38: ressource.GetAllFilesInfoRqst
	(*GetAllFilesInfoRsp)(nil),                     // 39: ressource.GetAllFilesInfoRsp
	(*GetAllApplicationsInfoRqst)(nil),             // 40: ressource.GetAllApplicationsInfoRqst
	(*GetAllApplicationsInfoRsp)(nil),              // 41: ressource.GetAllApplicationsInfoRsp
	(*UserSyncInfos)(nil),                          // 42: ressource.UserSyncInfos
	(*GroupSyncInfos)(nil),                         // 43: ressource.GroupSyncInfos
	(*LdapSyncInfos)(nil),                          // 44: ressource.LdapSyncInfos
	(*SynchronizeLdapRqst)(nil),                    // 45: ressource.SynchronizeLdapRqst
	(*SynchronizeLdapRsp)(nil),                     // 46: ressource.SynchronizeLdapRsp
	(*SetRessourceOwnerRqst)(nil),                  // 47: ressource.SetRessourceOwnerRqst
	(*SetRessourceOwnerRsp)(nil),                   // 48: ressource.SetRessourceOwnerRsp
	(*GetRessourceOwnersRqst)(nil),                 // 49: ressource.GetRessourceOwnersRqst
	(*GetRessourceOwnersRsp)(nil),                  // 50: ressource.GetRessourceOwnersRsp
	(*DeleteRessourceOwnerRqst)(nil),               // 51: ressource.DeleteRessourceOwnerRqst
	(*DeleteRessourceOwnerRsp)(nil),                // 52: ressource.DeleteRessourceOwnerRsp
	(*DeleteRessourceOwnersRqst)(nil),              // 53: ressource.DeleteRessourceOwnersRqst
	(*DeleteRessourceOwnersRsp)(nil),               // 54: ressource.DeleteRessourceOwnersRsp
	(*ValidateTokenRqst)(nil),                      // 55: ressource.ValidateTokenRqst
	(*ValidateTokenRsp)(nil),                       // 56: ressource.ValidateTokenRsp
	(*ValidateApplicationAccessRqst)(nil),          // 57: ressource.ValidateApplicationAccessRqst
	(*ValidateApplicationAccessRsp)(nil),           // 58: ressource.ValidateApplicationAccessRsp
	(*ValidatePeerAccessRqst)(nil),                 // 59: ressource.ValidatePeerAccessRqst
	(*ValidatePeerAccessRsp)(nil),                  // 60: ressource.ValidatePeerAccessRsp
	(*ValidatePeerRessourceAccessRqst)(nil),        // 61: ressource.ValidatePeerRessourceAccessRqst
	(*ValidatePeerRessourceAccessRsp)(nil),         // 62: ressource.ValidatePeerRessourceAccessRsp
	(*ValidateUserAccessRqst)(nil),                 // 63: ressource.ValidateUserAccessRqst
	(*ValidateUserAccessRsp)(nil),                  // 64: ressource.ValidateUserAccessRsp
	(*ValidateUserRessourceAccessRqst)(nil),        // 65: ressource.ValidateUserRessourceAccessRqst
	(*ValidateUserRessourceAccessRsp)(nil),         // 66: ressource.ValidateUserRessourceAccessRsp
	(*ValidateApplicationRessourceAccessRqst)(nil), // 67: ressource.ValidateApplicationRessourceAccessRqst
	(*ValidateApplicationRessourceAccessRsp)(nil),  // 68: ressource.ValidateApplicationRessourceAccessRsp
	(*AccountExistRqst)(nil),                       // 69: ressource.AccountExistRqst
	(*AccountExistRsp)(nil),                        // 70: ressource.AccountExistRsp
	(*DeleteAccountPermissionsRqst)(nil),           // 71: ressource.DeleteAccountPermissionsRqst
	(*DeleteAccountPermissionsRsp)(nil),            // 72: ressource.DeleteAccountPermissionsRsp
	(*DeleteRolePermissionsRqst)(nil),              // 73: ressource.DeleteRolePermissionsRqst
	(*DeleteRolePermissionsRsp)(nil),               // 74: ressource.DeleteRolePermissionsRsp
	(*LogInfo)(nil),                                // 75: ressource.LogInfo
	(*LogRqst)(nil),                                // 76: ressource.LogRqst
	(*LogRsp)(nil),                                 // 77: ressource.LogRsp
	(*DeleteLogRqst)(nil),                          // 78: ressource.DeleteLogRqst
	(*DeleteLogRsp)(nil),                           // 79: ressource.DeleteLogRsp
	(*SetLogMethodRqst)(nil),                       // 80: ressource.SetLogMethodRqst
	(*SetLogMethodRsp)(nil),                        // 81: ressource.SetLogMethodRsp
	(*ResetLogMethodRqst)(nil),                     // 82: ressource.ResetLogMethodRqst
	(*ResetLogMethodRsp)(nil),                      // 83: ressource.ResetLogMethodRsp
	(*GetLogMethodsRqst)(nil),                      // 84: ressource.GetLogMethodsRqst
	(*GetLogMethodsRsp)(nil),                       // 85: ressource.GetLogMethodsRsp
	(*GetLogRqst)(nil),                             // 86: ressource.GetLogRqst
	(*GetLogRsp)(nil),                              // 87: ressource.GetLogRsp
	(*ClearAllLogRqst)(nil),                        // 88: ressource.ClearAllLogRqst
	(*ClearAllLogRsp)(nil),                         // 89: ressource.ClearAllLogRsp
	(*Peer)(nil),                                   // 90: ressource.Peer
	(*Ressource)(nil),                              // 91: ressource.Ressource
	(*SetRessourceRqst)(nil),                       // 92: ressource.SetRessourceRqst
	(*SetRessourceRsp)(nil),                        // 93: ressource.SetRessourceRsp
	(*ActionParameterRessourcePermission)(nil),     // 94: ressource.ActionParameterRessourcePermission
	(*SetActionPermissionRqst)(nil),                // 95: ressource.SetActionPermissionRqst
	(*SetActionPermissionRsp)(nil),                 // 96: ressource.SetActionPermissionRsp
	(*GetActionPermissionRqst)(nil),                // 97: ressource.GetActionPermissionRqst
	(*GetActionPermissionRsp)(nil),                 // 98: ressource.GetActionPermissionRsp
	(*RemoveRessourceRqst)(nil),                    // 99: ressource.RemoveRessourceRqst
	(*RemoveRessourceRsp)(nil),                     // 100: ressource.RemoveRessourceRsp
	(*GetRessourcesRqst)(nil),                      // 101: ressource.GetRessourcesRqst
	(*GetRessourcesRsp)(nil),                       // 102: ressource.GetRessourcesRsp
	(*RemoveActionPermissionRqst)(nil),             // 103: ressource.RemoveActionPermissionRqst
	(*RemoveActionPermissionRsp)(nil),              // 104: ressource.RemoveActionPermissionRsp
	(*CreateDirPermissionsRqst)(nil),               // 105: ressource.CreateDirPermissionsRqst
	(*CreateDirPermissionsRsp)(nil),                // 106: ressource.CreateDirPermissionsRsp
	(*RenameFilePermissionRqst)(nil),               // 107: ressource.RenameFilePermissionRqst
	(*RenameFilePermissionRsp)(nil),                // 108: ressource.RenameFilePermissionRsp
	(*DeleteDirPermissionsRqst)(nil),               // 109: ressource.DeleteDirPermissionsRqst
	(*DeleteDirPermissionsRsp)(nil),                // 110: ressource.DeleteDirPermissionsRsp
	(*DeleteFilePermissionsRqst)(nil),              // 111: ressource.DeleteFilePermissionsRqst
	(*DeleteFilePermissionsRsp)(nil),               // 112: ressource.DeleteFilePermissionsRsp
	(*RegisterPeerRqst)(nil),                       // 113: ressource.RegisterPeerRqst
	(*RegisterPeerRsp)(nil),                        // 114: ressource.RegisterPeerRsp
	(*GetPeersRqst)(nil),                           // 115: ressource.GetPeersRqst
	(*GetPeersRsp)(nil),                            // 116: ressource.GetPeersRsp
	(*DeletePeerRqst)(nil),                         // 117: ressource.DeletePeerRqst
	(*DeletePeerRsp)(nil),                          // 118: ressource.DeletePeerRsp
	(*AddPeerActionRqst)(nil),                      // 119: ressource.AddPeerActionRqst
	(*AddPeerActionRsp)(nil),                       // 120: ressource.AddPeerActionRsp
	(*RemovePeerActionRqst)(nil),                   // 121: ressource.RemovePeerActionRqst
	(*RemovePeerActionRsp)(nil),                    // 122: ressource.RemovePeerActionRsp
}
var file_proto_ressource_proto_depIdxs = []int32{
	1,   // 0: ressource.RegisterAccountRqst.account:type_name -> ressource.Account
	2,   // 1: ressource.CreateRoleRqst.role:type_name -> ressource.Role
	31,  // 2: ressource.SetPermissionRqst.permission:type_name -> ressource.RessourcePermission
	42,  // 3: ressource.LdapSyncInfos.userSyncInfos:type_name -> ressource.UserSyncInfos
	43,  // 4: ressource.LdapSyncInfos.groupSyncInfos:type_name -> ressource.GroupSyncInfos
	44,  // 5: ressource.SynchronizeLdapRqst.syncInfo:type_name -> ressource.LdapSyncInfos
	0,   // 6: ressource.LogInfo.type:type_name -> ressource.LogType
	75,  // 7: ressource.LogRqst.info:type_name -> ressource.LogInfo
	75,  // 8: ressource.DeleteLogRqst.log:type_name -> ressource.LogInfo
	75,  // 9: ressource.GetLogRsp.info:type_name -> ressource.LogInfo
	0,   // 10: ressource.ClearAllLogRqst.type:type_name -> ressource.LogType
	91,  // 11: ressource.SetRessourceRqst.ressource:type_name -> ressource.Ressource
	94,  // 12: ressource.SetActionPermissionRqst.actionParameterRessourcePermissions:type_name -> ressource.ActionParameterRessourcePermission
	94,  // 13: ressource.GetActionPermissionRsp.actionParameterRessourcePermissions:type_name -> ressource.ActionParameterRessourcePermission
	91,  // 14: ressource.RemoveRessourceRqst.ressource:type_name -> ressource.Ressource
	91,  // 15: ressource.GetRessourcesRsp.ressources:type_name -> ressource.Ressource
	90,  // 16: ressource.RegisterPeerRqst.peer:type_name -> ressource.Peer
	90,  // 17: ressource.GetPeersRsp.peers:type_name -> ressource.Peer
	90,  // 18: ressource.DeletePeerRqst.peer:type_name -> ressource.Peer
	113, // 19: ressource.RessourceService.RegisterPeer:input_type -> ressource.RegisterPeerRqst
	115, // 20: ressource.RessourceService.GetPeers:input_type -> ressource.GetPeersRqst
	117, // 21: ressource.RessourceService.DeletePeer:input_type -> ressource.DeletePeerRqst
	119, // 22: ressource.RessourceService.AddPeerAction:input_type -> ressource.AddPeerActionRqst
	121, // 23: ressource.RessourceService.RemovePeerAction:input_type -> ressource.RemovePeerActionRqst
	3,   // 24: ressource.RessourceService.RegisterAccount:input_type -> ressource.RegisterAccountRqst
	5,   // 25: ressource.RessourceService.DeleteAccount:input_type -> ressource.DeleteAccountRqst
	7,   // 26: ressource.RessourceService.Authenticate:input_type -> ressource.AuthenticateRqst
	45,  // 27: ressource.RessourceService.SynchronizeLdap:input_type -> ressource.SynchronizeLdapRqst
	9,   // 28: ressource.RessourceService.RefreshToken:input_type -> ressource.RefreshTokenRqst
	11,  // 29: ressource.RessourceService.AddAccountRole:input_type -> ressource.AddAccountRoleRqst
	13,  // 30: ressource.RessourceService.RemoveAccountRole:input_type -> ressource.RemoveAccountRoleRqst
	15,  // 31: ressource.RessourceService.CreateRole:input_type -> ressource.CreateRoleRqst
	17,  // 32: ressource.RessourceService.DeleteRole:input_type -> ressource.DeleteRoleRqst
	19,  // 33: ressource.RessourceService.AddRoleAction:input_type -> ressource.AddRoleActionRqst
	21,  // 34: ressource.RessourceService.RemoveRoleAction:input_type -> ressource.RemoveRoleActionRqst
	23,  // 35: ressource.RessourceService.AddApplicationAction:input_type -> ressource.AddApplicationActionRqst
	25,  // 36: ressource.RessourceService.RemoveApplicationAction:input_type -> ressource.RemoveApplicationActionRqst
	27,  // 37: ressource.RessourceService.GetAllActions:input_type -> ressource.GetAllActionsRqst
	32,  // 38: ressource.RessourceService.GetPermissions:input_type -> ressource.GetPermissionsRqst
	34,  // 39: ressource.RessourceService.SetPermission:input_type -> ressource.SetPermissionRqst
	36,  // 40: ressource.RessourceService.DeletePermissions:input_type -> ressource.DeletePermissionsRqst
	47,  // 41: ressource.RessourceService.SetRessourceOwner:input_type -> ressource.SetRessourceOwnerRqst
	49,  // 42: ressource.RessourceService.GetRessourceOwners:input_type -> ressource.GetRessourceOwnersRqst
	51,  // 43: ressource.RessourceService.DeleteRessourceOwner:input_type -> ressource.DeleteRessourceOwnerRqst
	53,  // 44: ressource.RessourceService.DeleteRessourceOwners:input_type -> ressource.DeleteRessourceOwnersRqst
	38,  // 45: ressource.RessourceService.GetAllFilesInfo:input_type -> ressource.GetAllFilesInfoRqst
	55,  // 46: ressource.RessourceService.ValidateToken:input_type -> ressource.ValidateTokenRqst
	65,  // 47: ressource.RessourceService.ValidateUserRessourceAccess:input_type -> ressource.ValidateUserRessourceAccessRqst
	67,  // 48: ressource.RessourceService.ValidateApplicationRessourceAccess:input_type -> ressource.ValidateApplicationRessourceAccessRqst
	63,  // 49: ressource.RessourceService.ValidateUserAccess:input_type -> ressource.ValidateUserAccessRqst
	57,  // 50: ressource.RessourceService.ValidateApplicationAccess:input_type -> ressource.ValidateApplicationAccessRqst
	59,  // 51: ressource.RessourceService.ValidatePeerAccess:input_type -> ressource.ValidatePeerAccessRqst
	61,  // 52: ressource.RessourceService.ValidatePeerRessourceAccess:input_type -> ressource.ValidatePeerRessourceAccessRqst
	71,  // 53: ressource.RessourceService.DeleteAccountPermissions:input_type -> ressource.DeleteAccountPermissionsRqst
	73,  // 54: ressource.RessourceService.DeleteRolePermissions:input_type -> ressource.DeleteRolePermissionsRqst
	40,  // 55: ressource.RessourceService.GetAllApplicationsInfo:input_type -> ressource.GetAllApplicationsInfoRqst
	29,  // 56: ressource.RessourceService.DeleteApplication:input_type -> ressource.DeleteApplicationRqst
	76,  // 57: ressource.RessourceService.Log:input_type -> ressource.LogRqst
	86,  // 58: ressource.RessourceService.GetLog:input_type -> ressource.GetLogRqst
	78,  // 59: ressource.RessourceService.DeleteLog:input_type -> ressource.DeleteLogRqst
	88,  // 60: ressource.RessourceService.ClearAllLog:input_type -> ressource.ClearAllLogRqst
	101, // 61: ressource.RessourceService.GetRessources:input_type -> ressource.GetRessourcesRqst
	92,  // 62: ressource.RessourceService.SetRessource:input_type -> ressource.SetRessourceRqst
	99,  // 63: ressource.RessourceService.RemoveRessource:input_type -> ressource.RemoveRessourceRqst
	95,  // 64: ressource.RessourceService.SetActionPermission:input_type -> ressource.SetActionPermissionRqst
	103, // 65: ressource.RessourceService.RemoveActionPermission:input_type -> ressource.RemoveActionPermissionRqst
	97,  // 66: ressource.RessourceService.GetActionPermission:input_type -> ressource.GetActionPermissionRqst
	105, // 67: ressource.RessourceService.CreateDirPermissions:input_type -> ressource.CreateDirPermissionsRqst
	107, // 68: ressource.RessourceService.RenameFilePermission:input_type -> ressource.RenameFilePermissionRqst
	109, // 69: ressource.RessourceService.DeleteDirPermissions:input_type -> ressource.DeleteDirPermissionsRqst
	111, // 70: ressource.RessourceService.DeleteFilePermissions:input_type -> ressource.DeleteFilePermissionsRqst
	114, // 71: ressource.RessourceService.RegisterPeer:output_type -> ressource.RegisterPeerRsp
	116, // 72: ressource.RessourceService.GetPeers:output_type -> ressource.GetPeersRsp
	118, // 73: ressource.RessourceService.DeletePeer:output_type -> ressource.DeletePeerRsp
	120, // 74: ressource.RessourceService.AddPeerAction:output_type -> ressource.AddPeerActionRsp
	122, // 75: ressource.RessourceService.RemovePeerAction:output_type -> ressource.RemovePeerActionRsp
	4,   // 76: ressource.RessourceService.RegisterAccount:output_type -> ressource.RegisterAccountRsp
	6,   // 77: ressource.RessourceService.DeleteAccount:output_type -> ressource.DeleteAccountRsp
	8,   // 78: ressource.RessourceService.Authenticate:output_type -> ressource.AuthenticateRsp
	46,  // 79: ressource.RessourceService.SynchronizeLdap:output_type -> ressource.SynchronizeLdapRsp
	10,  // 80: ressource.RessourceService.RefreshToken:output_type -> ressource.RefreshTokenRsp
	12,  // 81: ressource.RessourceService.AddAccountRole:output_type -> ressource.AddAccountRoleRsp
	14,  // 82: ressource.RessourceService.RemoveAccountRole:output_type -> ressource.RemoveAccountRoleRsp
	16,  // 83: ressource.RessourceService.CreateRole:output_type -> ressource.CreateRoleRsp
	18,  // 84: ressource.RessourceService.DeleteRole:output_type -> ressource.DeleteRoleRsp
	20,  // 85: ressource.RessourceService.AddRoleAction:output_type -> ressource.AddRoleActionRsp
	22,  // 86: ressource.RessourceService.RemoveRoleAction:output_type -> ressource.RemoveRoleActionRsp
	24,  // 87: ressource.RessourceService.AddApplicationAction:output_type -> ressource.AddApplicationActionRsp
	26,  // 88: ressource.RessourceService.RemoveApplicationAction:output_type -> ressource.RemoveApplicationActionRsp
	28,  // 89: ressource.RessourceService.GetAllActions:output_type -> ressource.GetAllActionsRsp
	33,  // 90: ressource.RessourceService.GetPermissions:output_type -> ressource.GetPermissionsRsp
	35,  // 91: ressource.RessourceService.SetPermission:output_type -> ressource.SetPermissionRsp
	37,  // 92: ressource.RessourceService.DeletePermissions:output_type -> ressource.DeletePermissionsRsp
	48,  // 93: ressource.RessourceService.SetRessourceOwner:output_type -> ressource.SetRessourceOwnerRsp
	50,  // 94: ressource.RessourceService.GetRessourceOwners:output_type -> ressource.GetRessourceOwnersRsp
	52,  // 95: ressource.RessourceService.DeleteRessourceOwner:output_type -> ressource.DeleteRessourceOwnerRsp
	54,  // 96: ressource.RessourceService.DeleteRessourceOwners:output_type -> ressource.DeleteRessourceOwnersRsp
	39,  // 97: ressource.RessourceService.GetAllFilesInfo:output_type -> ressource.GetAllFilesInfoRsp
	56,  // 98: ressource.RessourceService.ValidateToken:output_type -> ressource.ValidateTokenRsp
	66,  // 99: ressource.RessourceService.ValidateUserRessourceAccess:output_type -> ressource.ValidateUserRessourceAccessRsp
	68,  // 100: ressource.RessourceService.ValidateApplicationRessourceAccess:output_type -> ressource.ValidateApplicationRessourceAccessRsp
	64,  // 101: ressource.RessourceService.ValidateUserAccess:output_type -> ressource.ValidateUserAccessRsp
	58,  // 102: ressource.RessourceService.ValidateApplicationAccess:output_type -> ressource.ValidateApplicationAccessRsp
	60,  // 103: ressource.RessourceService.ValidatePeerAccess:output_type -> ressource.ValidatePeerAccessRsp
	62,  // 104: ressource.RessourceService.ValidatePeerRessourceAccess:output_type -> ressource.ValidatePeerRessourceAccessRsp
	72,  // 105: ressource.RessourceService.DeleteAccountPermissions:output_type -> ressource.DeleteAccountPermissionsRsp
	74,  // 106: ressource.RessourceService.DeleteRolePermissions:output_type -> ressource.DeleteRolePermissionsRsp
	41,  // 107: ressource.RessourceService.GetAllApplicationsInfo:output_type -> ressource.GetAllApplicationsInfoRsp
	30,  // 108: ressource.RessourceService.DeleteApplication:output_type -> ressource.DeleteApplicationRsp
	77,  // 109: ressource.RessourceService.Log:output_type -> ressource.LogRsp
	87,  // 110: ressource.RessourceService.GetLog:output_type -> ressource.GetLogRsp
	79,  // 111: ressource.RessourceService.DeleteLog:output_type -> ressource.DeleteLogRsp
	89,  // 112: ressource.RessourceService.ClearAllLog:output_type -> ressource.ClearAllLogRsp
	102, // 113: ressource.RessourceService.GetRessources:output_type -> ressource.GetRessourcesRsp
	93,  // 114: ressource.RessourceService.SetRessource:output_type -> ressource.SetRessourceRsp
	100, // 115: ressource.RessourceService.RemoveRessource:output_type -> ressource.RemoveRessourceRsp
	96,  // 116: ressource.RessourceService.SetActionPermission:output_type -> ressource.SetActionPermissionRsp
	104, // 117: ressource.RessourceService.RemoveActionPermission:output_type -> ressource.RemoveActionPermissionRsp
	98,  // 118: ressource.RessourceService.GetActionPermission:output_type -> ressource.GetActionPermissionRsp
	106, // 119: ressource.RessourceService.CreateDirPermissions:output_type -> ressource.CreateDirPermissionsRsp
	108, // 120: ressource.RessourceService.RenameFilePermission:output_type -> ressource.RenameFilePermissionRsp
	110, // 121: ressource.RessourceService.DeleteDirPermissions:output_type -> ressource.DeleteDirPermissionsRsp
	112, // 122: ressource.RessourceService.DeleteFilePermissions:output_type -> ressource.DeleteFilePermissionsRsp
	71,  // [71:123] is the sub-list for method output_type
	19,  // [19:71] is the sub-list for method input_type
	19,  // [19:19] is the sub-list for extension type_name
	19,  // [19:19] is the sub-list for extension extendee
	0,   // [0:19] is the sub-list for field type_name
}

func init() { file_proto_ressource_proto_init() }
func file_proto_ressource_proto_init() {
	if File_proto_ressource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ressource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAccountRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAccountRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAccountRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAccountRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApplicationActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApplicationActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveApplicationActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveApplicationActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllActionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllActionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApplicationRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RessourcePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPermissionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPermissionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFilesInfoRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFilesInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllApplicationsInfoRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllApplicationsInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSyncInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSyncInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LdapSyncInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeLdapRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeLdapRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRessourceOwnerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRessourceOwnerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRessourceOwnersRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRessourceOwnersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRessourceOwnerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRessourceOwnerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRessourceOwnersRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRessourceOwnersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTokenRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateApplicationAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateApplicationAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePeerAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePeerAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePeerRessourceAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePeerRessourceAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserRessourceAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserRessourceAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateApplicationRessourceAccessRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateApplicationRessourceAccessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountExistRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountExistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountPermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountPermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRolePermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRolePermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLogMethodRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLogMethodRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLogMethodRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLogMethodRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogMethodsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogMethodsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAllLogRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAllLogRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ressource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRessourceRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRessourceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionParameterRessourcePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActionPermissionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActionPermissionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionPermissionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionPermissionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRessourceRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRessourceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRessourcesRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRessourcesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveActionPermissionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveActionPermissionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDirPermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDirPermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameFilePermissionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameFilePermissionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDirPermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDirPermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFilePermissionsRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFilePermissionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePeerRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePeerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePeerActionRqst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ressource_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePeerActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_ressource_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*RessourcePermission_User)(nil),
		(*RessourcePermission_Role)(nil),
		(*RessourcePermission_Application)(nil),
		(*RessourcePermission_Service)(nil),
		(*RessourcePermission_Peer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ressource_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   122,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ressource_proto_goTypes,
		DependencyIndexes: file_proto_ressource_proto_depIdxs,
		EnumInfos:         file_proto_ressource_proto_enumTypes,
		MessageInfos:      file_proto_ressource_proto_msgTypes,
	}.Build()
	File_proto_ressource_proto = out.File
	file_proto_ressource_proto_rawDesc = nil
	file_proto_ressource_proto_goTypes = nil
	file_proto_ressource_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RessourceServiceClient is the client API for RessourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RessourceServiceClient interface {
	//* Register a peer on the network *
	RegisterPeer(ctx context.Context, in *RegisterPeerRqst, opts ...grpc.CallOption) (*RegisterPeerRsp, error)
	//* Return the list of peers *
	GetPeers(ctx context.Context, in *GetPeersRqst, opts ...grpc.CallOption) (RessourceService_GetPeersClient, error)
	//* Remove a peer from the network *
	DeletePeer(ctx context.Context, in *DeletePeerRqst, opts ...grpc.CallOption) (*DeletePeerRsp, error)
	//* Add peer action permission *
	AddPeerAction(ctx context.Context, in *AddPeerActionRqst, opts ...grpc.CallOption) (*AddPeerActionRsp, error)
	//* Remove peer action permission *
	RemovePeerAction(ctx context.Context, in *RemovePeerActionRqst, opts ...grpc.CallOption) (*RemovePeerActionRsp, error)
	//* Register a new Account *
	RegisterAccount(ctx context.Context, in *RegisterAccountRqst, opts ...grpc.CallOption) (*RegisterAccountRsp, error)
	//* Delete an account *
	DeleteAccount(ctx context.Context, in *DeleteAccountRqst, opts ...grpc.CallOption) (*DeleteAccountRsp, error)
	//* Authenticate a user *
	Authenticate(ctx context.Context, in *AuthenticateRqst, opts ...grpc.CallOption) (*AuthenticateRsp, error)
	//* Synchronize Ressource with LDAP if connection exist *
	SynchronizeLdap(ctx context.Context, in *SynchronizeLdapRqst, opts ...grpc.CallOption) (*SynchronizeLdapRsp, error)
	//* Refresh token get a new token *
	RefreshToken(ctx context.Context, in *RefreshTokenRqst, opts ...grpc.CallOption) (*RefreshTokenRsp, error)
	//* Add role to a given account *
	AddAccountRole(ctx context.Context, in *AddAccountRoleRqst, opts ...grpc.CallOption) (*AddAccountRoleRsp, error)
	//* Remove a role from a given account *
	RemoveAccountRole(ctx context.Context, in *RemoveAccountRoleRqst, opts ...grpc.CallOption) (*RemoveAccountRoleRsp, error)
	//* Create a role with given action list *
	CreateRole(ctx context.Context, in *CreateRoleRqst, opts ...grpc.CallOption) (*CreateRoleRsp, error)
	//* Delete a role with a given id *
	DeleteRole(ctx context.Context, in *DeleteRoleRqst, opts ...grpc.CallOption) (*DeleteRoleRsp, error)
	//* Append an action to existing role. *
	AddRoleAction(ctx context.Context, in *AddRoleActionRqst, opts ...grpc.CallOption) (*AddRoleActionRsp, error)
	//* Remove an action to existing role. *
	RemoveRoleAction(ctx context.Context, in *RemoveRoleActionRqst, opts ...grpc.CallOption) (*RemoveRoleActionRsp, error)
	//* Append an action to existing applications. *
	AddApplicationAction(ctx context.Context, in *AddApplicationActionRqst, opts ...grpc.CallOption) (*AddApplicationActionRsp, error)
	//* Remove an action to existing applications. *
	RemoveApplicationAction(ctx context.Context, in *RemoveApplicationActionRqst, opts ...grpc.CallOption) (*RemoveApplicationActionRsp, error)
	//* Get all actions *
	GetAllActions(ctx context.Context, in *GetAllActionsRqst, opts ...grpc.CallOption) (*GetAllActionsRsp, error)
	//*  *
	GetPermissions(ctx context.Context, in *GetPermissionsRqst, opts ...grpc.CallOption) (*GetPermissionsRsp, error)
	//* Set a file permission, create new one if not already exist. *
	SetPermission(ctx context.Context, in *SetPermissionRqst, opts ...grpc.CallOption) (*SetPermissionRsp, error)
	//* Delete a file permissions *
	DeletePermissions(ctx context.Context, in *DeletePermissionsRqst, opts ...grpc.CallOption) (*DeletePermissionsRsp, error)
	//* Set Ressource owner *
	SetRessourceOwner(ctx context.Context, in *SetRessourceOwnerRqst, opts ...grpc.CallOption) (*SetRessourceOwnerRsp, error)
	//* Get the ressource owners *
	GetRessourceOwners(ctx context.Context, in *GetRessourceOwnersRqst, opts ...grpc.CallOption) (*GetRessourceOwnersRsp, error)
	//* Delete the ressource owner *
	DeleteRessourceOwner(ctx context.Context, in *DeleteRessourceOwnerRqst, opts ...grpc.CallOption) (*DeleteRessourceOwnerRsp, error)
	//* Delete the ressource owners *
	DeleteRessourceOwners(ctx context.Context, in *DeleteRessourceOwnersRqst, opts ...grpc.CallOption) (*DeleteRessourceOwnersRsp, error)
	//* Retrun a json string with all file info *
	GetAllFilesInfo(ctx context.Context, in *GetAllFilesInfoRqst, opts ...grpc.CallOption) (*GetAllFilesInfoRsp, error)
	//* Validate a token *
	ValidateToken(ctx context.Context, in *ValidateTokenRqst, opts ...grpc.CallOption) (*ValidateTokenRsp, error)
	//* Validate if user can access a given ressource. *
	ValidateUserRessourceAccess(ctx context.Context, in *ValidateUserRessourceAccessRqst, opts ...grpc.CallOption) (*ValidateUserRessourceAccessRsp, error)
	//* Validate if application can access a given ressouce. *
	ValidateApplicationRessourceAccess(ctx context.Context, in *ValidateApplicationRessourceAccessRqst, opts ...grpc.CallOption) (*ValidateApplicationRessourceAccessRsp, error)
	//* Validate if user can access a given method. *
	ValidateUserAccess(ctx context.Context, in *ValidateUserAccessRqst, opts ...grpc.CallOption) (*ValidateUserAccessRsp, error)
	//* Validate if application can access a given method. *
	ValidateApplicationAccess(ctx context.Context, in *ValidateApplicationAccessRqst, opts ...grpc.CallOption) (*ValidateApplicationAccessRsp, error)
	//* Validate if a peer can access a given method. *
	ValidatePeerAccess(ctx context.Context, in *ValidatePeerAccessRqst, opts ...grpc.CallOption) (*ValidatePeerAccessRsp, error)
	//* Validate if a peer can access a given ressource. *
	ValidatePeerRessourceAccess(ctx context.Context, in *ValidatePeerRessourceAccessRqst, opts ...grpc.CallOption) (*ValidatePeerRessourceAccessRsp, error)
	//* Delete all permission for a given account *
	DeleteAccountPermissions(ctx context.Context, in *DeleteAccountPermissionsRqst, opts ...grpc.CallOption) (*DeleteAccountPermissionsRsp, error)
	//* Delete all permission for a given role *
	DeleteRolePermissions(ctx context.Context, in *DeleteRolePermissionsRqst, opts ...grpc.CallOption) (*DeleteRolePermissionsRsp, error)
	//* Return a json string with all applications informations *
	GetAllApplicationsInfo(ctx context.Context, in *GetAllApplicationsInfoRqst, opts ...grpc.CallOption) (*GetAllApplicationsInfoRsp, error)
	//* Delete an application from the server. *
	DeleteApplication(ctx context.Context, in *DeleteApplicationRqst, opts ...grpc.CallOption) (*DeleteApplicationRsp, error)
	//* Set a method into the log... *
	Log(ctx context.Context, in *LogRqst, opts ...grpc.CallOption) (*LogRsp, error)
	//* Get the list of logs *
	GetLog(ctx context.Context, in *GetLogRqst, opts ...grpc.CallOption) (RessourceService_GetLogClient, error)
	//* Delete a single log entry *
	DeleteLog(ctx context.Context, in *DeleteLogRqst, opts ...grpc.CallOption) (*DeleteLogRsp, error)
	//* Delete all log *
	ClearAllLog(ctx context.Context, in *ClearAllLogRqst, opts ...grpc.CallOption) (*ClearAllLogRsp, error)
	//* Get all ressources
	GetRessources(ctx context.Context, in *GetRessourcesRqst, opts ...grpc.CallOption) (RessourceService_GetRessourcesClient, error)
	//* Set a ressource from a client (custom service) to globular
	SetRessource(ctx context.Context, in *SetRessourceRqst, opts ...grpc.CallOption) (*SetRessourceRsp, error)
	//* Remove a ressource from a client (custom service) to globular
	RemoveRessource(ctx context.Context, in *RemoveRessourceRqst, opts ...grpc.CallOption) (*RemoveRessourceRsp, error)
	//* Set ressource action permission *
	SetActionPermission(ctx context.Context, in *SetActionPermissionRqst, opts ...grpc.CallOption) (*SetActionPermissionRsp, error)
	//* Remove ressource action permission *
	RemoveActionPermission(ctx context.Context, in *RemoveActionPermissionRqst, opts ...grpc.CallOption) (*RemoveActionPermissionRsp, error)
	//* Get ressource action permission *
	GetActionPermission(ctx context.Context, in *GetActionPermissionRqst, opts ...grpc.CallOption) (*GetActionPermissionRsp, error)
	//* Create Permission for a dir (recursive) *
	CreateDirPermissions(ctx context.Context, in *CreateDirPermissionsRqst, opts ...grpc.CallOption) (*CreateDirPermissionsRsp, error)
	//* Rename file/dir permission *
	RenameFilePermission(ctx context.Context, in *RenameFilePermissionRqst, opts ...grpc.CallOption) (*RenameFilePermissionRsp, error)
	//* Delete Permission for a dir (recursive) *
	DeleteDirPermissions(ctx context.Context, in *DeleteDirPermissionsRqst, opts ...grpc.CallOption) (*DeleteDirPermissionsRsp, error)
	//* Delete a single file permission *
	DeleteFilePermissions(ctx context.Context, in *DeleteFilePermissionsRqst, opts ...grpc.CallOption) (*DeleteFilePermissionsRsp, error)
}

type ressourceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRessourceServiceClient(cc grpc.ClientConnInterface) RessourceServiceClient {
	return &ressourceServiceClient{cc}
}

func (c *ressourceServiceClient) RegisterPeer(ctx context.Context, in *RegisterPeerRqst, opts ...grpc.CallOption) (*RegisterPeerRsp, error) {
	out := new(RegisterPeerRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RegisterPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetPeers(ctx context.Context, in *GetPeersRqst, opts ...grpc.CallOption) (RessourceService_GetPeersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RessourceService_serviceDesc.Streams[0], "/ressource.RessourceService/GetPeers", opts...)
	if err != nil {
		return nil, err
	}
	x := &ressourceServiceGetPeersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RessourceService_GetPeersClient interface {
	Recv() (*GetPeersRsp, error)
	grpc.ClientStream
}

type ressourceServiceGetPeersClient struct {
	grpc.ClientStream
}

func (x *ressourceServiceGetPeersClient) Recv() (*GetPeersRsp, error) {
	m := new(GetPeersRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ressourceServiceClient) DeletePeer(ctx context.Context, in *DeletePeerRqst, opts ...grpc.CallOption) (*DeletePeerRsp, error) {
	out := new(DeletePeerRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeletePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) AddPeerAction(ctx context.Context, in *AddPeerActionRqst, opts ...grpc.CallOption) (*AddPeerActionRsp, error) {
	out := new(AddPeerActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/AddPeerAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemovePeerAction(ctx context.Context, in *RemovePeerActionRqst, opts ...grpc.CallOption) (*RemovePeerActionRsp, error) {
	out := new(RemovePeerActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemovePeerAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RegisterAccount(ctx context.Context, in *RegisterAccountRqst, opts ...grpc.CallOption) (*RegisterAccountRsp, error) {
	out := new(RegisterAccountRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RegisterAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteAccount(ctx context.Context, in *DeleteAccountRqst, opts ...grpc.CallOption) (*DeleteAccountRsp, error) {
	out := new(DeleteAccountRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) Authenticate(ctx context.Context, in *AuthenticateRqst, opts ...grpc.CallOption) (*AuthenticateRsp, error) {
	out := new(AuthenticateRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) SynchronizeLdap(ctx context.Context, in *SynchronizeLdapRqst, opts ...grpc.CallOption) (*SynchronizeLdapRsp, error) {
	out := new(SynchronizeLdapRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/SynchronizeLdap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RefreshToken(ctx context.Context, in *RefreshTokenRqst, opts ...grpc.CallOption) (*RefreshTokenRsp, error) {
	out := new(RefreshTokenRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) AddAccountRole(ctx context.Context, in *AddAccountRoleRqst, opts ...grpc.CallOption) (*AddAccountRoleRsp, error) {
	out := new(AddAccountRoleRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/AddAccountRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemoveAccountRole(ctx context.Context, in *RemoveAccountRoleRqst, opts ...grpc.CallOption) (*RemoveAccountRoleRsp, error) {
	out := new(RemoveAccountRoleRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemoveAccountRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) CreateRole(ctx context.Context, in *CreateRoleRqst, opts ...grpc.CallOption) (*CreateRoleRsp, error) {
	out := new(CreateRoleRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteRole(ctx context.Context, in *DeleteRoleRqst, opts ...grpc.CallOption) (*DeleteRoleRsp, error) {
	out := new(DeleteRoleRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) AddRoleAction(ctx context.Context, in *AddRoleActionRqst, opts ...grpc.CallOption) (*AddRoleActionRsp, error) {
	out := new(AddRoleActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/AddRoleAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemoveRoleAction(ctx context.Context, in *RemoveRoleActionRqst, opts ...grpc.CallOption) (*RemoveRoleActionRsp, error) {
	out := new(RemoveRoleActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemoveRoleAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) AddApplicationAction(ctx context.Context, in *AddApplicationActionRqst, opts ...grpc.CallOption) (*AddApplicationActionRsp, error) {
	out := new(AddApplicationActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/AddApplicationAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemoveApplicationAction(ctx context.Context, in *RemoveApplicationActionRqst, opts ...grpc.CallOption) (*RemoveApplicationActionRsp, error) {
	out := new(RemoveApplicationActionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemoveApplicationAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetAllActions(ctx context.Context, in *GetAllActionsRqst, opts ...grpc.CallOption) (*GetAllActionsRsp, error) {
	out := new(GetAllActionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetAllActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetPermissions(ctx context.Context, in *GetPermissionsRqst, opts ...grpc.CallOption) (*GetPermissionsRsp, error) {
	out := new(GetPermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) SetPermission(ctx context.Context, in *SetPermissionRqst, opts ...grpc.CallOption) (*SetPermissionRsp, error) {
	out := new(SetPermissionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/SetPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeletePermissions(ctx context.Context, in *DeletePermissionsRqst, opts ...grpc.CallOption) (*DeletePermissionsRsp, error) {
	out := new(DeletePermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeletePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) SetRessourceOwner(ctx context.Context, in *SetRessourceOwnerRqst, opts ...grpc.CallOption) (*SetRessourceOwnerRsp, error) {
	out := new(SetRessourceOwnerRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/SetRessourceOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetRessourceOwners(ctx context.Context, in *GetRessourceOwnersRqst, opts ...grpc.CallOption) (*GetRessourceOwnersRsp, error) {
	out := new(GetRessourceOwnersRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetRessourceOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteRessourceOwner(ctx context.Context, in *DeleteRessourceOwnerRqst, opts ...grpc.CallOption) (*DeleteRessourceOwnerRsp, error) {
	out := new(DeleteRessourceOwnerRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteRessourceOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteRessourceOwners(ctx context.Context, in *DeleteRessourceOwnersRqst, opts ...grpc.CallOption) (*DeleteRessourceOwnersRsp, error) {
	out := new(DeleteRessourceOwnersRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteRessourceOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetAllFilesInfo(ctx context.Context, in *GetAllFilesInfoRqst, opts ...grpc.CallOption) (*GetAllFilesInfoRsp, error) {
	out := new(GetAllFilesInfoRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetAllFilesInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidateToken(ctx context.Context, in *ValidateTokenRqst, opts ...grpc.CallOption) (*ValidateTokenRsp, error) {
	out := new(ValidateTokenRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidateUserRessourceAccess(ctx context.Context, in *ValidateUserRessourceAccessRqst, opts ...grpc.CallOption) (*ValidateUserRessourceAccessRsp, error) {
	out := new(ValidateUserRessourceAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidateUserRessourceAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidateApplicationRessourceAccess(ctx context.Context, in *ValidateApplicationRessourceAccessRqst, opts ...grpc.CallOption) (*ValidateApplicationRessourceAccessRsp, error) {
	out := new(ValidateApplicationRessourceAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidateApplicationRessourceAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidateUserAccess(ctx context.Context, in *ValidateUserAccessRqst, opts ...grpc.CallOption) (*ValidateUserAccessRsp, error) {
	out := new(ValidateUserAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidateUserAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidateApplicationAccess(ctx context.Context, in *ValidateApplicationAccessRqst, opts ...grpc.CallOption) (*ValidateApplicationAccessRsp, error) {
	out := new(ValidateApplicationAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidateApplicationAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidatePeerAccess(ctx context.Context, in *ValidatePeerAccessRqst, opts ...grpc.CallOption) (*ValidatePeerAccessRsp, error) {
	out := new(ValidatePeerAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidatePeerAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ValidatePeerRessourceAccess(ctx context.Context, in *ValidatePeerRessourceAccessRqst, opts ...grpc.CallOption) (*ValidatePeerRessourceAccessRsp, error) {
	out := new(ValidatePeerRessourceAccessRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ValidatePeerRessourceAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteAccountPermissions(ctx context.Context, in *DeleteAccountPermissionsRqst, opts ...grpc.CallOption) (*DeleteAccountPermissionsRsp, error) {
	out := new(DeleteAccountPermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteAccountPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteRolePermissions(ctx context.Context, in *DeleteRolePermissionsRqst, opts ...grpc.CallOption) (*DeleteRolePermissionsRsp, error) {
	out := new(DeleteRolePermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteRolePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetAllApplicationsInfo(ctx context.Context, in *GetAllApplicationsInfoRqst, opts ...grpc.CallOption) (*GetAllApplicationsInfoRsp, error) {
	out := new(GetAllApplicationsInfoRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetAllApplicationsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteApplication(ctx context.Context, in *DeleteApplicationRqst, opts ...grpc.CallOption) (*DeleteApplicationRsp, error) {
	out := new(DeleteApplicationRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) Log(ctx context.Context, in *LogRqst, opts ...grpc.CallOption) (*LogRsp, error) {
	out := new(LogRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetLog(ctx context.Context, in *GetLogRqst, opts ...grpc.CallOption) (RessourceService_GetLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RessourceService_serviceDesc.Streams[1], "/ressource.RessourceService/GetLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &ressourceServiceGetLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RessourceService_GetLogClient interface {
	Recv() (*GetLogRsp, error)
	grpc.ClientStream
}

type ressourceServiceGetLogClient struct {
	grpc.ClientStream
}

func (x *ressourceServiceGetLogClient) Recv() (*GetLogRsp, error) {
	m := new(GetLogRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ressourceServiceClient) DeleteLog(ctx context.Context, in *DeleteLogRqst, opts ...grpc.CallOption) (*DeleteLogRsp, error) {
	out := new(DeleteLogRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) ClearAllLog(ctx context.Context, in *ClearAllLogRqst, opts ...grpc.CallOption) (*ClearAllLogRsp, error) {
	out := new(ClearAllLogRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/ClearAllLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetRessources(ctx context.Context, in *GetRessourcesRqst, opts ...grpc.CallOption) (RessourceService_GetRessourcesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RessourceService_serviceDesc.Streams[2], "/ressource.RessourceService/GetRessources", opts...)
	if err != nil {
		return nil, err
	}
	x := &ressourceServiceGetRessourcesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RessourceService_GetRessourcesClient interface {
	Recv() (*GetRessourcesRsp, error)
	grpc.ClientStream
}

type ressourceServiceGetRessourcesClient struct {
	grpc.ClientStream
}

func (x *ressourceServiceGetRessourcesClient) Recv() (*GetRessourcesRsp, error) {
	m := new(GetRessourcesRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ressourceServiceClient) SetRessource(ctx context.Context, in *SetRessourceRqst, opts ...grpc.CallOption) (*SetRessourceRsp, error) {
	out := new(SetRessourceRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/SetRessource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemoveRessource(ctx context.Context, in *RemoveRessourceRqst, opts ...grpc.CallOption) (*RemoveRessourceRsp, error) {
	out := new(RemoveRessourceRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemoveRessource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) SetActionPermission(ctx context.Context, in *SetActionPermissionRqst, opts ...grpc.CallOption) (*SetActionPermissionRsp, error) {
	out := new(SetActionPermissionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/SetActionPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RemoveActionPermission(ctx context.Context, in *RemoveActionPermissionRqst, opts ...grpc.CallOption) (*RemoveActionPermissionRsp, error) {
	out := new(RemoveActionPermissionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RemoveActionPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) GetActionPermission(ctx context.Context, in *GetActionPermissionRqst, opts ...grpc.CallOption) (*GetActionPermissionRsp, error) {
	out := new(GetActionPermissionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/GetActionPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) CreateDirPermissions(ctx context.Context, in *CreateDirPermissionsRqst, opts ...grpc.CallOption) (*CreateDirPermissionsRsp, error) {
	out := new(CreateDirPermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/CreateDirPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) RenameFilePermission(ctx context.Context, in *RenameFilePermissionRqst, opts ...grpc.CallOption) (*RenameFilePermissionRsp, error) {
	out := new(RenameFilePermissionRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/RenameFilePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteDirPermissions(ctx context.Context, in *DeleteDirPermissionsRqst, opts ...grpc.CallOption) (*DeleteDirPermissionsRsp, error) {
	out := new(DeleteDirPermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteDirPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ressourceServiceClient) DeleteFilePermissions(ctx context.Context, in *DeleteFilePermissionsRqst, opts ...grpc.CallOption) (*DeleteFilePermissionsRsp, error) {
	out := new(DeleteFilePermissionsRsp)
	err := c.cc.Invoke(ctx, "/ressource.RessourceService/DeleteFilePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RessourceServiceServer is the server API for RessourceService service.
type RessourceServiceServer interface {
	//* Register a peer on the network *
	RegisterPeer(context.Context, *RegisterPeerRqst) (*RegisterPeerRsp, error)
	//* Return the list of peers *
	GetPeers(*GetPeersRqst, RessourceService_GetPeersServer) error
	//* Remove a peer from the network *
	DeletePeer(context.Context, *DeletePeerRqst) (*DeletePeerRsp, error)
	//* Add peer action permission *
	AddPeerAction(context.Context, *AddPeerActionRqst) (*AddPeerActionRsp, error)
	//* Remove peer action permission *
	RemovePeerAction(context.Context, *RemovePeerActionRqst) (*RemovePeerActionRsp, error)
	//* Register a new Account *
	RegisterAccount(context.Context, *RegisterAccountRqst) (*RegisterAccountRsp, error)
	//* Delete an account *
	DeleteAccount(context.Context, *DeleteAccountRqst) (*DeleteAccountRsp, error)
	//* Authenticate a user *
	Authenticate(context.Context, *AuthenticateRqst) (*AuthenticateRsp, error)
	//* Synchronize Ressource with LDAP if connection exist *
	SynchronizeLdap(context.Context, *SynchronizeLdapRqst) (*SynchronizeLdapRsp, error)
	//* Refresh token get a new token *
	RefreshToken(context.Context, *RefreshTokenRqst) (*RefreshTokenRsp, error)
	//* Add role to a given account *
	AddAccountRole(context.Context, *AddAccountRoleRqst) (*AddAccountRoleRsp, error)
	//* Remove a role from a given account *
	RemoveAccountRole(context.Context, *RemoveAccountRoleRqst) (*RemoveAccountRoleRsp, error)
	//* Create a role with given action list *
	CreateRole(context.Context, *CreateRoleRqst) (*CreateRoleRsp, error)
	//* Delete a role with a given id *
	DeleteRole(context.Context, *DeleteRoleRqst) (*DeleteRoleRsp, error)
	//* Append an action to existing role. *
	AddRoleAction(context.Context, *AddRoleActionRqst) (*AddRoleActionRsp, error)
	//* Remove an action to existing role. *
	RemoveRoleAction(context.Context, *RemoveRoleActionRqst) (*RemoveRoleActionRsp, error)
	//* Append an action to existing applications. *
	AddApplicationAction(context.Context, *AddApplicationActionRqst) (*AddApplicationActionRsp, error)
	//* Remove an action to existing applications. *
	RemoveApplicationAction(context.Context, *RemoveApplicationActionRqst) (*RemoveApplicationActionRsp, error)
	//* Get all actions *
	GetAllActions(context.Context, *GetAllActionsRqst) (*GetAllActionsRsp, error)
	//*  *
	GetPermissions(context.Context, *GetPermissionsRqst) (*GetPermissionsRsp, error)
	//* Set a file permission, create new one if not already exist. *
	SetPermission(context.Context, *SetPermissionRqst) (*SetPermissionRsp, error)
	//* Delete a file permissions *
	DeletePermissions(context.Context, *DeletePermissionsRqst) (*DeletePermissionsRsp, error)
	//* Set Ressource owner *
	SetRessourceOwner(context.Context, *SetRessourceOwnerRqst) (*SetRessourceOwnerRsp, error)
	//* Get the ressource owners *
	GetRessourceOwners(context.Context, *GetRessourceOwnersRqst) (*GetRessourceOwnersRsp, error)
	//* Delete the ressource owner *
	DeleteRessourceOwner(context.Context, *DeleteRessourceOwnerRqst) (*DeleteRessourceOwnerRsp, error)
	//* Delete the ressource owners *
	DeleteRessourceOwners(context.Context, *DeleteRessourceOwnersRqst) (*DeleteRessourceOwnersRsp, error)
	//* Retrun a json string with all file info *
	GetAllFilesInfo(context.Context, *GetAllFilesInfoRqst) (*GetAllFilesInfoRsp, error)
	//* Validate a token *
	ValidateToken(context.Context, *ValidateTokenRqst) (*ValidateTokenRsp, error)
	//* Validate if user can access a given ressource. *
	ValidateUserRessourceAccess(context.Context, *ValidateUserRessourceAccessRqst) (*ValidateUserRessourceAccessRsp, error)
	//* Validate if application can access a given ressouce. *
	ValidateApplicationRessourceAccess(context.Context, *ValidateApplicationRessourceAccessRqst) (*ValidateApplicationRessourceAccessRsp, error)
	//* Validate if user can access a given method. *
	ValidateUserAccess(context.Context, *ValidateUserAccessRqst) (*ValidateUserAccessRsp, error)
	//* Validate if application can access a given method. *
	ValidateApplicationAccess(context.Context, *ValidateApplicationAccessRqst) (*ValidateApplicationAccessRsp, error)
	//* Validate if a peer can access a given method. *
	ValidatePeerAccess(context.Context, *ValidatePeerAccessRqst) (*ValidatePeerAccessRsp, error)
	//* Validate if a peer can access a given ressource. *
	ValidatePeerRessourceAccess(context.Context, *ValidatePeerRessourceAccessRqst) (*ValidatePeerRessourceAccessRsp, error)
	//* Delete all permission for a given account *
	DeleteAccountPermissions(context.Context, *DeleteAccountPermissionsRqst) (*DeleteAccountPermissionsRsp, error)
	//* Delete all permission for a given role *
	DeleteRolePermissions(context.Context, *DeleteRolePermissionsRqst) (*DeleteRolePermissionsRsp, error)
	//* Return a json string with all applications informations *
	GetAllApplicationsInfo(context.Context, *GetAllApplicationsInfoRqst) (*GetAllApplicationsInfoRsp, error)
	//* Delete an application from the server. *
	DeleteApplication(context.Context, *DeleteApplicationRqst) (*DeleteApplicationRsp, error)
	//* Set a method into the log... *
	Log(context.Context, *LogRqst) (*LogRsp, error)
	//* Get the list of logs *
	GetLog(*GetLogRqst, RessourceService_GetLogServer) error
	//* Delete a single log entry *
	DeleteLog(context.Context, *DeleteLogRqst) (*DeleteLogRsp, error)
	//* Delete all log *
	ClearAllLog(context.Context, *ClearAllLogRqst) (*ClearAllLogRsp, error)
	//* Get all ressources
	GetRessources(*GetRessourcesRqst, RessourceService_GetRessourcesServer) error
	//* Set a ressource from a client (custom service) to globular
	SetRessource(context.Context, *SetRessourceRqst) (*SetRessourceRsp, error)
	//* Remove a ressource from a client (custom service) to globular
	RemoveRessource(context.Context, *RemoveRessourceRqst) (*RemoveRessourceRsp, error)
	//* Set ressource action permission *
	SetActionPermission(context.Context, *SetActionPermissionRqst) (*SetActionPermissionRsp, error)
	//* Remove ressource action permission *
	RemoveActionPermission(context.Context, *RemoveActionPermissionRqst) (*RemoveActionPermissionRsp, error)
	//* Get ressource action permission *
	GetActionPermission(context.Context, *GetActionPermissionRqst) (*GetActionPermissionRsp, error)
	//* Create Permission for a dir (recursive) *
	CreateDirPermissions(context.Context, *CreateDirPermissionsRqst) (*CreateDirPermissionsRsp, error)
	//* Rename file/dir permission *
	RenameFilePermission(context.Context, *RenameFilePermissionRqst) (*RenameFilePermissionRsp, error)
	//* Delete Permission for a dir (recursive) *
	DeleteDirPermissions(context.Context, *DeleteDirPermissionsRqst) (*DeleteDirPermissionsRsp, error)
	//* Delete a single file permission *
	DeleteFilePermissions(context.Context, *DeleteFilePermissionsRqst) (*DeleteFilePermissionsRsp, error)
}

// UnimplementedRessourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRessourceServiceServer struct {
}

func (*UnimplementedRessourceServiceServer) RegisterPeer(context.Context, *RegisterPeerRqst) (*RegisterPeerRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterPeer not implemented")
}
func (*UnimplementedRessourceServiceServer) GetPeers(*GetPeersRqst, RessourceService_GetPeersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPeers not implemented")
}
func (*UnimplementedRessourceServiceServer) DeletePeer(context.Context, *DeletePeerRqst) (*DeletePeerRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePeer not implemented")
}
func (*UnimplementedRessourceServiceServer) AddPeerAction(context.Context, *AddPeerActionRqst) (*AddPeerActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPeerAction not implemented")
}
func (*UnimplementedRessourceServiceServer) RemovePeerAction(context.Context, *RemovePeerActionRqst) (*RemovePeerActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePeerAction not implemented")
}
func (*UnimplementedRessourceServiceServer) RegisterAccount(context.Context, *RegisterAccountRqst) (*RegisterAccountRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterAccount not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteAccount(context.Context, *DeleteAccountRqst) (*DeleteAccountRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedRessourceServiceServer) Authenticate(context.Context, *AuthenticateRqst) (*AuthenticateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedRessourceServiceServer) SynchronizeLdap(context.Context, *SynchronizeLdapRqst) (*SynchronizeLdapRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SynchronizeLdap not implemented")
}
func (*UnimplementedRessourceServiceServer) RefreshToken(context.Context, *RefreshTokenRqst) (*RefreshTokenRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (*UnimplementedRessourceServiceServer) AddAccountRole(context.Context, *AddAccountRoleRqst) (*AddAccountRoleRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAccountRole not implemented")
}
func (*UnimplementedRessourceServiceServer) RemoveAccountRole(context.Context, *RemoveAccountRoleRqst) (*RemoveAccountRoleRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAccountRole not implemented")
}
func (*UnimplementedRessourceServiceServer) CreateRole(context.Context, *CreateRoleRqst) (*CreateRoleRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteRole(context.Context, *DeleteRoleRqst) (*DeleteRoleRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedRessourceServiceServer) AddRoleAction(context.Context, *AddRoleActionRqst) (*AddRoleActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRoleAction not implemented")
}
func (*UnimplementedRessourceServiceServer) RemoveRoleAction(context.Context, *RemoveRoleActionRqst) (*RemoveRoleActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRoleAction not implemented")
}
func (*UnimplementedRessourceServiceServer) AddApplicationAction(context.Context, *AddApplicationActionRqst) (*AddApplicationActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddApplicationAction not implemented")
}
func (*UnimplementedRessourceServiceServer) RemoveApplicationAction(context.Context, *RemoveApplicationActionRqst) (*RemoveApplicationActionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveApplicationAction not implemented")
}
func (*UnimplementedRessourceServiceServer) GetAllActions(context.Context, *GetAllActionsRqst) (*GetAllActionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllActions not implemented")
}
func (*UnimplementedRessourceServiceServer) GetPermissions(context.Context, *GetPermissionsRqst) (*GetPermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) SetPermission(context.Context, *SetPermissionRqst) (*SetPermissionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPermission not implemented")
}
func (*UnimplementedRessourceServiceServer) DeletePermissions(context.Context, *DeletePermissionsRqst) (*DeletePermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) SetRessourceOwner(context.Context, *SetRessourceOwnerRqst) (*SetRessourceOwnerRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRessourceOwner not implemented")
}
func (*UnimplementedRessourceServiceServer) GetRessourceOwners(context.Context, *GetRessourceOwnersRqst) (*GetRessourceOwnersRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRessourceOwners not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteRessourceOwner(context.Context, *DeleteRessourceOwnerRqst) (*DeleteRessourceOwnerRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRessourceOwner not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteRessourceOwners(context.Context, *DeleteRessourceOwnersRqst) (*DeleteRessourceOwnersRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRessourceOwners not implemented")
}
func (*UnimplementedRessourceServiceServer) GetAllFilesInfo(context.Context, *GetAllFilesInfoRqst) (*GetAllFilesInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFilesInfo not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidateToken(context.Context, *ValidateTokenRqst) (*ValidateTokenRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateToken not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidateUserRessourceAccess(context.Context, *ValidateUserRessourceAccessRqst) (*ValidateUserRessourceAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateUserRessourceAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidateApplicationRessourceAccess(context.Context, *ValidateApplicationRessourceAccessRqst) (*ValidateApplicationRessourceAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateApplicationRessourceAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidateUserAccess(context.Context, *ValidateUserAccessRqst) (*ValidateUserAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateUserAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidateApplicationAccess(context.Context, *ValidateApplicationAccessRqst) (*ValidateApplicationAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateApplicationAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidatePeerAccess(context.Context, *ValidatePeerAccessRqst) (*ValidatePeerAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatePeerAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) ValidatePeerRessourceAccess(context.Context, *ValidatePeerRessourceAccessRqst) (*ValidatePeerRessourceAccessRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatePeerRessourceAccess not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteAccountPermissions(context.Context, *DeleteAccountPermissionsRqst) (*DeleteAccountPermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccountPermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteRolePermissions(context.Context, *DeleteRolePermissionsRqst) (*DeleteRolePermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRolePermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) GetAllApplicationsInfo(context.Context, *GetAllApplicationsInfoRqst) (*GetAllApplicationsInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllApplicationsInfo not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteApplication(context.Context, *DeleteApplicationRqst) (*DeleteApplicationRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApplication not implemented")
}
func (*UnimplementedRessourceServiceServer) Log(context.Context, *LogRqst) (*LogRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Log not implemented")
}
func (*UnimplementedRessourceServiceServer) GetLog(*GetLogRqst, RessourceService_GetLogServer) error {
	return status.Errorf(codes.Unimplemented, "method GetLog not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteLog(context.Context, *DeleteLogRqst) (*DeleteLogRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLog not implemented")
}
func (*UnimplementedRessourceServiceServer) ClearAllLog(context.Context, *ClearAllLogRqst) (*ClearAllLogRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearAllLog not implemented")
}
func (*UnimplementedRessourceServiceServer) GetRessources(*GetRessourcesRqst, RessourceService_GetRessourcesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRessources not implemented")
}
func (*UnimplementedRessourceServiceServer) SetRessource(context.Context, *SetRessourceRqst) (*SetRessourceRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRessource not implemented")
}
func (*UnimplementedRessourceServiceServer) RemoveRessource(context.Context, *RemoveRessourceRqst) (*RemoveRessourceRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRessource not implemented")
}
func (*UnimplementedRessourceServiceServer) SetActionPermission(context.Context, *SetActionPermissionRqst) (*SetActionPermissionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetActionPermission not implemented")
}
func (*UnimplementedRessourceServiceServer) RemoveActionPermission(context.Context, *RemoveActionPermissionRqst) (*RemoveActionPermissionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveActionPermission not implemented")
}
func (*UnimplementedRessourceServiceServer) GetActionPermission(context.Context, *GetActionPermissionRqst) (*GetActionPermissionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionPermission not implemented")
}
func (*UnimplementedRessourceServiceServer) CreateDirPermissions(context.Context, *CreateDirPermissionsRqst) (*CreateDirPermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDirPermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) RenameFilePermission(context.Context, *RenameFilePermissionRqst) (*RenameFilePermissionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameFilePermission not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteDirPermissions(context.Context, *DeleteDirPermissionsRqst) (*DeleteDirPermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDirPermissions not implemented")
}
func (*UnimplementedRessourceServiceServer) DeleteFilePermissions(context.Context, *DeleteFilePermissionsRqst) (*DeleteFilePermissionsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFilePermissions not implemented")
}

func RegisterRessourceServiceServer(s *grpc.Server, srv RessourceServiceServer) {
	s.RegisterService(&_RessourceService_serviceDesc, srv)
}

func _RessourceService_RegisterPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterPeerRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RegisterPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RegisterPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RegisterPeer(ctx, req.(*RegisterPeerRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetPeers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPeersRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RessourceServiceServer).GetPeers(m, &ressourceServiceGetPeersServer{stream})
}

type RessourceService_GetPeersServer interface {
	Send(*GetPeersRsp) error
	grpc.ServerStream
}

type ressourceServiceGetPeersServer struct {
	grpc.ServerStream
}

func (x *ressourceServiceGetPeersServer) Send(m *GetPeersRsp) error {
	return x.ServerStream.SendMsg(m)
}

func _RessourceService_DeletePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePeerRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeletePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeletePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeletePeer(ctx, req.(*DeletePeerRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_AddPeerAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).AddPeerAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/AddPeerAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).AddPeerAction(ctx, req.(*AddPeerActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemovePeerAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePeerActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemovePeerAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemovePeerAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemovePeerAction(ctx, req.(*RemovePeerActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RegisterAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterAccountRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RegisterAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RegisterAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RegisterAccount(ctx, req.(*RegisterAccountRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteAccount(ctx, req.(*DeleteAccountRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).Authenticate(ctx, req.(*AuthenticateRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_SynchronizeLdap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SynchronizeLdapRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).SynchronizeLdap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/SynchronizeLdap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).SynchronizeLdap(ctx, req.(*SynchronizeLdapRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RefreshToken(ctx, req.(*RefreshTokenRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_AddAccountRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAccountRoleRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).AddAccountRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/AddAccountRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).AddAccountRole(ctx, req.(*AddAccountRoleRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemoveAccountRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAccountRoleRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemoveAccountRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemoveAccountRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemoveAccountRole(ctx, req.(*RemoveAccountRoleRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).CreateRole(ctx, req.(*CreateRoleRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteRole(ctx, req.(*DeleteRoleRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_AddRoleAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRoleActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).AddRoleAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/AddRoleAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).AddRoleAction(ctx, req.(*AddRoleActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemoveRoleAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRoleActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemoveRoleAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemoveRoleAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemoveRoleAction(ctx, req.(*RemoveRoleActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_AddApplicationAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddApplicationActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).AddApplicationAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/AddApplicationAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).AddApplicationAction(ctx, req.(*AddApplicationActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemoveApplicationAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveApplicationActionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemoveApplicationAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemoveApplicationAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemoveApplicationAction(ctx, req.(*RemoveApplicationActionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetAllActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllActionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetAllActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetAllActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetAllActions(ctx, req.(*GetAllActionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetPermissions(ctx, req.(*GetPermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_SetPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPermissionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).SetPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/SetPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).SetPermission(ctx, req.(*SetPermissionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeletePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeletePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeletePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeletePermissions(ctx, req.(*DeletePermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_SetRessourceOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRessourceOwnerRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).SetRessourceOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/SetRessourceOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).SetRessourceOwner(ctx, req.(*SetRessourceOwnerRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetRessourceOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRessourceOwnersRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetRessourceOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetRessourceOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetRessourceOwners(ctx, req.(*GetRessourceOwnersRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteRessourceOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRessourceOwnerRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteRessourceOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteRessourceOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteRessourceOwner(ctx, req.(*DeleteRessourceOwnerRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteRessourceOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRessourceOwnersRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteRessourceOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteRessourceOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteRessourceOwners(ctx, req.(*DeleteRessourceOwnersRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetAllFilesInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFilesInfoRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetAllFilesInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetAllFilesInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetAllFilesInfo(ctx, req.(*GetAllFilesInfoRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateTokenRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidateToken(ctx, req.(*ValidateTokenRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidateUserRessourceAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateUserRessourceAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidateUserRessourceAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidateUserRessourceAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidateUserRessourceAccess(ctx, req.(*ValidateUserRessourceAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidateApplicationRessourceAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateApplicationRessourceAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidateApplicationRessourceAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidateApplicationRessourceAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidateApplicationRessourceAccess(ctx, req.(*ValidateApplicationRessourceAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidateUserAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateUserAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidateUserAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidateUserAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidateUserAccess(ctx, req.(*ValidateUserAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidateApplicationAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateApplicationAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidateApplicationAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidateApplicationAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidateApplicationAccess(ctx, req.(*ValidateApplicationAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidatePeerAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatePeerAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidatePeerAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidatePeerAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidatePeerAccess(ctx, req.(*ValidatePeerAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ValidatePeerRessourceAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatePeerRessourceAccessRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ValidatePeerRessourceAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ValidatePeerRessourceAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ValidatePeerRessourceAccess(ctx, req.(*ValidatePeerRessourceAccessRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteAccountPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountPermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteAccountPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteAccountPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteAccountPermissions(ctx, req.(*DeleteAccountPermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteRolePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRolePermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteRolePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteRolePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteRolePermissions(ctx, req.(*DeleteRolePermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetAllApplicationsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllApplicationsInfoRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetAllApplicationsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetAllApplicationsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetAllApplicationsInfo(ctx, req.(*GetAllApplicationsInfoRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApplicationRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteApplication(ctx, req.(*DeleteApplicationRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).Log(ctx, req.(*LogRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLogRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RessourceServiceServer).GetLog(m, &ressourceServiceGetLogServer{stream})
}

type RessourceService_GetLogServer interface {
	Send(*GetLogRsp) error
	grpc.ServerStream
}

type ressourceServiceGetLogServer struct {
	grpc.ServerStream
}

func (x *ressourceServiceGetLogServer) Send(m *GetLogRsp) error {
	return x.ServerStream.SendMsg(m)
}

func _RessourceService_DeleteLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLogRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteLog(ctx, req.(*DeleteLogRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_ClearAllLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearAllLogRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).ClearAllLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/ClearAllLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).ClearAllLog(ctx, req.(*ClearAllLogRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetRessources_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRessourcesRqst)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RessourceServiceServer).GetRessources(m, &ressourceServiceGetRessourcesServer{stream})
}

type RessourceService_GetRessourcesServer interface {
	Send(*GetRessourcesRsp) error
	grpc.ServerStream
}

type ressourceServiceGetRessourcesServer struct {
	grpc.ServerStream
}

func (x *ressourceServiceGetRessourcesServer) Send(m *GetRessourcesRsp) error {
	return x.ServerStream.SendMsg(m)
}

func _RessourceService_SetRessource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRessourceRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).SetRessource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/SetRessource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).SetRessource(ctx, req.(*SetRessourceRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemoveRessource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRessourceRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemoveRessource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemoveRessource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemoveRessource(ctx, req.(*RemoveRessourceRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_SetActionPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetActionPermissionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).SetActionPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/SetActionPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).SetActionPermission(ctx, req.(*SetActionPermissionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RemoveActionPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveActionPermissionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RemoveActionPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RemoveActionPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RemoveActionPermission(ctx, req.(*RemoveActionPermissionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_GetActionPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionPermissionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).GetActionPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/GetActionPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).GetActionPermission(ctx, req.(*GetActionPermissionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_CreateDirPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDirPermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).CreateDirPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/CreateDirPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).CreateDirPermissions(ctx, req.(*CreateDirPermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_RenameFilePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameFilePermissionRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).RenameFilePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/RenameFilePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).RenameFilePermission(ctx, req.(*RenameFilePermissionRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteDirPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDirPermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteDirPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteDirPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteDirPermissions(ctx, req.(*DeleteDirPermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

func _RessourceService_DeleteFilePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFilePermissionsRqst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RessourceServiceServer).DeleteFilePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ressource.RessourceService/DeleteFilePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RessourceServiceServer).DeleteFilePermissions(ctx, req.(*DeleteFilePermissionsRqst))
	}
	return interceptor(ctx, in, info, handler)
}

var _RessourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ressource.RessourceService",
	HandlerType: (*RessourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterPeer",
			Handler:    _RessourceService_RegisterPeer_Handler,
		},
		{
			MethodName: "DeletePeer",
			Handler:    _RessourceService_DeletePeer_Handler,
		},
		{
			MethodName: "AddPeerAction",
			Handler:    _RessourceService_AddPeerAction_Handler,
		},
		{
			MethodName: "RemovePeerAction",
			Handler:    _RessourceService_RemovePeerAction_Handler,
		},
		{
			MethodName: "RegisterAccount",
			Handler:    _RessourceService_RegisterAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _RessourceService_DeleteAccount_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _RessourceService_Authenticate_Handler,
		},
		{
			MethodName: "SynchronizeLdap",
			Handler:    _RessourceService_SynchronizeLdap_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _RessourceService_RefreshToken_Handler,
		},
		{
			MethodName: "AddAccountRole",
			Handler:    _RessourceService_AddAccountRole_Handler,
		},
		{
			MethodName: "RemoveAccountRole",
			Handler:    _RessourceService_RemoveAccountRole_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _RessourceService_CreateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _RessourceService_DeleteRole_Handler,
		},
		{
			MethodName: "AddRoleAction",
			Handler:    _RessourceService_AddRoleAction_Handler,
		},
		{
			MethodName: "RemoveRoleAction",
			Handler:    _RessourceService_RemoveRoleAction_Handler,
		},
		{
			MethodName: "AddApplicationAction",
			Handler:    _RessourceService_AddApplicationAction_Handler,
		},
		{
			MethodName: "RemoveApplicationAction",
			Handler:    _RessourceService_RemoveApplicationAction_Handler,
		},
		{
			MethodName: "GetAllActions",
			Handler:    _RessourceService_GetAllActions_Handler,
		},
		{
			MethodName: "GetPermissions",
			Handler:    _RessourceService_GetPermissions_Handler,
		},
		{
			MethodName: "SetPermission",
			Handler:    _RessourceService_SetPermission_Handler,
		},
		{
			MethodName: "DeletePermissions",
			Handler:    _RessourceService_DeletePermissions_Handler,
		},
		{
			MethodName: "SetRessourceOwner",
			Handler:    _RessourceService_SetRessourceOwner_Handler,
		},
		{
			MethodName: "GetRessourceOwners",
			Handler:    _RessourceService_GetRessourceOwners_Handler,
		},
		{
			MethodName: "DeleteRessourceOwner",
			Handler:    _RessourceService_DeleteRessourceOwner_Handler,
		},
		{
			MethodName: "DeleteRessourceOwners",
			Handler:    _RessourceService_DeleteRessourceOwners_Handler,
		},
		{
			MethodName: "GetAllFilesInfo",
			Handler:    _RessourceService_GetAllFilesInfo_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _RessourceService_ValidateToken_Handler,
		},
		{
			MethodName: "ValidateUserRessourceAccess",
			Handler:    _RessourceService_ValidateUserRessourceAccess_Handler,
		},
		{
			MethodName: "ValidateApplicationRessourceAccess",
			Handler:    _RessourceService_ValidateApplicationRessourceAccess_Handler,
		},
		{
			MethodName: "ValidateUserAccess",
			Handler:    _RessourceService_ValidateUserAccess_Handler,
		},
		{
			MethodName: "ValidateApplicationAccess",
			Handler:    _RessourceService_ValidateApplicationAccess_Handler,
		},
		{
			MethodName: "ValidatePeerAccess",
			Handler:    _RessourceService_ValidatePeerAccess_Handler,
		},
		{
			MethodName: "ValidatePeerRessourceAccess",
			Handler:    _RessourceService_ValidatePeerRessourceAccess_Handler,
		},
		{
			MethodName: "DeleteAccountPermissions",
			Handler:    _RessourceService_DeleteAccountPermissions_Handler,
		},
		{
			MethodName: "DeleteRolePermissions",
			Handler:    _RessourceService_DeleteRolePermissions_Handler,
		},
		{
			MethodName: "GetAllApplicationsInfo",
			Handler:    _RessourceService_GetAllApplicationsInfo_Handler,
		},
		{
			MethodName: "DeleteApplication",
			Handler:    _RessourceService_DeleteApplication_Handler,
		},
		{
			MethodName: "Log",
			Handler:    _RessourceService_Log_Handler,
		},
		{
			MethodName: "DeleteLog",
			Handler:    _RessourceService_DeleteLog_Handler,
		},
		{
			MethodName: "ClearAllLog",
			Handler:    _RessourceService_ClearAllLog_Handler,
		},
		{
			MethodName: "SetRessource",
			Handler:    _RessourceService_SetRessource_Handler,
		},
		{
			MethodName: "RemoveRessource",
			Handler:    _RessourceService_RemoveRessource_Handler,
		},
		{
			MethodName: "SetActionPermission",
			Handler:    _RessourceService_SetActionPermission_Handler,
		},
		{
			MethodName: "RemoveActionPermission",
			Handler:    _RessourceService_RemoveActionPermission_Handler,
		},
		{
			MethodName: "GetActionPermission",
			Handler:    _RessourceService_GetActionPermission_Handler,
		},
		{
			MethodName: "CreateDirPermissions",
			Handler:    _RessourceService_CreateDirPermissions_Handler,
		},
		{
			MethodName: "RenameFilePermission",
			Handler:    _RessourceService_RenameFilePermission_Handler,
		},
		{
			MethodName: "DeleteDirPermissions",
			Handler:    _RessourceService_DeleteDirPermissions_Handler,
		},
		{
			MethodName: "DeleteFilePermissions",
			Handler:    _RessourceService_DeleteFilePermissions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPeers",
			Handler:       _RessourceService_GetPeers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetLog",
			Handler:       _RessourceService_GetLog_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetRessources",
			Handler:       _RessourceService_GetRessources_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/ressource.proto",
}

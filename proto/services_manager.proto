syntax = "proto3";
package services_manager;

import "google/protobuf/struct.proto";

option go_package="services_manager/services_managerpb";

message UploadServicePackageRequest{
	string user = 1;
	string organization = 2;
	bytes data = 3;
}

message UploadServicePackageResponse{
	string path = 1;
}

message InstallServiceRequest{
	string dicorveryId = 1;
	string serviceId = 2;
	string publisherId = 3;
	string version = 4;
}

message InstallServiceResponse{
	bool result = 1;
}

message UninstallServiceRequest{
	string serviceId = 1;
	string publisherId = 2;
	string version = 3;
	bool deletePermissions = 4;
}

message UninstallServiceResponse{
	bool result = 1;
}

message StopServiceInstanceRequest {
  string service_id = 1;
}

message StopServiceInstanceResponse {
  bool result = 1;
}

message StartServiceInstanceRequest {
  string service_id = 1;
}

// Return the pid of the started service.
message StartServiceInstanceResponse {
  int64 service_pid = 1;
  int64 proxy_pid = 2;
}

// Restart all services.
message RestartAllServicesRequest {
}

message RestartAllServicesResponse {
}

message GetServicesConfigRequest {
  
}

message GetServicesConfigResponse {
  repeated google.protobuf.Struct configs = 1;
}

message GetServiceConfigRequest {
  string serviceId = 1;
}

message GetServiceConfigResponse {
  google.protobuf.Struct config = 1;
}

message SaveServiceConfigRequest {
  google.protobuf.Struct config = 1;
}

message SaveServiceConfigResponse {
  
}


service ServicesManagerService {

  // Install a service...
  rpc InstallService(InstallServiceRequest) returns (InstallServiceResponse);

  // Uninstall a service...
  rpc UninstallService(UninstallServiceRequest) returns (UninstallServiceResponse);
  
  // Stop a service
  rpc StopServiceInstance(StopServiceInstanceRequest) returns (StopServiceInstanceResponse);

  // Start a service
  rpc StartServiceInstance(StartServiceInstanceRequest) returns (StartServiceInstanceResponse);

  // Restart all Services also the http(s)
  rpc RestartAllServices(RestartAllServicesRequest) returns (RestartAllServicesResponse);

  // Return the list of services configurations.
  rpc GetServicesConfig(GetServicesConfigRequest) returns (GetServicesConfigResponse);
  
  // Return the config of a particular service from it id.
  rpc GetServiceConfig(GetServiceConfigRequest) returns (GetServiceConfigResponse);

  // Save a service config.
  rpc SaveServiceConfig(SaveServiceConfigRequest) returns (SaveServiceConfigResponse);
}

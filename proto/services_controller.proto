/**
 * Admin functionality.
 */
syntax = "proto3";
package services_controller;

option go_package="services_controller/services_controllerpb";

message InstallServiceRequest{
	string dicorveryId = 1;
	string serviceId = 2;
	string publisherId = 3;
	string version = 4;
}

message InstallServiceResponse{
	bool result = 1;
}

message UninstallServiceRequest{
	string serviceId = 1;
	string publisherId = 2;
	string version = 3;
	bool deletePermissions = 4;
}  

message UninstallServiceResponse{
	bool result = 1;
}

message StopServiceRequest {
  string service_id = 1;
}

message StopServiceResponse {
  bool result = 1;
}

message StartServiceRequest {
  string service_id = 1;
}

// Return the pid of the started service.
message StartServiceResponse {
  int64 service_pid = 1;
  int64 proxy_pid = 2;
}

// Restart all services.
message RestartServicesRequest {
}

message RestartServicesResponse {
}


service ServicesControllerService {
  
  // Install a service...
  rpc InstallService(InstallServiceRequest) returns (InstallServiceResponse);

  // Uninstall a service...
  rpc UninstallService(UninstallServiceRequest) returns (UninstallServiceResponse);
  
  // Stop a service
  rpc StopService(StopServiceRequest) returns (StopServiceResponse);

  // Start a service
  rpc StartService(StartServiceRequest) returns (StartServiceResponse);

  // Restart all Services also the http(s)
  rpc RestartServices(RestartServicesRequest) returns (RestartServicesResponse);

}
